// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: fund/v1/fund_types.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 资金业务错误码枚举
type FundErrorCode int32

const (
	FundErrorCode_FUND_ERROR_CODE_UNSPECIFIED FundErrorCode = 0 // 未指定错误
	// 成功状态
	FundErrorCode_ERROR_CODE_SUCCESS FundErrorCode = 200 // 操作成功
	// 客户端错误 4xx
	FundErrorCode_ERROR_CODE_BAD_REQUEST          FundErrorCode = 400 // 请求参数错误
	FundErrorCode_ERROR_CODE_UNAUTHORIZED         FundErrorCode = 401 // 未授权
	FundErrorCode_ERROR_CODE_FORBIDDEN            FundErrorCode = 403 // 禁止访问
	FundErrorCode_ERROR_CODE_NOT_FOUND            FundErrorCode = 404 // 资源未找到
	FundErrorCode_ERROR_CODE_METHOD_NOT_ALLOWED   FundErrorCode = 405 // 方法不允许
	FundErrorCode_ERROR_CODE_CONFLICT             FundErrorCode = 409 // 资源冲突
	FundErrorCode_ERROR_CODE_UNPROCESSABLE_ENTITY FundErrorCode = 422 // 请求格式正确但语义错误
	FundErrorCode_ERROR_CODE_TOO_MANY_REQUESTS    FundErrorCode = 429 // 请求过于频繁
	// 服务端错误 5xx
	FundErrorCode_ERROR_CODE_INTERNAL_SERVER_ERROR FundErrorCode = 500 // 服务器内部错误
	FundErrorCode_ERROR_CODE_NOT_IMPLEMENTED       FundErrorCode = 501 // 功能未实现
	FundErrorCode_ERROR_CODE_BAD_GATEWAY           FundErrorCode = 502 // 网关错误或第三方服务异常
	FundErrorCode_ERROR_CODE_SERVICE_UNAVAILABLE   FundErrorCode = 503 // 服务不可用
	FundErrorCode_ERROR_CODE_GATEWAY_TIMEOUT       FundErrorCode = 504 // 网关超时
	// 账户相关错误 1000-1099
	FundErrorCode_FUND_ERROR_CODE_ACCOUNT_NOT_FOUND FundErrorCode = 1000 // 账户不存在
	FundErrorCode_FUND_ERROR_CODE_ACCOUNT_FROZEN    FundErrorCode = 1001 // 账户已冻结
	FundErrorCode_FUND_ERROR_CODE_ACCOUNT_DISABLED  FundErrorCode = 1002 // 账户已禁用
	FundErrorCode_FUND_ERROR_CODE_ACCOUNT_LOCKED    FundErrorCode = 1003 // 账户已锁定
	FundErrorCode_FUND_ERROR_CODE_MULTIPLE_ACCOUNTS FundErrorCode = 1004 // 存在多个账户
	// 余额相关错误 1100-1199
	FundErrorCode_FUND_ERROR_CODE_INSUFFICIENT_BALANCE      FundErrorCode = 1100 // 余额不足
	FundErrorCode_FUND_ERROR_CODE_BALANCE_LIMIT_EXCEEDED    FundErrorCode = 1101 // 超出余额限制
	FundErrorCode_FUND_ERROR_CODE_NEGATIVE_BALANCE          FundErrorCode = 1102 // 余额为负数
	FundErrorCode_FUND_ERROR_CODE_BALANCE_FROZEN            FundErrorCode = 1103 // 余额已冻结
	FundErrorCode_FUND_ERROR_CODE_BALANCE_CALCULATION_ERROR FundErrorCode = 1104 // 余额计算错误
	// 交易相关错误 1200-1299
	FundErrorCode_FUND_ERROR_CODE_INVALID_AMOUNT                FundErrorCode = 1200 // 金额无效
	FundErrorCode_FUND_ERROR_CODE_AMOUNT_TOO_SMALL              FundErrorCode = 1201 // 金额过小
	FundErrorCode_FUND_ERROR_CODE_AMOUNT_TOO_LARGE              FundErrorCode = 1202 // 金额过大
	FundErrorCode_FUND_ERROR_CODE_INVALID_CURRENCY              FundErrorCode = 1203 // 货币类型无效
	FundErrorCode_FUND_ERROR_CODE_CURRENCY_NOT_SUPPORTED        FundErrorCode = 1204 // 不支持的货币类型
	FundErrorCode_FUND_ERROR_CODE_TRANSACTION_EXPIRED           FundErrorCode = 1205 // 交易已过期
	FundErrorCode_FUND_ERROR_CODE_TRANSACTION_CANCELLED         FundErrorCode = 1206 // 交易已取消
	FundErrorCode_FUND_ERROR_CODE_TRANSACTION_FAILED            FundErrorCode = 1207 // 交易失败
	FundErrorCode_FUND_ERROR_CODE_DUPLICATE_TRANSACTION         FundErrorCode = 1208 // 重复交易
	FundErrorCode_FUND_ERROR_CODE_TRANSACTION_NOT_FOUND         FundErrorCode = 1209 // 交易记录不存在
	FundErrorCode_FUND_ERROR_CODE_TRANSACTION_ALREADY_PROCESSED FundErrorCode = 1210 // 交易已处理
	// 转账相关错误 1300-1399
	FundErrorCode_FUND_ERROR_CODE_TRANSFER_LIMIT_EXCEEDED FundErrorCode = 1300 // 超出转账限制
	FundErrorCode_FUND_ERROR_CODE_DAILY_LIMIT_EXCEEDED    FundErrorCode = 1301 // 超出日限额
	FundErrorCode_FUND_ERROR_CODE_MONTHLY_LIMIT_EXCEEDED  FundErrorCode = 1302 // 超出月限额
	FundErrorCode_FUND_ERROR_CODE_TRANSFER_NOT_ALLOWED    FundErrorCode = 1303 // 不允许转账
	FundErrorCode_FUND_ERROR_CODE_SAME_ACCOUNT_TRANSFER   FundErrorCode = 1304 // 同账户转账
	FundErrorCode_FUND_ERROR_CODE_INVALID_RECIPIENT       FundErrorCode = 1305 // 收款方无效
	// 支付相关错误 1400-1499
	FundErrorCode_FUND_ERROR_CODE_PAYMENT_METHOD_NOT_SUPPORTED FundErrorCode = 1400 // 不支持的支付方式
	FundErrorCode_FUND_ERROR_CODE_PAYMENT_GATEWAY_ERROR        FundErrorCode = 1401 // 支付网关错误
	FundErrorCode_FUND_ERROR_CODE_PAYMENT_DECLINED             FundErrorCode = 1402 // 支付被拒绝
	FundErrorCode_FUND_ERROR_CODE_PAYMENT_TIMEOUT              FundErrorCode = 1403 // 支付超时
	FundErrorCode_FUND_ERROR_CODE_PAYMENT_CANCELLED            FundErrorCode = 1404 // 支付已取消
	FundErrorCode_FUND_ERROR_CODE_PAYMENT_PENDING              FundErrorCode = 1405 // 支付待处理
	// 风控相关错误 1500-1599
	FundErrorCode_FUND_ERROR_CODE_RISK_CONTROL_BLOCKED      FundErrorCode = 1500 // 风控阻止
	FundErrorCode_FUND_ERROR_CODE_SUSPICIOUS_ACTIVITY       FundErrorCode = 1501 // 可疑活动
	FundErrorCode_FUND_ERROR_CODE_FRAUD_DETECTED            FundErrorCode = 1502 // 检测到欺诈
	FundErrorCode_FUND_ERROR_CODE_AML_CHECK_FAILED          FundErrorCode = 1503 // 反洗钱检查失败
	FundErrorCode_FUND_ERROR_CODE_KYC_VERIFICATION_REQUIRED FundErrorCode = 1504 // 需要身份验证
	// 系统相关错误 1600-1699
	FundErrorCode_FUND_ERROR_CODE_DATABASE_ERROR         FundErrorCode = 1600 // 数据库错误
	FundErrorCode_FUND_ERROR_CODE_CACHE_ERROR            FundErrorCode = 1601 // 缓存错误
	FundErrorCode_FUND_ERROR_CODE_QUEUE_ERROR            FundErrorCode = 1602 // 队列错误
	FundErrorCode_FUND_ERROR_CODE_EXTERNAL_SERVICE_ERROR FundErrorCode = 1603 // 外部服务错误
	FundErrorCode_FUND_ERROR_CODE_CONFIGURATION_ERROR    FundErrorCode = 1604 // 配置错误
	FundErrorCode_FUND_ERROR_CODE_NETWORK_ERROR          FundErrorCode = 1605 // 网络错误
	FundErrorCode_FUND_ERROR_CODE_TIMEOUT_ERROR          FundErrorCode = 1606 // 超时错误
	// 业务规则错误 1700-1799
	FundErrorCode_FUND_ERROR_CODE_BUSINESS_HOURS_RESTRICTION FundErrorCode = 1700 // 营业时间限制
	FundErrorCode_FUND_ERROR_CODE_MAINTENANCE_MODE           FundErrorCode = 1701 // 维护模式
	FundErrorCode_FUND_ERROR_CODE_FEATURE_DISABLED           FundErrorCode = 1702 // 功能已禁用
	FundErrorCode_FUND_ERROR_CODE_REGION_NOT_SUPPORTED       FundErrorCode = 1703 // 地区不支持
	FundErrorCode_FUND_ERROR_CODE_USER_LEVEL_RESTRICTION     FundErrorCode = 1704 // 用户等级限制
)

// Enum value maps for FundErrorCode.
var (
	FundErrorCode_name = map[int32]string{
		0:    "FUND_ERROR_CODE_UNSPECIFIED",
		200:  "ERROR_CODE_SUCCESS",
		400:  "ERROR_CODE_BAD_REQUEST",
		401:  "ERROR_CODE_UNAUTHORIZED",
		403:  "ERROR_CODE_FORBIDDEN",
		404:  "ERROR_CODE_NOT_FOUND",
		405:  "ERROR_CODE_METHOD_NOT_ALLOWED",
		409:  "ERROR_CODE_CONFLICT",
		422:  "ERROR_CODE_UNPROCESSABLE_ENTITY",
		429:  "ERROR_CODE_TOO_MANY_REQUESTS",
		500:  "ERROR_CODE_INTERNAL_SERVER_ERROR",
		501:  "ERROR_CODE_NOT_IMPLEMENTED",
		502:  "ERROR_CODE_BAD_GATEWAY",
		503:  "ERROR_CODE_SERVICE_UNAVAILABLE",
		504:  "ERROR_CODE_GATEWAY_TIMEOUT",
		1000: "FUND_ERROR_CODE_ACCOUNT_NOT_FOUND",
		1001: "FUND_ERROR_CODE_ACCOUNT_FROZEN",
		1002: "FUND_ERROR_CODE_ACCOUNT_DISABLED",
		1003: "FUND_ERROR_CODE_ACCOUNT_LOCKED",
		1004: "FUND_ERROR_CODE_MULTIPLE_ACCOUNTS",
		1100: "FUND_ERROR_CODE_INSUFFICIENT_BALANCE",
		1101: "FUND_ERROR_CODE_BALANCE_LIMIT_EXCEEDED",
		1102: "FUND_ERROR_CODE_NEGATIVE_BALANCE",
		1103: "FUND_ERROR_CODE_BALANCE_FROZEN",
		1104: "FUND_ERROR_CODE_BALANCE_CALCULATION_ERROR",
		1200: "FUND_ERROR_CODE_INVALID_AMOUNT",
		1201: "FUND_ERROR_CODE_AMOUNT_TOO_SMALL",
		1202: "FUND_ERROR_CODE_AMOUNT_TOO_LARGE",
		1203: "FUND_ERROR_CODE_INVALID_CURRENCY",
		1204: "FUND_ERROR_CODE_CURRENCY_NOT_SUPPORTED",
		1205: "FUND_ERROR_CODE_TRANSACTION_EXPIRED",
		1206: "FUND_ERROR_CODE_TRANSACTION_CANCELLED",
		1207: "FUND_ERROR_CODE_TRANSACTION_FAILED",
		1208: "FUND_ERROR_CODE_DUPLICATE_TRANSACTION",
		1209: "FUND_ERROR_CODE_TRANSACTION_NOT_FOUND",
		1210: "FUND_ERROR_CODE_TRANSACTION_ALREADY_PROCESSED",
		1300: "FUND_ERROR_CODE_TRANSFER_LIMIT_EXCEEDED",
		1301: "FUND_ERROR_CODE_DAILY_LIMIT_EXCEEDED",
		1302: "FUND_ERROR_CODE_MONTHLY_LIMIT_EXCEEDED",
		1303: "FUND_ERROR_CODE_TRANSFER_NOT_ALLOWED",
		1304: "FUND_ERROR_CODE_SAME_ACCOUNT_TRANSFER",
		1305: "FUND_ERROR_CODE_INVALID_RECIPIENT",
		1400: "FUND_ERROR_CODE_PAYMENT_METHOD_NOT_SUPPORTED",
		1401: "FUND_ERROR_CODE_PAYMENT_GATEWAY_ERROR",
		1402: "FUND_ERROR_CODE_PAYMENT_DECLINED",
		1403: "FUND_ERROR_CODE_PAYMENT_TIMEOUT",
		1404: "FUND_ERROR_CODE_PAYMENT_CANCELLED",
		1405: "FUND_ERROR_CODE_PAYMENT_PENDING",
		1500: "FUND_ERROR_CODE_RISK_CONTROL_BLOCKED",
		1501: "FUND_ERROR_CODE_SUSPICIOUS_ACTIVITY",
		1502: "FUND_ERROR_CODE_FRAUD_DETECTED",
		1503: "FUND_ERROR_CODE_AML_CHECK_FAILED",
		1504: "FUND_ERROR_CODE_KYC_VERIFICATION_REQUIRED",
		1600: "FUND_ERROR_CODE_DATABASE_ERROR",
		1601: "FUND_ERROR_CODE_CACHE_ERROR",
		1602: "FUND_ERROR_CODE_QUEUE_ERROR",
		1603: "FUND_ERROR_CODE_EXTERNAL_SERVICE_ERROR",
		1604: "FUND_ERROR_CODE_CONFIGURATION_ERROR",
		1605: "FUND_ERROR_CODE_NETWORK_ERROR",
		1606: "FUND_ERROR_CODE_TIMEOUT_ERROR",
		1700: "FUND_ERROR_CODE_BUSINESS_HOURS_RESTRICTION",
		1701: "FUND_ERROR_CODE_MAINTENANCE_MODE",
		1702: "FUND_ERROR_CODE_FEATURE_DISABLED",
		1703: "FUND_ERROR_CODE_REGION_NOT_SUPPORTED",
		1704: "FUND_ERROR_CODE_USER_LEVEL_RESTRICTION",
	}
	FundErrorCode_value = map[string]int32{
		"FUND_ERROR_CODE_UNSPECIFIED":                   0,
		"ERROR_CODE_SUCCESS":                            200,
		"ERROR_CODE_BAD_REQUEST":                        400,
		"ERROR_CODE_UNAUTHORIZED":                       401,
		"ERROR_CODE_FORBIDDEN":                          403,
		"ERROR_CODE_NOT_FOUND":                          404,
		"ERROR_CODE_METHOD_NOT_ALLOWED":                 405,
		"ERROR_CODE_CONFLICT":                           409,
		"ERROR_CODE_UNPROCESSABLE_ENTITY":               422,
		"ERROR_CODE_TOO_MANY_REQUESTS":                  429,
		"ERROR_CODE_INTERNAL_SERVER_ERROR":              500,
		"ERROR_CODE_NOT_IMPLEMENTED":                    501,
		"ERROR_CODE_BAD_GATEWAY":                        502,
		"ERROR_CODE_SERVICE_UNAVAILABLE":                503,
		"ERROR_CODE_GATEWAY_TIMEOUT":                    504,
		"FUND_ERROR_CODE_ACCOUNT_NOT_FOUND":             1000,
		"FUND_ERROR_CODE_ACCOUNT_FROZEN":                1001,
		"FUND_ERROR_CODE_ACCOUNT_DISABLED":              1002,
		"FUND_ERROR_CODE_ACCOUNT_LOCKED":                1003,
		"FUND_ERROR_CODE_MULTIPLE_ACCOUNTS":             1004,
		"FUND_ERROR_CODE_INSUFFICIENT_BALANCE":          1100,
		"FUND_ERROR_CODE_BALANCE_LIMIT_EXCEEDED":        1101,
		"FUND_ERROR_CODE_NEGATIVE_BALANCE":              1102,
		"FUND_ERROR_CODE_BALANCE_FROZEN":                1103,
		"FUND_ERROR_CODE_BALANCE_CALCULATION_ERROR":     1104,
		"FUND_ERROR_CODE_INVALID_AMOUNT":                1200,
		"FUND_ERROR_CODE_AMOUNT_TOO_SMALL":              1201,
		"FUND_ERROR_CODE_AMOUNT_TOO_LARGE":              1202,
		"FUND_ERROR_CODE_INVALID_CURRENCY":              1203,
		"FUND_ERROR_CODE_CURRENCY_NOT_SUPPORTED":        1204,
		"FUND_ERROR_CODE_TRANSACTION_EXPIRED":           1205,
		"FUND_ERROR_CODE_TRANSACTION_CANCELLED":         1206,
		"FUND_ERROR_CODE_TRANSACTION_FAILED":            1207,
		"FUND_ERROR_CODE_DUPLICATE_TRANSACTION":         1208,
		"FUND_ERROR_CODE_TRANSACTION_NOT_FOUND":         1209,
		"FUND_ERROR_CODE_TRANSACTION_ALREADY_PROCESSED": 1210,
		"FUND_ERROR_CODE_TRANSFER_LIMIT_EXCEEDED":       1300,
		"FUND_ERROR_CODE_DAILY_LIMIT_EXCEEDED":          1301,
		"FUND_ERROR_CODE_MONTHLY_LIMIT_EXCEEDED":        1302,
		"FUND_ERROR_CODE_TRANSFER_NOT_ALLOWED":          1303,
		"FUND_ERROR_CODE_SAME_ACCOUNT_TRANSFER":         1304,
		"FUND_ERROR_CODE_INVALID_RECIPIENT":             1305,
		"FUND_ERROR_CODE_PAYMENT_METHOD_NOT_SUPPORTED":  1400,
		"FUND_ERROR_CODE_PAYMENT_GATEWAY_ERROR":         1401,
		"FUND_ERROR_CODE_PAYMENT_DECLINED":              1402,
		"FUND_ERROR_CODE_PAYMENT_TIMEOUT":               1403,
		"FUND_ERROR_CODE_PAYMENT_CANCELLED":             1404,
		"FUND_ERROR_CODE_PAYMENT_PENDING":               1405,
		"FUND_ERROR_CODE_RISK_CONTROL_BLOCKED":          1500,
		"FUND_ERROR_CODE_SUSPICIOUS_ACTIVITY":           1501,
		"FUND_ERROR_CODE_FRAUD_DETECTED":                1502,
		"FUND_ERROR_CODE_AML_CHECK_FAILED":              1503,
		"FUND_ERROR_CODE_KYC_VERIFICATION_REQUIRED":     1504,
		"FUND_ERROR_CODE_DATABASE_ERROR":                1600,
		"FUND_ERROR_CODE_CACHE_ERROR":                   1601,
		"FUND_ERROR_CODE_QUEUE_ERROR":                   1602,
		"FUND_ERROR_CODE_EXTERNAL_SERVICE_ERROR":        1603,
		"FUND_ERROR_CODE_CONFIGURATION_ERROR":           1604,
		"FUND_ERROR_CODE_NETWORK_ERROR":                 1605,
		"FUND_ERROR_CODE_TIMEOUT_ERROR":                 1606,
		"FUND_ERROR_CODE_BUSINESS_HOURS_RESTRICTION":    1700,
		"FUND_ERROR_CODE_MAINTENANCE_MODE":              1701,
		"FUND_ERROR_CODE_FEATURE_DISABLED":              1702,
		"FUND_ERROR_CODE_REGION_NOT_SUPPORTED":          1703,
		"FUND_ERROR_CODE_USER_LEVEL_RESTRICTION":        1704,
	}
)

func (x FundErrorCode) Enum() *FundErrorCode {
	p := new(FundErrorCode)
	*p = x
	return p
}

func (x FundErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FundErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_fund_v1_fund_types_proto_enumTypes[0].Descriptor()
}

func (FundErrorCode) Type() protoreflect.EnumType {
	return &file_fund_v1_fund_types_proto_enumTypes[0]
}

func (x FundErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FundErrorCode.Descriptor instead.
func (FundErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_fund_v1_fund_types_proto_rawDescGZIP(), []int{0}
}

var File_fund_v1_fund_types_proto protoreflect.FileDescriptor

const file_fund_v1_fund_types_proto_rawDesc = "" +
	"\n" +
	"\x18fund/v1/fund_types.proto\x12\afund.v1*\x82\x14\n" +
	"\rFundErrorCode\x12\x1f\n" +
	"\x1bFUND_ERROR_CODE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x12ERROR_CODE_SUCCESS\x10\xc8\x01\x12\x1b\n" +
	"\x16ERROR_CODE_BAD_REQUEST\x10\x90\x03\x12\x1c\n" +
	"\x17ERROR_CODE_UNAUTHORIZED\x10\x91\x03\x12\x19\n" +
	"\x14ERROR_CODE_FORBIDDEN\x10\x93\x03\x12\x19\n" +
	"\x14ERROR_CODE_NOT_FOUND\x10\x94\x03\x12\"\n" +
	"\x1dERROR_CODE_METHOD_NOT_ALLOWED\x10\x95\x03\x12\x18\n" +
	"\x13ERROR_CODE_CONFLICT\x10\x99\x03\x12$\n" +
	"\x1fERROR_CODE_UNPROCESSABLE_ENTITY\x10\xa6\x03\x12!\n" +
	"\x1cERROR_CODE_TOO_MANY_REQUESTS\x10\xad\x03\x12%\n" +
	" ERROR_CODE_INTERNAL_SERVER_ERROR\x10\xf4\x03\x12\x1f\n" +
	"\x1aERROR_CODE_NOT_IMPLEMENTED\x10\xf5\x03\x12\x1b\n" +
	"\x16ERROR_CODE_BAD_GATEWAY\x10\xf6\x03\x12#\n" +
	"\x1eERROR_CODE_SERVICE_UNAVAILABLE\x10\xf7\x03\x12\x1f\n" +
	"\x1aERROR_CODE_GATEWAY_TIMEOUT\x10\xf8\x03\x12&\n" +
	"!FUND_ERROR_CODE_ACCOUNT_NOT_FOUND\x10\xe8\a\x12#\n" +
	"\x1eFUND_ERROR_CODE_ACCOUNT_FROZEN\x10\xe9\a\x12%\n" +
	" FUND_ERROR_CODE_ACCOUNT_DISABLED\x10\xea\a\x12#\n" +
	"\x1eFUND_ERROR_CODE_ACCOUNT_LOCKED\x10\xeb\a\x12&\n" +
	"!FUND_ERROR_CODE_MULTIPLE_ACCOUNTS\x10\xec\a\x12)\n" +
	"$FUND_ERROR_CODE_INSUFFICIENT_BALANCE\x10\xcc\b\x12+\n" +
	"&FUND_ERROR_CODE_BALANCE_LIMIT_EXCEEDED\x10\xcd\b\x12%\n" +
	" FUND_ERROR_CODE_NEGATIVE_BALANCE\x10\xce\b\x12#\n" +
	"\x1eFUND_ERROR_CODE_BALANCE_FROZEN\x10\xcf\b\x12.\n" +
	")FUND_ERROR_CODE_BALANCE_CALCULATION_ERROR\x10\xd0\b\x12#\n" +
	"\x1eFUND_ERROR_CODE_INVALID_AMOUNT\x10\xb0\t\x12%\n" +
	" FUND_ERROR_CODE_AMOUNT_TOO_SMALL\x10\xb1\t\x12%\n" +
	" FUND_ERROR_CODE_AMOUNT_TOO_LARGE\x10\xb2\t\x12%\n" +
	" FUND_ERROR_CODE_INVALID_CURRENCY\x10\xb3\t\x12+\n" +
	"&FUND_ERROR_CODE_CURRENCY_NOT_SUPPORTED\x10\xb4\t\x12(\n" +
	"#FUND_ERROR_CODE_TRANSACTION_EXPIRED\x10\xb5\t\x12*\n" +
	"%FUND_ERROR_CODE_TRANSACTION_CANCELLED\x10\xb6\t\x12'\n" +
	"\"FUND_ERROR_CODE_TRANSACTION_FAILED\x10\xb7\t\x12*\n" +
	"%FUND_ERROR_CODE_DUPLICATE_TRANSACTION\x10\xb8\t\x12*\n" +
	"%FUND_ERROR_CODE_TRANSACTION_NOT_FOUND\x10\xb9\t\x122\n" +
	"-FUND_ERROR_CODE_TRANSACTION_ALREADY_PROCESSED\x10\xba\t\x12,\n" +
	"'FUND_ERROR_CODE_TRANSFER_LIMIT_EXCEEDED\x10\x94\n" +
	"\x12)\n" +
	"$FUND_ERROR_CODE_DAILY_LIMIT_EXCEEDED\x10\x95\n" +
	"\x12+\n" +
	"&FUND_ERROR_CODE_MONTHLY_LIMIT_EXCEEDED\x10\x96\n" +
	"\x12)\n" +
	"$FUND_ERROR_CODE_TRANSFER_NOT_ALLOWED\x10\x97\n" +
	"\x12*\n" +
	"%FUND_ERROR_CODE_SAME_ACCOUNT_TRANSFER\x10\x98\n" +
	"\x12&\n" +
	"!FUND_ERROR_CODE_INVALID_RECIPIENT\x10\x99\n" +
	"\x121\n" +
	",FUND_ERROR_CODE_PAYMENT_METHOD_NOT_SUPPORTED\x10\xf8\n" +
	"\x12*\n" +
	"%FUND_ERROR_CODE_PAYMENT_GATEWAY_ERROR\x10\xf9\n" +
	"\x12%\n" +
	" FUND_ERROR_CODE_PAYMENT_DECLINED\x10\xfa\n" +
	"\x12$\n" +
	"\x1fFUND_ERROR_CODE_PAYMENT_TIMEOUT\x10\xfb\n" +
	"\x12&\n" +
	"!FUND_ERROR_CODE_PAYMENT_CANCELLED\x10\xfc\n" +
	"\x12$\n" +
	"\x1fFUND_ERROR_CODE_PAYMENT_PENDING\x10\xfd\n" +
	"\x12)\n" +
	"$FUND_ERROR_CODE_RISK_CONTROL_BLOCKED\x10\xdc\v\x12(\n" +
	"#FUND_ERROR_CODE_SUSPICIOUS_ACTIVITY\x10\xdd\v\x12#\n" +
	"\x1eFUND_ERROR_CODE_FRAUD_DETECTED\x10\xde\v\x12%\n" +
	" FUND_ERROR_CODE_AML_CHECK_FAILED\x10\xdf\v\x12.\n" +
	")FUND_ERROR_CODE_KYC_VERIFICATION_REQUIRED\x10\xe0\v\x12#\n" +
	"\x1eFUND_ERROR_CODE_DATABASE_ERROR\x10\xc0\f\x12 \n" +
	"\x1bFUND_ERROR_CODE_CACHE_ERROR\x10\xc1\f\x12 \n" +
	"\x1bFUND_ERROR_CODE_QUEUE_ERROR\x10\xc2\f\x12+\n" +
	"&FUND_ERROR_CODE_EXTERNAL_SERVICE_ERROR\x10\xc3\f\x12(\n" +
	"#FUND_ERROR_CODE_CONFIGURATION_ERROR\x10\xc4\f\x12\"\n" +
	"\x1dFUND_ERROR_CODE_NETWORK_ERROR\x10\xc5\f\x12\"\n" +
	"\x1dFUND_ERROR_CODE_TIMEOUT_ERROR\x10\xc6\f\x12/\n" +
	"*FUND_ERROR_CODE_BUSINESS_HOURS_RESTRICTION\x10\xa4\r\x12%\n" +
	" FUND_ERROR_CODE_MAINTENANCE_MODE\x10\xa5\r\x12%\n" +
	" FUND_ERROR_CODE_FEATURE_DISABLED\x10\xa6\r\x12)\n" +
	"$FUND_ERROR_CODE_REGION_NOT_SUPPORTED\x10\xa7\r\x12+\n" +
	"&FUND_ERROR_CODE_USER_LEVEL_RESTRICTION\x10\xa8\rB4Z2github.com/og-game/game-proto/proto-gen-go/fund/v1b\x06proto3"

var (
	file_fund_v1_fund_types_proto_rawDescOnce sync.Once
	file_fund_v1_fund_types_proto_rawDescData []byte
)

func file_fund_v1_fund_types_proto_rawDescGZIP() []byte {
	file_fund_v1_fund_types_proto_rawDescOnce.Do(func() {
		file_fund_v1_fund_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fund_v1_fund_types_proto_rawDesc), len(file_fund_v1_fund_types_proto_rawDesc)))
	})
	return file_fund_v1_fund_types_proto_rawDescData
}

var file_fund_v1_fund_types_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fund_v1_fund_types_proto_goTypes = []any{
	(FundErrorCode)(0), // 0: fund.v1.FundErrorCode
}
var file_fund_v1_fund_types_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_fund_v1_fund_types_proto_init() }
func file_fund_v1_fund_types_proto_init() {
	if File_fund_v1_fund_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fund_v1_fund_types_proto_rawDesc), len(file_fund_v1_fund_types_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_fund_v1_fund_types_proto_goTypes,
		DependencyIndexes: file_fund_v1_fund_types_proto_depIdxs,
		EnumInfos:         file_fund_v1_fund_types_proto_enumTypes,
	}.Build()
	File_fund_v1_fund_types_proto = out.File
	file_fund_v1_fund_types_proto_goTypes = nil
	file_fund_v1_fund_types_proto_depIdxs = nil
}
