// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: fund.proto

package gameapiservice

import (
	"context"

	"github.com/og-game/game-proto/proto-gen-go/fund/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ApplyWithdrawReply       = v1.ApplyWithdrawReply
	ApplyWithdrawReq         = v1.ApplyWithdrawReq
	FundReply                = v1.FundReply
	FundReq                  = v1.FundReq
	GetUserBalanceListReply  = v1.GetUserBalanceListReply
	GetUserBalanceListReq    = v1.GetUserBalanceListReq
	GetUserBalanceReply      = v1.GetUserBalanceReply
	GetUserBalanceReq        = v1.GetUserBalanceReq
	QueryWithdrawStatusReply = v1.QueryWithdrawStatusReply
	QueryWithdrawStatusReq   = v1.QueryWithdrawStatusReq
	TransactionReply         = v1.TransactionReply
	TransactionReq           = v1.TransactionReq
	UserBalanceInfo          = v1.UserBalanceInfo

	GameApiService interface {
		// 申请提现
		ApplyWithdraw(ctx context.Context, in *ApplyWithdrawReq, opts ...grpc.CallOption) (*ApplyWithdrawReply, error)
		// 申请提现状态查询
		QueryWithdrawStatus(ctx context.Context, in *QueryWithdrawStatusReq, opts ...grpc.CallOption) (*QueryWithdrawStatusReply, error)
	}

	defaultGameApiService struct {
		cli zrpc.Client
	}
)

func NewGameApiService(cli zrpc.Client) GameApiService {
	return &defaultGameApiService{
		cli: cli,
	}
}

// 申请提现
func (m *defaultGameApiService) ApplyWithdraw(ctx context.Context, in *ApplyWithdrawReq, opts ...grpc.CallOption) (*ApplyWithdrawReply, error) {
	client := v1.NewGameApiServiceClient(m.cli.Conn())
	return client.ApplyWithdraw(ctx, in, opts...)
}

// 申请提现状态查询
func (m *defaultGameApiService) QueryWithdrawStatus(ctx context.Context, in *QueryWithdrawStatusReq, opts ...grpc.CallOption) (*QueryWithdrawStatusReply, error) {
	client := v1.NewGameApiServiceClient(m.cli.Conn())
	return client.QueryWithdrawStatus(ctx, in, opts...)
}
