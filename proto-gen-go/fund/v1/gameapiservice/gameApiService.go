// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: fund.proto

package gameapiservice

import (
	"context"

	"github.com/og-game/game-proto/proto-gen-go/fund/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BetRecord                  = v1.BetRecord
	CreateGameAddrReply        = v1.CreateGameAddrReply
	CreateGameAddrReq          = v1.CreateGameAddrReq
	DepositReply               = v1.DepositReply
	DepositReq                 = v1.DepositReq
	FundReply                  = v1.FundReply
	FundReq                    = v1.FundReq
	GetBetRecordsReply         = v1.GetBetRecordsReply
	GetBetRecordsReq           = v1.GetBetRecordsReq
	GetTransactionRecordsReply = v1.GetTransactionRecordsReply
	GetTransactionRecordsReq   = v1.GetTransactionRecordsReq
	GetUserBalanceReply        = v1.GetUserBalanceReply
	GetUserBalanceReq          = v1.GetUserBalanceReq
	TransactionRecord          = v1.TransactionRecord
	UserRegisterReply          = v1.UserRegisterReply
	UserRegisterReq            = v1.UserRegisterReq
	WithdrawReply              = v1.WithdrawReply
	WithdrawReq                = v1.WithdrawReq

	GameApiService interface {
		Test(ctx context.Context, in *CreateGameAddrReq, opts ...grpc.CallOption) (*CreateGameAddrReply, error)
	}

	defaultGameApiService struct {
		cli zrpc.Client
	}
)

func NewGameApiService(cli zrpc.Client) GameApiService {
	return &defaultGameApiService{
		cli: cli,
	}
}

func (m *defaultGameApiService) Test(ctx context.Context, in *CreateGameAddrReq, opts ...grpc.CallOption) (*CreateGameAddrReply, error) {
	client := v1.NewGameApiServiceClient(m.cli.Conn())
	return client.Test(ctx, in, opts...)
}
