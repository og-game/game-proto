// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: fund.proto

package gameapiservice

import (
	"context"

	"github.com/og-game/game-proto/proto-gen-go/fund/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FundReply               = v1.FundReply
	FundReq                 = v1.FundReq
	GetUserBalanceListReply = v1.GetUserBalanceListReply
	GetUserBalanceListReq   = v1.GetUserBalanceListReq
	GetUserBalanceReply     = v1.GetUserBalanceReply
	GetUserBalanceReq       = v1.GetUserBalanceReq
	TransactionReply        = v1.TransactionReply
	TransactionReq          = v1.TransactionReq
	UserBalanceInfo         = v1.UserBalanceInfo
	WithdrawReply           = v1.WithdrawReply
	WithdrawReq             = v1.WithdrawReq

	GameApiService interface {
		// 用户提现
		Withdraw(ctx context.Context, in *WithdrawReq, opts ...grpc.CallOption) (*WithdrawReply, error)
	}

	defaultGameApiService struct {
		cli zrpc.Client
	}
)

func NewGameApiService(cli zrpc.Client) GameApiService {
	return &defaultGameApiService{
		cli: cli,
	}
}

// 用户提现
func (m *defaultGameApiService) Withdraw(ctx context.Context, in *WithdrawReq, opts ...grpc.CallOption) (*WithdrawReply, error) {
	client := v1.NewGameApiServiceClient(m.cli.Conn())
	return client.Withdraw(ctx, in, opts...)
}
