// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: fund.proto

package fundapiservice

import (
	"context"

	"github.com/og-game/game-proto/proto-gen-go/fund/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FundReply                = v1.FundReply
	FundReq                  = v1.FundReq
	GetUserBalanceListReply  = v1.GetUserBalanceListReply
	GetUserBalanceListReq    = v1.GetUserBalanceListReq
	GetUserBalanceReply      = v1.GetUserBalanceReply
	GetUserBalanceReq        = v1.GetUserBalanceReq
	TransactionReply         = v1.TransactionReply
	TransactionReq           = v1.TransactionReq
	TransferInProgressReply  = v1.TransferInProgressReply
	TransferInProgressReq    = v1.TransferInProgressReq
	TransferInReply          = v1.TransferInReply
	TransferInReq            = v1.TransferInReq
	TransferOutProgressReply = v1.TransferOutProgressReply
	TransferOutProgressReq   = v1.TransferOutProgressReq
	TransferOutReply         = v1.TransferOutReply
	TransferOutReq           = v1.TransferOutReq
	TransferProgressInfo     = v1.TransferProgressInfo
	UserBalanceInfo          = v1.UserBalanceInfo
	UserBalanceListReply     = v1.UserBalanceListReply
	UserBalanceListReq       = v1.UserBalanceListReq

	FundApiService interface {
		// 批量获取用户余额[实时更新的余额]
		GetUserBalanceList(ctx context.Context, in *UserBalanceListReq, opts ...grpc.CallOption) (*UserBalanceListReply, error)
		// 发起转入操作
		TransferIn(ctx context.Context, in *TransferInReq, opts ...grpc.CallOption) (*TransferInReply, error)
		// 获取转出进度状态
		GetTransferInProgress(ctx context.Context, in *TransferInProgressReq, opts ...grpc.CallOption) (*TransferInProgressReply, error)
		// 发起转出操作
		TransferOut(ctx context.Context, in *TransferOutReq, opts ...grpc.CallOption) (*TransferOutReply, error)
		// 获取转出进度状态
		GetTransferOutProgress(ctx context.Context, in *TransferOutProgressReq, opts ...grpc.CallOption) (*TransferOutProgressReply, error)
	}

	defaultFundApiService struct {
		cli zrpc.Client
	}
)

func NewFundApiService(cli zrpc.Client) FundApiService {
	return &defaultFundApiService{
		cli: cli,
	}
}

// 批量获取用户余额[实时更新的余额]
func (m *defaultFundApiService) GetUserBalanceList(ctx context.Context, in *UserBalanceListReq, opts ...grpc.CallOption) (*UserBalanceListReply, error) {
	client := v1.NewFundApiServiceClient(m.cli.Conn())
	return client.GetUserBalanceList(ctx, in, opts...)
}

// 发起转入操作
func (m *defaultFundApiService) TransferIn(ctx context.Context, in *TransferInReq, opts ...grpc.CallOption) (*TransferInReply, error) {
	client := v1.NewFundApiServiceClient(m.cli.Conn())
	return client.TransferIn(ctx, in, opts...)
}

// 获取转出进度状态
func (m *defaultFundApiService) GetTransferInProgress(ctx context.Context, in *TransferInProgressReq, opts ...grpc.CallOption) (*TransferInProgressReply, error) {
	client := v1.NewFundApiServiceClient(m.cli.Conn())
	return client.GetTransferInProgress(ctx, in, opts...)
}

// 发起转出操作
func (m *defaultFundApiService) TransferOut(ctx context.Context, in *TransferOutReq, opts ...grpc.CallOption) (*TransferOutReply, error) {
	client := v1.NewFundApiServiceClient(m.cli.Conn())
	return client.TransferOut(ctx, in, opts...)
}

// 获取转出进度状态
func (m *defaultFundApiService) GetTransferOutProgress(ctx context.Context, in *TransferOutProgressReq, opts ...grpc.CallOption) (*TransferOutProgressReply, error) {
	client := v1.NewFundApiServiceClient(m.cli.Conn())
	return client.GetTransferOutProgress(ctx, in, opts...)
}
