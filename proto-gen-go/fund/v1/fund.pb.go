// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: fund/v1/fund.proto

package v1

import (
	v1 "github.com/og-game/game-proto/proto-gen-go/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FundReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FundReq) Reset() {
	*x = FundReq{}
	mi := &file_fund_v1_fund_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundReq) ProtoMessage() {}

func (x *FundReq) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundReq.ProtoReflect.Descriptor instead.
func (*FundReq) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{0}
}

type FundResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FundResp) Reset() {
	*x = FundResp{}
	mi := &file_fund_v1_fund_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FundResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FundResp) ProtoMessage() {}

func (x *FundResp) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FundResp.ProtoReflect.Descriptor instead.
func (*FundResp) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{1}
}

// 批量获取用户余额请求
type UserBalanceListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlatformIds   []int64                `protobuf:"varint,2,rep,packed,name=platform_ids,json=platformIds,proto3" json:"platform_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserBalanceListReq) Reset() {
	*x = UserBalanceListReq{}
	mi := &file_fund_v1_fund_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBalanceListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBalanceListReq) ProtoMessage() {}

func (x *UserBalanceListReq) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBalanceListReq.ProtoReflect.Descriptor instead.
func (*UserBalanceListReq) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{2}
}

func (x *UserBalanceListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserBalanceListReq) GetPlatformIds() []int64 {
	if x != nil {
		return x.PlatformIds
	}
	return nil
}

// 批量获取用户余额响应
type UserBalanceListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balances      map[int64]string       `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // platform_id => balance
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserBalanceListResp) Reset() {
	*x = UserBalanceListResp{}
	mi := &file_fund_v1_fund_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBalanceListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBalanceListResp) ProtoMessage() {}

func (x *UserBalanceListResp) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBalanceListResp.ProtoReflect.Descriptor instead.
func (*UserBalanceListResp) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{3}
}

func (x *UserBalanceListResp) GetBalances() map[int64]string {
	if x != nil {
		return x.Balances
	}
	return nil
}

// 发起转入操作
type TransferInReq struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	UserId          int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlatformId      int64                  `protobuf:"varint,2,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	DepositAmount   string                 `protobuf:"bytes,3,opt,name=deposit_amount,json=depositAmount,proto3" json:"deposit_amount,omitempty"`         // 存款金额
	MerchantOrderId string                 `protobuf:"bytes,4,opt,name=merchant_order_id,json=merchantOrderId,proto3" json:"merchant_order_id,omitempty"` // 商户订单ID
	ExtraParams     map[string]string      `protobuf:"bytes,5,rep,name=extra_params,json=extraParams,proto3" json:"extra_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransferInReq) Reset() {
	*x = TransferInReq{}
	mi := &file_fund_v1_fund_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferInReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInReq) ProtoMessage() {}

func (x *TransferInReq) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInReq.ProtoReflect.Descriptor instead.
func (*TransferInReq) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{4}
}

func (x *TransferInReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TransferInReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *TransferInReq) GetDepositAmount() string {
	if x != nil {
		return x.DepositAmount
	}
	return ""
}

func (x *TransferInReq) GetMerchantOrderId() string {
	if x != nil {
		return x.MerchantOrderId
	}
	return ""
}

func (x *TransferInReq) GetExtraParams() map[string]string {
	if x != nil {
		return x.ExtraParams
	}
	return nil
}

// 发起转入操作
type TransferInResp struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Code            v1.ErrorCode           `protobuf:"varint,1,opt,name=code,proto3,enum=common.v1.ErrorCode" json:"code,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TransactionId   string                 `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`         // 内部交易ID
	MerchantOrderId string                 `protobuf:"bytes,4,opt,name=merchant_order_id,json=merchantOrderId,proto3" json:"merchant_order_id,omitempty"` // 商户订单ID
	Status          v1.TransferStatus      `protobuf:"varint,5,opt,name=status,proto3,enum=common.v1.TransferStatus" json:"status,omitempty"`             // 转账状态：pending, processing, completed, failed
	DepositAmount   string                 `protobuf:"bytes,6,opt,name=deposit_amount,json=depositAmount,proto3" json:"deposit_amount,omitempty"`         // 存款金额
	BalanceAfter    string                 `protobuf:"bytes,7,opt,name=balance_after,json=balanceAfter,proto3" json:"balance_after,omitempty"`            // 变更后余额
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransferInResp) Reset() {
	*x = TransferInResp{}
	mi := &file_fund_v1_fund_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferInResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInResp) ProtoMessage() {}

func (x *TransferInResp) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInResp.ProtoReflect.Descriptor instead.
func (*TransferInResp) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{5}
}

func (x *TransferInResp) GetCode() v1.ErrorCode {
	if x != nil {
		return x.Code
	}
	return v1.ErrorCode(0)
}

func (x *TransferInResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TransferInResp) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransferInResp) GetMerchantOrderId() string {
	if x != nil {
		return x.MerchantOrderId
	}
	return ""
}

func (x *TransferInResp) GetStatus() v1.TransferStatus {
	if x != nil {
		return x.Status
	}
	return v1.TransferStatus(0)
}

func (x *TransferInResp) GetDepositAmount() string {
	if x != nil {
		return x.DepositAmount
	}
	return ""
}

func (x *TransferInResp) GetBalanceAfter() string {
	if x != nil {
		return x.BalanceAfter
	}
	return ""
}

// 发起转出操作
type TransferOutReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UserId           int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlatformId       int64                  `protobuf:"varint,2,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	MerchantOrderId  string                 `protobuf:"bytes,3,opt,name=merchant_order_id,json=merchantOrderId,proto3" json:"merchant_order_id,omitempty"` // 商户订单ID
	ExtraParams      map[string]string      `protobuf:"bytes,4,rep,name=extra_params,json=extraParams,proto3" json:"extra_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	WithdrawalAmount string                 `protobuf:"bytes,5,opt,name=withdrawal_amount,json=withdrawalAmount,proto3" json:"withdrawal_amount,omitempty"` // 取款金额->todo 预留字段暂时不会使用[My rules are THE rules.]
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TransferOutReq) Reset() {
	*x = TransferOutReq{}
	mi := &file_fund_v1_fund_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferOutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOutReq) ProtoMessage() {}

func (x *TransferOutReq) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOutReq.ProtoReflect.Descriptor instead.
func (*TransferOutReq) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{6}
}

func (x *TransferOutReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TransferOutReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *TransferOutReq) GetMerchantOrderId() string {
	if x != nil {
		return x.MerchantOrderId
	}
	return ""
}

func (x *TransferOutReq) GetExtraParams() map[string]string {
	if x != nil {
		return x.ExtraParams
	}
	return nil
}

func (x *TransferOutReq) GetWithdrawalAmount() string {
	if x != nil {
		return x.WithdrawalAmount
	}
	return ""
}

// 发起转出操作;
type TransferOutResp struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Code             v1.ErrorCode           `protobuf:"varint,1,opt,name=code,proto3,enum=common.v1.ErrorCode" json:"code,omitempty"`
	Message          string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TransactionId    string                 `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`          // 内部交易ID
	MerchantOrderId  string                 `protobuf:"bytes,4,opt,name=merchant_order_id,json=merchantOrderId,proto3" json:"merchant_order_id,omitempty"`  // 商户订单ID
	Status           v1.TransferStatus      `protobuf:"varint,5,opt,name=status,proto3,enum=common.v1.TransferStatus" json:"status,omitempty"`              // 转账状态：pending, processing, completed, failed
	WithdrawalAmount string                 `protobuf:"bytes,6,opt,name=withdrawal_amount,json=withdrawalAmount,proto3" json:"withdrawal_amount,omitempty"` // 取款金额
	BalanceAfter     string                 `protobuf:"bytes,7,opt,name=balance_after,json=balanceAfter,proto3" json:"balance_after,omitempty"`             // 变更后余额
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TransferOutResp) Reset() {
	*x = TransferOutResp{}
	mi := &file_fund_v1_fund_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferOutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferOutResp) ProtoMessage() {}

func (x *TransferOutResp) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferOutResp.ProtoReflect.Descriptor instead.
func (*TransferOutResp) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{7}
}

func (x *TransferOutResp) GetCode() v1.ErrorCode {
	if x != nil {
		return x.Code
	}
	return v1.ErrorCode(0)
}

func (x *TransferOutResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TransferOutResp) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransferOutResp) GetMerchantOrderId() string {
	if x != nil {
		return x.MerchantOrderId
	}
	return ""
}

func (x *TransferOutResp) GetStatus() v1.TransferStatus {
	if x != nil {
		return x.Status
	}
	return v1.TransferStatus(0)
}

func (x *TransferOutResp) GetWithdrawalAmount() string {
	if x != nil {
		return x.WithdrawalAmount
	}
	return ""
}

func (x *TransferOutResp) GetBalanceAfter() string {
	if x != nil {
		return x.BalanceAfter
	}
	return ""
}

// 查询提现状态请求
type TransferProgressReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UserId           int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TransactionIds   []string               `protobuf:"bytes,2,rep,name=transaction_ids,json=transactionIds,proto3" json:"transaction_ids,omitempty"`         // 交易ID
	MerchantOrderIds []string               `protobuf:"bytes,3,rep,name=merchant_order_ids,json=merchantOrderIds,proto3" json:"merchant_order_ids,omitempty"` // 商户订单ID
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TransferProgressReq) Reset() {
	*x = TransferProgressReq{}
	mi := &file_fund_v1_fund_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferProgressReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferProgressReq) ProtoMessage() {}

func (x *TransferProgressReq) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferProgressReq.ProtoReflect.Descriptor instead.
func (*TransferProgressReq) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{8}
}

func (x *TransferProgressReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TransferProgressReq) GetTransactionIds() []string {
	if x != nil {
		return x.TransactionIds
	}
	return nil
}

func (x *TransferProgressReq) GetMerchantOrderIds() []string {
	if x != nil {
		return x.MerchantOrderIds
	}
	return nil
}

// 查询转出状态响应
type TransferProgressResp struct {
	state         protoimpl.MessageState           `protogen:"open.v1"`
	Progress      map[string]*TransferProgressInfo `protobuf:"bytes,1,rep,name=progress,proto3" json:"progress,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                 // transaction_id => progress
	NotMatch      map[string]*TransferProgressInfo `protobuf:"bytes,2,rep,name=not_match,json=notMatch,proto3" json:"not_match,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // transaction_id => progress 没有匹配到的交易结果
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferProgressResp) Reset() {
	*x = TransferProgressResp{}
	mi := &file_fund_v1_fund_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferProgressResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferProgressResp) ProtoMessage() {}

func (x *TransferProgressResp) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferProgressResp.ProtoReflect.Descriptor instead.
func (*TransferProgressResp) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{9}
}

func (x *TransferProgressResp) GetProgress() map[string]*TransferProgressInfo {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *TransferProgressResp) GetNotMatch() map[string]*TransferProgressInfo {
	if x != nil {
		return x.NotMatch
	}
	return nil
}

// 转账操作
type TransferProgressInfo struct {
	state           protoimpl.MessageState  `protogen:"open.v1"`
	Code            v1.ErrorCode            `protobuf:"varint,1,opt,name=code,proto3,enum=common.v1.ErrorCode" json:"code,omitempty"`
	Message         string                  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	TransactionId   string                  `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`         // 内部交易ID
	MerchantOrderId string                  `protobuf:"bytes,4,opt,name=merchant_order_id,json=merchantOrderId,proto3" json:"merchant_order_id,omitempty"` // 商户交易ID
	Amount          string                  `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`                                            // 转账金额
	TransferType    v1.TransactionDirection `protobuf:"varint,6,opt,name=transfer_type,json=transferType,proto3,enum=common.v1.TransactionDirection" json:"transfer_type,omitempty"`
	Status          v1.TransferStatus       `protobuf:"varint,7,opt,name=status,proto3,enum=common.v1.TransferStatus" json:"status,omitempty"` // 转账状态：pending, processing, completed, failed
	CreatedTime     int64                   `protobuf:"varint,8,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`  // 申请时间戳
	UpdatedTime     int64                   `protobuf:"varint,9,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`  // 最后更新时间戳
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *TransferProgressInfo) Reset() {
	*x = TransferProgressInfo{}
	mi := &file_fund_v1_fund_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferProgressInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferProgressInfo) ProtoMessage() {}

func (x *TransferProgressInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferProgressInfo.ProtoReflect.Descriptor instead.
func (*TransferProgressInfo) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{10}
}

func (x *TransferProgressInfo) GetCode() v1.ErrorCode {
	if x != nil {
		return x.Code
	}
	return v1.ErrorCode(0)
}

func (x *TransferProgressInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TransferProgressInfo) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransferProgressInfo) GetMerchantOrderId() string {
	if x != nil {
		return x.MerchantOrderId
	}
	return ""
}

func (x *TransferProgressInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransferProgressInfo) GetTransferType() v1.TransactionDirection {
	if x != nil {
		return x.TransferType
	}
	return v1.TransactionDirection(0)
}

func (x *TransferProgressInfo) GetStatus() v1.TransferStatus {
	if x != nil {
		return x.Status
	}
	return v1.TransferStatus(0)
}

func (x *TransferProgressInfo) GetCreatedTime() int64 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *TransferProgressInfo) GetUpdatedTime() int64 {
	if x != nil {
		return x.UpdatedTime
	}
	return 0
}

// 获取单个用户余额请求
type GetUserBalanceReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlatformId    int64                  `protobuf:"varint,2,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalanceReq) Reset() {
	*x = GetUserBalanceReq{}
	mi := &file_fund_v1_fund_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceReq) ProtoMessage() {}

func (x *GetUserBalanceReq) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceReq.ProtoReflect.Descriptor instead.
func (*GetUserBalanceReq) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{11}
}

func (x *GetUserBalanceReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserBalanceReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

// 获取单个用户余额响应
type GetUserBalanceResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       string                 `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`  // 游戏内余额
	Version       int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"` // 版本
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalanceResp) Reset() {
	*x = GetUserBalanceResp{}
	mi := &file_fund_v1_fund_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceResp) ProtoMessage() {}

func (x *GetUserBalanceResp) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceResp.ProtoReflect.Descriptor instead.
func (*GetUserBalanceResp) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{12}
}

func (x *GetUserBalanceResp) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *GetUserBalanceResp) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// 用户余额信息
type UserBalanceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       string                 `protobuf:"bytes,1,opt,name=balance,proto3" json:"balance,omitempty"`  // 游戏内余额
	Version       int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"` // 版本
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserBalanceInfo) Reset() {
	*x = UserBalanceInfo{}
	mi := &file_fund_v1_fund_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBalanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBalanceInfo) ProtoMessage() {}

func (x *UserBalanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBalanceInfo.ProtoReflect.Descriptor instead.
func (*UserBalanceInfo) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{13}
}

func (x *UserBalanceInfo) GetBalance() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

func (x *UserBalanceInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

// 批量获取用户余额请求
type GetUserBalanceListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PlatformIds   []int64                `protobuf:"varint,2,rep,packed,name=platform_ids,json=platformIds,proto3" json:"platform_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalanceListReq) Reset() {
	*x = GetUserBalanceListReq{}
	mi := &file_fund_v1_fund_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceListReq) ProtoMessage() {}

func (x *GetUserBalanceListReq) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceListReq.ProtoReflect.Descriptor instead.
func (*GetUserBalanceListReq) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserBalanceListReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserBalanceListReq) GetPlatformIds() []int64 {
	if x != nil {
		return x.PlatformIds
	}
	return nil
}

// 批量获取用户余额响应
type GetUserBalanceListResp struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Balances      map[int64]*UserBalanceInfo `protobuf:"bytes,1,rep,name=balances,proto3" json:"balances,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // platform_id => balance
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserBalanceListResp) Reset() {
	*x = GetUserBalanceListResp{}
	mi := &file_fund_v1_fund_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserBalanceListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceListResp) ProtoMessage() {}

func (x *GetUserBalanceListResp) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceListResp.ProtoReflect.Descriptor instead.
func (*GetUserBalanceListResp) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{15}
}

func (x *GetUserBalanceListResp) GetBalances() map[int64]*UserBalanceInfo {
	if x != nil {
		return x.Balances
	}
	return nil
}

// 交易请求消息
type TransactionReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          v1.TransactionType     `protobuf:"varint,1,opt,name=type,proto3,enum=common.v1.TransactionType" json:"type,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	GameId        int64                  `protobuf:"varint,3,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`
	PlatformId    int64                  `protobuf:"varint,4,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	Amount        string                 `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`                  // 需要变动的金额 >=0
	OrderId       string                 `protobuf:"bytes,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"` // 订单ID
	Description   string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`        // 描述备注
	RoundId       string                 `protobuf:"bytes,8,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"` // 牌局ID
	Metadata      map[string]string      `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionReq) Reset() {
	*x = TransactionReq{}
	mi := &file_fund_v1_fund_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionReq) ProtoMessage() {}

func (x *TransactionReq) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionReq.ProtoReflect.Descriptor instead.
func (*TransactionReq) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{16}
}

func (x *TransactionReq) GetType() v1.TransactionType {
	if x != nil {
		return x.Type
	}
	return v1.TransactionType(0)
}

func (x *TransactionReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TransactionReq) GetGameId() int64 {
	if x != nil {
		return x.GameId
	}
	return 0
}

func (x *TransactionReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *TransactionReq) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *TransactionReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *TransactionReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TransactionReq) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *TransactionReq) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 交易响应消息
type TransactionResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                 // 是否成功
	TransactionId string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // 账变记录ID
	BalanceBefore string                 `protobuf:"bytes,3,opt,name=balance_before,json=balanceBefore,proto3" json:"balance_before,omitempty"` // 变更前余额
	BalanceAfter  string                 `protobuf:"bytes,4,opt,name=balance_after,json=balanceAfter,proto3" json:"balance_after,omitempty"`    // 变更后余额
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                             // 当前时间戳
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionResp) Reset() {
	*x = TransactionResp{}
	mi := &file_fund_v1_fund_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResp) ProtoMessage() {}

func (x *TransactionResp) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResp.ProtoReflect.Descriptor instead.
func (*TransactionResp) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{17}
}

func (x *TransactionResp) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TransactionResp) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransactionResp) GetBalanceBefore() string {
	if x != nil {
		return x.BalanceBefore
	}
	return ""
}

func (x *TransactionResp) GetBalanceAfter() string {
	if x != nil {
		return x.BalanceAfter
	}
	return ""
}

func (x *TransactionResp) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 表示更新或查询延迟转账状态的请求。
type TransferStatusUpdateReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                    // 用户ID
	PlatformId    int64                  `protobuf:"varint,2,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`                                        // 平台ID
	TransactionId string                 `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`                                // 原始转账交易的ID
	EnableRetry   bool                   `protobuf:"varint,4,opt,name=enable_retry,json=enableRetry,proto3" json:"enable_retry,omitempty"`                                     // 是否启用重试
	CurrentStatus v1.TransferStatus      `protobuf:"varint,5,opt,name=current_status,json=currentStatus,proto3,enum=common.v1.TransferStatus" json:"current_status,omitempty"` // 当前报告的状态（例如："PROCESSING"（处理中）, "COMPLETED"（已完成）, "FAILED"（失败））
	Reason        string                 `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`                                                                   // 可选：状态更新的原因，特别是针对失败情况
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferStatusUpdateReq) Reset() {
	*x = TransferStatusUpdateReq{}
	mi := &file_fund_v1_fund_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferStatusUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferStatusUpdateReq) ProtoMessage() {}

func (x *TransferStatusUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferStatusUpdateReq.ProtoReflect.Descriptor instead.
func (*TransferStatusUpdateReq) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{18}
}

func (x *TransferStatusUpdateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TransferStatusUpdateReq) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *TransferStatusUpdateReq) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransferStatusUpdateReq) GetEnableRetry() bool {
	if x != nil {
		return x.EnableRetry
	}
	return false
}

func (x *TransferStatusUpdateReq) GetCurrentStatus() v1.TransferStatus {
	if x != nil {
		return x.CurrentStatus
	}
	return v1.TransferStatus(0)
}

func (x *TransferStatusUpdateReq) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 表示转账状态更新/查询的响应。
type TransferStatusUpdateResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TransactionId string                 `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	NewStatus     v1.TransferStatus      `protobuf:"varint,2,opt,name=new_status,json=newStatus,proto3,enum=common.v1.TransferStatus" json:"new_status,omitempty"` // 转账确认的新状态
	RetryCount    int64                  `protobuf:"varint,3,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`                            // 当前重试次数
	WorkflowId    string                 `protobuf:"bytes,4,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`                             // 工作流ID（如果启动了重试）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferStatusUpdateResp) Reset() {
	*x = TransferStatusUpdateResp{}
	mi := &file_fund_v1_fund_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferStatusUpdateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferStatusUpdateResp) ProtoMessage() {}

func (x *TransferStatusUpdateResp) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferStatusUpdateResp.ProtoReflect.Descriptor instead.
func (*TransferStatusUpdateResp) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{19}
}

func (x *TransferStatusUpdateResp) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *TransferStatusUpdateResp) GetNewStatus() v1.TransferStatus {
	if x != nil {
		return x.NewStatus
	}
	return v1.TransferStatus(0)
}

func (x *TransferStatusUpdateResp) GetRetryCount() int64 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *TransferStatusUpdateResp) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

type CreateUserBalanceRecordReq struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Records       []*UserBalanceRecordItem `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`                // 记录列表，限制1-1000条
	BatchId       string                   `protobuf:"bytes,2,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"` // 批次ID，用于幂等性控制
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateUserBalanceRecordReq) Reset() {
	*x = CreateUserBalanceRecordReq{}
	mi := &file_fund_v1_fund_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateUserBalanceRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserBalanceRecordReq) ProtoMessage() {}

func (x *CreateUserBalanceRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserBalanceRecordReq.ProtoReflect.Descriptor instead.
func (*CreateUserBalanceRecordReq) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{20}
}

func (x *CreateUserBalanceRecordReq) GetRecords() []*UserBalanceRecordItem {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *CreateUserBalanceRecordReq) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

// UserBalanceRecordItem 用户余额变动记录项
type UserBalanceRecordItem struct {
	state           protoimpl.MessageState        `protogen:"open.v1"`
	MerchantId      int64                         `protobuf:"varint,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`                                                          // 商户ID
	UserId          int64                         `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                      // 用户ID
	PlatformId      int64                         `protobuf:"varint,3,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`                                                          // 平台ID
	TransactionType v1.UserBalanceTransactionType `protobuf:"varint,4,opt,name=transaction_type,json=transactionType,proto3,enum=common.v1.UserBalanceTransactionType" json:"transaction_type,omitempty"` // 交易类型
	Amount          string                        `protobuf:"bytes,5,opt,name=amount,proto3" json:"amount,omitempty"`                                                                                     // 变动金额（使用string表示decimal）
	BalanceBefore   string                        `protobuf:"bytes,6,opt,name=balance_before,json=balanceBefore,proto3" json:"balance_before,omitempty"`                                                  // 变动前余额
	BalanceAfter    string                        `protobuf:"bytes,7,opt,name=balance_after,json=balanceAfter,proto3" json:"balance_after,omitempty"`                                                     // 变动后余额
	CurrencyCode    string                        `protobuf:"bytes,8,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`                                                     // 币种代码
	RelatedOrderId  string                        `protobuf:"bytes,9,opt,name=related_order_id,json=relatedOrderId,proto3" json:"related_order_id,omitempty"`                                             // 关联业务记录ID
	PlatformOrderId string                        `protobuf:"bytes,10,opt,name=platform_order_id,json=platformOrderId,proto3" json:"platform_order_id,omitempty"`                                         // 三方平台订单ID
	MerchantOrderId string                        `protobuf:"bytes,11,opt,name=merchant_order_id,json=merchantOrderId,proto3" json:"merchant_order_id,omitempty"`                                         // 下游商户订单ID
	TransactionId   string                        `protobuf:"bytes,12,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`                                                 // 中台交易流水号（唯一）
	TradeTime       int64                         `protobuf:"varint,13,opt,name=trade_time,json=tradeTime,proto3" json:"trade_time,omitempty"`                                                            // 交易时间（毫秒）
	Description     string                        `protobuf:"bytes,14,opt,name=description,proto3" json:"description,omitempty"`                                                                          // 交易描述
	Remark          string                        `protobuf:"bytes,15,opt,name=remark,proto3" json:"remark,omitempty"`                                                                                    // 备注信息
	ClientIp        string                        `protobuf:"bytes,16,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`                                                                // 客户端IP
	UserAgent       string                        `protobuf:"bytes,17,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`                                                             // 用户代理
	ExtData         string                        `protobuf:"bytes,18,opt,name=ext_data,json=extData,proto3" json:"ext_data,omitempty"`                                                                   // 扩展数据（JSON格式）
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UserBalanceRecordItem) Reset() {
	*x = UserBalanceRecordItem{}
	mi := &file_fund_v1_fund_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserBalanceRecordItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserBalanceRecordItem) ProtoMessage() {}

func (x *UserBalanceRecordItem) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserBalanceRecordItem.ProtoReflect.Descriptor instead.
func (*UserBalanceRecordItem) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{21}
}

func (x *UserBalanceRecordItem) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *UserBalanceRecordItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserBalanceRecordItem) GetPlatformId() int64 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *UserBalanceRecordItem) GetTransactionType() v1.UserBalanceTransactionType {
	if x != nil {
		return x.TransactionType
	}
	return v1.UserBalanceTransactionType(0)
}

func (x *UserBalanceRecordItem) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *UserBalanceRecordItem) GetBalanceBefore() string {
	if x != nil {
		return x.BalanceBefore
	}
	return ""
}

func (x *UserBalanceRecordItem) GetBalanceAfter() string {
	if x != nil {
		return x.BalanceAfter
	}
	return ""
}

func (x *UserBalanceRecordItem) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *UserBalanceRecordItem) GetRelatedOrderId() string {
	if x != nil {
		return x.RelatedOrderId
	}
	return ""
}

func (x *UserBalanceRecordItem) GetPlatformOrderId() string {
	if x != nil {
		return x.PlatformOrderId
	}
	return ""
}

func (x *UserBalanceRecordItem) GetMerchantOrderId() string {
	if x != nil {
		return x.MerchantOrderId
	}
	return ""
}

func (x *UserBalanceRecordItem) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *UserBalanceRecordItem) GetTradeTime() int64 {
	if x != nil {
		return x.TradeTime
	}
	return 0
}

func (x *UserBalanceRecordItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UserBalanceRecordItem) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserBalanceRecordItem) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *UserBalanceRecordItem) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *UserBalanceRecordItem) GetExtData() string {
	if x != nil {
		return x.ExtData
	}
	return ""
}

// SaveGameRecordRequest 包含了存储多条完整游戏记录所需的所有信息。
type SaveGameRecordRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BetDetails    [][]byte               `protobuf:"bytes,1,rep,name=bet_details,json=betDetails,proto3" json:"bet_details,omitempty"`
	BetSummaries  [][]byte               `protobuf:"bytes,2,rep,name=bet_summaries,json=betSummaries,proto3" json:"bet_summaries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveGameRecordRequest) Reset() {
	*x = SaveGameRecordRequest{}
	mi := &file_fund_v1_fund_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveGameRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveGameRecordRequest) ProtoMessage() {}

func (x *SaveGameRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fund_v1_fund_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveGameRecordRequest.ProtoReflect.Descriptor instead.
func (*SaveGameRecordRequest) Descriptor() ([]byte, []int) {
	return file_fund_v1_fund_proto_rawDescGZIP(), []int{22}
}

func (x *SaveGameRecordRequest) GetBetDetails() [][]byte {
	if x != nil {
		return x.BetDetails
	}
	return nil
}

func (x *SaveGameRecordRequest) GetBetSummaries() [][]byte {
	if x != nil {
		return x.BetSummaries
	}
	return nil
}

var File_fund_v1_fund_proto protoreflect.FileDescriptor

const file_fund_v1_fund_proto_rawDesc = "" +
	"\n" +
	"\x12fund/v1/fund.proto\x12\afund.v1\x1a\x14common/v1/enum.proto\"\t\n" +
	"\aFundReq\"\n" +
	"\n" +
	"\bFundResp\"P\n" +
	"\x12UserBalanceListReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12!\n" +
	"\fplatform_ids\x18\x02 \x03(\x03R\vplatformIds\"\x9a\x01\n" +
	"\x13UserBalanceListResp\x12F\n" +
	"\bbalances\x18\x01 \x03(\v2*.fund.v1.UserBalanceListResp.BalancesEntryR\bbalances\x1a;\n" +
	"\rBalancesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa8\x02\n" +
	"\rTransferInReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1f\n" +
	"\vplatform_id\x18\x02 \x01(\x03R\n" +
	"platformId\x12%\n" +
	"\x0edeposit_amount\x18\x03 \x01(\tR\rdepositAmount\x12*\n" +
	"\x11merchant_order_id\x18\x04 \x01(\tR\x0fmerchantOrderId\x12J\n" +
	"\fextra_params\x18\x05 \x03(\v2'.fund.v1.TransferInReq.ExtraParamsEntryR\vextraParams\x1a>\n" +
	"\x10ExtraParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa6\x02\n" +
	"\x0eTransferInResp\x12(\n" +
	"\x04code\x18\x01 \x01(\x0e2\x14.common.v1.ErrorCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0etransaction_id\x18\x03 \x01(\tR\rtransactionId\x12*\n" +
	"\x11merchant_order_id\x18\x04 \x01(\tR\x0fmerchantOrderId\x121\n" +
	"\x06status\x18\x05 \x01(\x0e2\x19.common.v1.TransferStatusR\x06status\x12%\n" +
	"\x0edeposit_amount\x18\x06 \x01(\tR\rdepositAmount\x12#\n" +
	"\rbalance_after\x18\a \x01(\tR\fbalanceAfter\"\xb0\x02\n" +
	"\x0eTransferOutReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1f\n" +
	"\vplatform_id\x18\x02 \x01(\x03R\n" +
	"platformId\x12*\n" +
	"\x11merchant_order_id\x18\x03 \x01(\tR\x0fmerchantOrderId\x12K\n" +
	"\fextra_params\x18\x04 \x03(\v2(.fund.v1.TransferOutReq.ExtraParamsEntryR\vextraParams\x12+\n" +
	"\x11withdrawal_amount\x18\x05 \x01(\tR\x10withdrawalAmount\x1a>\n" +
	"\x10ExtraParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xad\x02\n" +
	"\x0fTransferOutResp\x12(\n" +
	"\x04code\x18\x01 \x01(\x0e2\x14.common.v1.ErrorCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0etransaction_id\x18\x03 \x01(\tR\rtransactionId\x12*\n" +
	"\x11merchant_order_id\x18\x04 \x01(\tR\x0fmerchantOrderId\x121\n" +
	"\x06status\x18\x05 \x01(\x0e2\x19.common.v1.TransferStatusR\x06status\x12+\n" +
	"\x11withdrawal_amount\x18\x06 \x01(\tR\x10withdrawalAmount\x12#\n" +
	"\rbalance_after\x18\a \x01(\tR\fbalanceAfter\"\x85\x01\n" +
	"\x13TransferProgressReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12'\n" +
	"\x0ftransaction_ids\x18\x02 \x03(\tR\x0etransactionIds\x12,\n" +
	"\x12merchant_order_ids\x18\x03 \x03(\tR\x10merchantOrderIds\"\xe1\x02\n" +
	"\x14TransferProgressResp\x12G\n" +
	"\bprogress\x18\x01 \x03(\v2+.fund.v1.TransferProgressResp.ProgressEntryR\bprogress\x12H\n" +
	"\tnot_match\x18\x02 \x03(\v2+.fund.v1.TransferProgressResp.NotMatchEntryR\bnotMatch\x1aZ\n" +
	"\rProgressEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.fund.v1.TransferProgressInfoR\x05value:\x028\x01\x1aZ\n" +
	"\rNotMatchEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x123\n" +
	"\x05value\x18\x02 \x01(\v2\x1d.fund.v1.TransferProgressInfoR\x05value:\x028\x01\"\x84\x03\n" +
	"\x14TransferProgressInfo\x12(\n" +
	"\x04code\x18\x01 \x01(\x0e2\x14.common.v1.ErrorCodeR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0etransaction_id\x18\x03 \x01(\tR\rtransactionId\x12*\n" +
	"\x11merchant_order_id\x18\x04 \x01(\tR\x0fmerchantOrderId\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\tR\x06amount\x12D\n" +
	"\rtransfer_type\x18\x06 \x01(\x0e2\x1f.common.v1.TransactionDirectionR\ftransferType\x121\n" +
	"\x06status\x18\a \x01(\x0e2\x19.common.v1.TransferStatusR\x06status\x12!\n" +
	"\fcreated_time\x18\b \x01(\x03R\vcreatedTime\x12!\n" +
	"\fupdated_time\x18\t \x01(\x03R\vupdatedTime\"M\n" +
	"\x11GetUserBalanceReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1f\n" +
	"\vplatform_id\x18\x02 \x01(\x03R\n" +
	"platformId\"H\n" +
	"\x12GetUserBalanceResp\x12\x18\n" +
	"\abalance\x18\x01 \x01(\tR\abalance\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\"E\n" +
	"\x0fUserBalanceInfo\x12\x18\n" +
	"\abalance\x18\x01 \x01(\tR\abalance\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\"S\n" +
	"\x15GetUserBalanceListReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12!\n" +
	"\fplatform_ids\x18\x02 \x03(\x03R\vplatformIds\"\xba\x01\n" +
	"\x16GetUserBalanceListResp\x12I\n" +
	"\bbalances\x18\x01 \x03(\v2-.fund.v1.GetUserBalanceListResp.BalancesEntryR\bbalances\x1aU\n" +
	"\rBalancesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12.\n" +
	"\x05value\x18\x02 \x01(\v2\x18.fund.v1.UserBalanceInfoR\x05value:\x028\x01\"\x83\x03\n" +
	"\x0eTransactionReq\x12.\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1a.common.v1.TransactionTypeR\x04type\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x17\n" +
	"\agame_id\x18\x03 \x01(\x03R\x06gameId\x12\x1f\n" +
	"\vplatform_id\x18\x04 \x01(\x03R\n" +
	"platformId\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\tR\x06amount\x12\x19\n" +
	"\border_id\x18\x06 \x01(\tR\aorderId\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12\x19\n" +
	"\bround_id\x18\b \x01(\tR\aroundId\x12A\n" +
	"\bmetadata\x18\t \x03(\v2%.fund.v1.TransactionReq.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbc\x01\n" +
	"\x0fTransactionResp\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12%\n" +
	"\x0ebalance_before\x18\x03 \x01(\tR\rbalanceBefore\x12#\n" +
	"\rbalance_after\x18\x04 \x01(\tR\fbalanceAfter\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"\xf7\x01\n" +
	"\x17TransferStatusUpdateReq\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1f\n" +
	"\vplatform_id\x18\x02 \x01(\x03R\n" +
	"platformId\x12%\n" +
	"\x0etransaction_id\x18\x03 \x01(\tR\rtransactionId\x12!\n" +
	"\fenable_retry\x18\x04 \x01(\bR\venableRetry\x12@\n" +
	"\x0ecurrent_status\x18\x05 \x01(\x0e2\x19.common.v1.TransferStatusR\rcurrentStatus\x12\x16\n" +
	"\x06reason\x18\x06 \x01(\tR\x06reason\"\xbd\x01\n" +
	"\x18TransferStatusUpdateResp\x12%\n" +
	"\x0etransaction_id\x18\x01 \x01(\tR\rtransactionId\x128\n" +
	"\n" +
	"new_status\x18\x02 \x01(\x0e2\x19.common.v1.TransferStatusR\tnewStatus\x12\x1f\n" +
	"\vretry_count\x18\x03 \x01(\x03R\n" +
	"retryCount\x12\x1f\n" +
	"\vworkflow_id\x18\x04 \x01(\tR\n" +
	"workflowId\"q\n" +
	"\x1aCreateUserBalanceRecordReq\x128\n" +
	"\arecords\x18\x01 \x03(\v2\x1e.fund.v1.UserBalanceRecordItemR\arecords\x12\x19\n" +
	"\bbatch_id\x18\x02 \x01(\tR\abatchId\"\xa6\x05\n" +
	"\x15UserBalanceRecordItem\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\x03R\n" +
	"merchantId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x1f\n" +
	"\vplatform_id\x18\x03 \x01(\x03R\n" +
	"platformId\x12P\n" +
	"\x10transaction_type\x18\x04 \x01(\x0e2%.common.v1.UserBalanceTransactionTypeR\x0ftransactionType\x12\x16\n" +
	"\x06amount\x18\x05 \x01(\tR\x06amount\x12%\n" +
	"\x0ebalance_before\x18\x06 \x01(\tR\rbalanceBefore\x12#\n" +
	"\rbalance_after\x18\a \x01(\tR\fbalanceAfter\x12#\n" +
	"\rcurrency_code\x18\b \x01(\tR\fcurrencyCode\x12(\n" +
	"\x10related_order_id\x18\t \x01(\tR\x0erelatedOrderId\x12*\n" +
	"\x11platform_order_id\x18\n" +
	" \x01(\tR\x0fplatformOrderId\x12*\n" +
	"\x11merchant_order_id\x18\v \x01(\tR\x0fmerchantOrderId\x12%\n" +
	"\x0etransaction_id\x18\f \x01(\tR\rtransactionId\x12\x1d\n" +
	"\n" +
	"trade_time\x18\r \x01(\x03R\ttradeTime\x12 \n" +
	"\vdescription\x18\x0e \x01(\tR\vdescription\x12\x16\n" +
	"\x06remark\x18\x0f \x01(\tR\x06remark\x12\x1b\n" +
	"\tclient_ip\x18\x10 \x01(\tR\bclientIp\x12\x1d\n" +
	"\n" +
	"user_agent\x18\x11 \x01(\tR\tuserAgent\x12\x19\n" +
	"\bext_data\x18\x12 \x01(\tR\aextData\"]\n" +
	"\x15SaveGameRecordRequest\x12\x1f\n" +
	"\vbet_details\x18\x01 \x03(\fR\n" +
	"betDetails\x12#\n" +
	"\rbet_summaries\x18\x02 \x03(\fR\fbetSummaries2\xb6\x02\n" +
	"\x0eFundApiService\x12O\n" +
	"\x12GetUserBalanceList\x12\x1b.fund.v1.UserBalanceListReq\x1a\x1c.fund.v1.UserBalanceListResp\x12=\n" +
	"\n" +
	"TransferIn\x12\x16.fund.v1.TransferInReq\x1a\x17.fund.v1.TransferInResp\x12@\n" +
	"\vTransferOut\x12\x17.fund.v1.TransferOutReq\x1a\x18.fund.v1.TransferOutResp\x12R\n" +
	"\x13GetTransferProgress\x12\x1c.fund.v1.TransferProgressReq\x1a\x1d.fund.v1.TransferProgressResp2\xf2\x03\n" +
	"\x10FundInnerService\x12I\n" +
	"\x0eGetUserBalance\x12\x1a.fund.v1.GetUserBalanceReq\x1a\x1b.fund.v1.GetUserBalanceResp\x12U\n" +
	"\x12GetUserBalanceList\x12\x1e.fund.v1.GetUserBalanceListReq\x1a\x1f.fund.v1.GetUserBalanceListResp\x12G\n" +
	"\x12ProcessTransaction\x12\x17.fund.v1.TransactionReq\x1a\x18.fund.v1.TransactionResp\x12[\n" +
	"\x14UpdateTransferStatus\x12 .fund.v1.TransferStatusUpdateReq\x1a!.fund.v1.TransferStatusUpdateResp\x12Q\n" +
	"\x17CreateUserBalanceRecord\x12#.fund.v1.CreateUserBalanceRecordReq\x1a\x11.fund.v1.FundResp\x12C\n" +
	"\x0eSaveGameRecord\x12\x1e.fund.v1.SaveGameRecordRequest\x1a\x11.fund.v1.FundRespB4Z2github.com/og-game/game-proto/proto-gen-go/fund/v1b\x06proto3"

var (
	file_fund_v1_fund_proto_rawDescOnce sync.Once
	file_fund_v1_fund_proto_rawDescData []byte
)

func file_fund_v1_fund_proto_rawDescGZIP() []byte {
	file_fund_v1_fund_proto_rawDescOnce.Do(func() {
		file_fund_v1_fund_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fund_v1_fund_proto_rawDesc), len(file_fund_v1_fund_proto_rawDesc)))
	})
	return file_fund_v1_fund_proto_rawDescData
}

var file_fund_v1_fund_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_fund_v1_fund_proto_goTypes = []any{
	(*FundReq)(nil),                    // 0: fund.v1.FundReq
	(*FundResp)(nil),                   // 1: fund.v1.FundResp
	(*UserBalanceListReq)(nil),         // 2: fund.v1.UserBalanceListReq
	(*UserBalanceListResp)(nil),        // 3: fund.v1.UserBalanceListResp
	(*TransferInReq)(nil),              // 4: fund.v1.TransferInReq
	(*TransferInResp)(nil),             // 5: fund.v1.TransferInResp
	(*TransferOutReq)(nil),             // 6: fund.v1.TransferOutReq
	(*TransferOutResp)(nil),            // 7: fund.v1.TransferOutResp
	(*TransferProgressReq)(nil),        // 8: fund.v1.TransferProgressReq
	(*TransferProgressResp)(nil),       // 9: fund.v1.TransferProgressResp
	(*TransferProgressInfo)(nil),       // 10: fund.v1.TransferProgressInfo
	(*GetUserBalanceReq)(nil),          // 11: fund.v1.GetUserBalanceReq
	(*GetUserBalanceResp)(nil),         // 12: fund.v1.GetUserBalanceResp
	(*UserBalanceInfo)(nil),            // 13: fund.v1.UserBalanceInfo
	(*GetUserBalanceListReq)(nil),      // 14: fund.v1.GetUserBalanceListReq
	(*GetUserBalanceListResp)(nil),     // 15: fund.v1.GetUserBalanceListResp
	(*TransactionReq)(nil),             // 16: fund.v1.TransactionReq
	(*TransactionResp)(nil),            // 17: fund.v1.TransactionResp
	(*TransferStatusUpdateReq)(nil),    // 18: fund.v1.TransferStatusUpdateReq
	(*TransferStatusUpdateResp)(nil),   // 19: fund.v1.TransferStatusUpdateResp
	(*CreateUserBalanceRecordReq)(nil), // 20: fund.v1.CreateUserBalanceRecordReq
	(*UserBalanceRecordItem)(nil),      // 21: fund.v1.UserBalanceRecordItem
	(*SaveGameRecordRequest)(nil),      // 22: fund.v1.SaveGameRecordRequest
	nil,                                // 23: fund.v1.UserBalanceListResp.BalancesEntry
	nil,                                // 24: fund.v1.TransferInReq.ExtraParamsEntry
	nil,                                // 25: fund.v1.TransferOutReq.ExtraParamsEntry
	nil,                                // 26: fund.v1.TransferProgressResp.ProgressEntry
	nil,                                // 27: fund.v1.TransferProgressResp.NotMatchEntry
	nil,                                // 28: fund.v1.GetUserBalanceListResp.BalancesEntry
	nil,                                // 29: fund.v1.TransactionReq.MetadataEntry
	(v1.ErrorCode)(0),                  // 30: common.v1.ErrorCode
	(v1.TransferStatus)(0),             // 31: common.v1.TransferStatus
	(v1.TransactionDirection)(0),       // 32: common.v1.TransactionDirection
	(v1.TransactionType)(0),            // 33: common.v1.TransactionType
	(v1.UserBalanceTransactionType)(0), // 34: common.v1.UserBalanceTransactionType
}
var file_fund_v1_fund_proto_depIdxs = []int32{
	23, // 0: fund.v1.UserBalanceListResp.balances:type_name -> fund.v1.UserBalanceListResp.BalancesEntry
	24, // 1: fund.v1.TransferInReq.extra_params:type_name -> fund.v1.TransferInReq.ExtraParamsEntry
	30, // 2: fund.v1.TransferInResp.code:type_name -> common.v1.ErrorCode
	31, // 3: fund.v1.TransferInResp.status:type_name -> common.v1.TransferStatus
	25, // 4: fund.v1.TransferOutReq.extra_params:type_name -> fund.v1.TransferOutReq.ExtraParamsEntry
	30, // 5: fund.v1.TransferOutResp.code:type_name -> common.v1.ErrorCode
	31, // 6: fund.v1.TransferOutResp.status:type_name -> common.v1.TransferStatus
	26, // 7: fund.v1.TransferProgressResp.progress:type_name -> fund.v1.TransferProgressResp.ProgressEntry
	27, // 8: fund.v1.TransferProgressResp.not_match:type_name -> fund.v1.TransferProgressResp.NotMatchEntry
	30, // 9: fund.v1.TransferProgressInfo.code:type_name -> common.v1.ErrorCode
	32, // 10: fund.v1.TransferProgressInfo.transfer_type:type_name -> common.v1.TransactionDirection
	31, // 11: fund.v1.TransferProgressInfo.status:type_name -> common.v1.TransferStatus
	28, // 12: fund.v1.GetUserBalanceListResp.balances:type_name -> fund.v1.GetUserBalanceListResp.BalancesEntry
	33, // 13: fund.v1.TransactionReq.type:type_name -> common.v1.TransactionType
	29, // 14: fund.v1.TransactionReq.metadata:type_name -> fund.v1.TransactionReq.MetadataEntry
	31, // 15: fund.v1.TransferStatusUpdateReq.current_status:type_name -> common.v1.TransferStatus
	31, // 16: fund.v1.TransferStatusUpdateResp.new_status:type_name -> common.v1.TransferStatus
	21, // 17: fund.v1.CreateUserBalanceRecordReq.records:type_name -> fund.v1.UserBalanceRecordItem
	34, // 18: fund.v1.UserBalanceRecordItem.transaction_type:type_name -> common.v1.UserBalanceTransactionType
	10, // 19: fund.v1.TransferProgressResp.ProgressEntry.value:type_name -> fund.v1.TransferProgressInfo
	10, // 20: fund.v1.TransferProgressResp.NotMatchEntry.value:type_name -> fund.v1.TransferProgressInfo
	13, // 21: fund.v1.GetUserBalanceListResp.BalancesEntry.value:type_name -> fund.v1.UserBalanceInfo
	2,  // 22: fund.v1.FundApiService.GetUserBalanceList:input_type -> fund.v1.UserBalanceListReq
	4,  // 23: fund.v1.FundApiService.TransferIn:input_type -> fund.v1.TransferInReq
	6,  // 24: fund.v1.FundApiService.TransferOut:input_type -> fund.v1.TransferOutReq
	8,  // 25: fund.v1.FundApiService.GetTransferProgress:input_type -> fund.v1.TransferProgressReq
	11, // 26: fund.v1.FundInnerService.GetUserBalance:input_type -> fund.v1.GetUserBalanceReq
	14, // 27: fund.v1.FundInnerService.GetUserBalanceList:input_type -> fund.v1.GetUserBalanceListReq
	16, // 28: fund.v1.FundInnerService.ProcessTransaction:input_type -> fund.v1.TransactionReq
	18, // 29: fund.v1.FundInnerService.UpdateTransferStatus:input_type -> fund.v1.TransferStatusUpdateReq
	20, // 30: fund.v1.FundInnerService.CreateUserBalanceRecord:input_type -> fund.v1.CreateUserBalanceRecordReq
	22, // 31: fund.v1.FundInnerService.SaveGameRecord:input_type -> fund.v1.SaveGameRecordRequest
	3,  // 32: fund.v1.FundApiService.GetUserBalanceList:output_type -> fund.v1.UserBalanceListResp
	5,  // 33: fund.v1.FundApiService.TransferIn:output_type -> fund.v1.TransferInResp
	7,  // 34: fund.v1.FundApiService.TransferOut:output_type -> fund.v1.TransferOutResp
	9,  // 35: fund.v1.FundApiService.GetTransferProgress:output_type -> fund.v1.TransferProgressResp
	12, // 36: fund.v1.FundInnerService.GetUserBalance:output_type -> fund.v1.GetUserBalanceResp
	15, // 37: fund.v1.FundInnerService.GetUserBalanceList:output_type -> fund.v1.GetUserBalanceListResp
	17, // 38: fund.v1.FundInnerService.ProcessTransaction:output_type -> fund.v1.TransactionResp
	19, // 39: fund.v1.FundInnerService.UpdateTransferStatus:output_type -> fund.v1.TransferStatusUpdateResp
	1,  // 40: fund.v1.FundInnerService.CreateUserBalanceRecord:output_type -> fund.v1.FundResp
	1,  // 41: fund.v1.FundInnerService.SaveGameRecord:output_type -> fund.v1.FundResp
	32, // [32:42] is the sub-list for method output_type
	22, // [22:32] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_fund_v1_fund_proto_init() }
func file_fund_v1_fund_proto_init() {
	if File_fund_v1_fund_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fund_v1_fund_proto_rawDesc), len(file_fund_v1_fund_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_fund_v1_fund_proto_goTypes,
		DependencyIndexes: file_fund_v1_fund_proto_depIdxs,
		MessageInfos:      file_fund_v1_fund_proto_msgTypes,
	}.Build()
	File_fund_v1_fund_proto = out.File
	file_fund_v1_fund_proto_goTypes = nil
	file_fund_v1_fund_proto_depIdxs = nil
}
