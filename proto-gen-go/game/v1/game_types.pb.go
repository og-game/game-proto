// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: game/v1/game_types.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 游戏类型枚举
type GameType int32

const (
	GameType_GAME_TYPE_UNSPECIFIED GameType = 0
	GameType_GAME_TYPE_SLOT        GameType = 1 // 老虎机
	GameType_GAME_TYPE_POKER       GameType = 2 // 扑克
	GameType_GAME_TYPE_ROULETTE    GameType = 3 // 轮盘
	GameType_GAME_TYPE_BACCARAT    GameType = 4 // 百家乐
	GameType_GAME_TYPE_BLACKJACK   GameType = 5 // 21点
	GameType_GAME_TYPE_DICE        GameType = 6 // 骰子
	GameType_GAME_TYPE_LOTTERY     GameType = 7 // 彩票
	GameType_GAME_TYPE_SPORTS      GameType = 8 // 体育
)

// Enum value maps for GameType.
var (
	GameType_name = map[int32]string{
		0: "GAME_TYPE_UNSPECIFIED",
		1: "GAME_TYPE_SLOT",
		2: "GAME_TYPE_POKER",
		3: "GAME_TYPE_ROULETTE",
		4: "GAME_TYPE_BACCARAT",
		5: "GAME_TYPE_BLACKJACK",
		6: "GAME_TYPE_DICE",
		7: "GAME_TYPE_LOTTERY",
		8: "GAME_TYPE_SPORTS",
	}
	GameType_value = map[string]int32{
		"GAME_TYPE_UNSPECIFIED": 0,
		"GAME_TYPE_SLOT":        1,
		"GAME_TYPE_POKER":       2,
		"GAME_TYPE_ROULETTE":    3,
		"GAME_TYPE_BACCARAT":    4,
		"GAME_TYPE_BLACKJACK":   5,
		"GAME_TYPE_DICE":        6,
		"GAME_TYPE_LOTTERY":     7,
		"GAME_TYPE_SPORTS":      8,
	}
)

func (x GameType) Enum() *GameType {
	p := new(GameType)
	*p = x
	return p
}

func (x GameType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_v1_game_types_proto_enumTypes[0].Descriptor()
}

func (GameType) Type() protoreflect.EnumType {
	return &file_game_v1_game_types_proto_enumTypes[0]
}

func (x GameType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameType.Descriptor instead.
func (GameType) EnumDescriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{0}
}

// 游戏状态枚举
type GameStatus int32

const (
	GameStatus_GAME_STATUS_UNSPECIFIED GameStatus = 0
	GameStatus_GAME_STATUS_CREATED     GameStatus = 1 // 已创建
	GameStatus_GAME_STATUS_WAITING     GameStatus = 2 // 等待中
	GameStatus_GAME_STATUS_RUNNING     GameStatus = 3 // 进行中
	GameStatus_GAME_STATUS_FINISHED    GameStatus = 4 // 已结束
	GameStatus_GAME_STATUS_CANCELLED   GameStatus = 5 // 已取消
	GameStatus_GAME_STATUS_ERROR       GameStatus = 6 // 异常
)

// Enum value maps for GameStatus.
var (
	GameStatus_name = map[int32]string{
		0: "GAME_STATUS_UNSPECIFIED",
		1: "GAME_STATUS_CREATED",
		2: "GAME_STATUS_WAITING",
		3: "GAME_STATUS_RUNNING",
		4: "GAME_STATUS_FINISHED",
		5: "GAME_STATUS_CANCELLED",
		6: "GAME_STATUS_ERROR",
	}
	GameStatus_value = map[string]int32{
		"GAME_STATUS_UNSPECIFIED": 0,
		"GAME_STATUS_CREATED":     1,
		"GAME_STATUS_WAITING":     2,
		"GAME_STATUS_RUNNING":     3,
		"GAME_STATUS_FINISHED":    4,
		"GAME_STATUS_CANCELLED":   5,
		"GAME_STATUS_ERROR":       6,
	}
)

func (x GameStatus) Enum() *GameStatus {
	p := new(GameStatus)
	*p = x
	return p
}

func (x GameStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_game_v1_game_types_proto_enumTypes[1].Descriptor()
}

func (GameStatus) Type() protoreflect.EnumType {
	return &file_game_v1_game_types_proto_enumTypes[1]
}

func (x GameStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameStatus.Descriptor instead.
func (GameStatus) EnumDescriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{1}
}

// 玩家状态枚举
type PlayerStatus int32

const (
	PlayerStatus_PLAYER_STATUS_UNSPECIFIED PlayerStatus = 0
	PlayerStatus_PLAYER_STATUS_WAITING     PlayerStatus = 1 // 等待中
	PlayerStatus_PLAYER_STATUS_READY       PlayerStatus = 2 // 已准备
	PlayerStatus_PLAYER_STATUS_PLAYING     PlayerStatus = 3 // 游戏中
	PlayerStatus_PLAYER_STATUS_FINISHED    PlayerStatus = 4 // 已完成
	PlayerStatus_PLAYER_STATUS_QUIT        PlayerStatus = 5 // 已退出
)

// Enum value maps for PlayerStatus.
var (
	PlayerStatus_name = map[int32]string{
		0: "PLAYER_STATUS_UNSPECIFIED",
		1: "PLAYER_STATUS_WAITING",
		2: "PLAYER_STATUS_READY",
		3: "PLAYER_STATUS_PLAYING",
		4: "PLAYER_STATUS_FINISHED",
		5: "PLAYER_STATUS_QUIT",
	}
	PlayerStatus_value = map[string]int32{
		"PLAYER_STATUS_UNSPECIFIED": 0,
		"PLAYER_STATUS_WAITING":     1,
		"PLAYER_STATUS_READY":       2,
		"PLAYER_STATUS_PLAYING":     3,
		"PLAYER_STATUS_FINISHED":    4,
		"PLAYER_STATUS_QUIT":        5,
	}
)

func (x PlayerStatus) Enum() *PlayerStatus {
	p := new(PlayerStatus)
	*p = x
	return p
}

func (x PlayerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_game_v1_game_types_proto_enumTypes[2].Descriptor()
}

func (PlayerStatus) Type() protoreflect.EnumType {
	return &file_game_v1_game_types_proto_enumTypes[2]
}

func (x PlayerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerStatus.Descriptor instead.
func (PlayerStatus) EnumDescriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{2}
}

// 投注类型
type BetType int32

const (
	BetType_BET_TYPE_UNSPECIFIED BetType = 0
	BetType_BET_TYPE_SINGLE      BetType = 1 // 单注
	BetType_BET_TYPE_MULTIPLE    BetType = 2 // 多注
	BetType_BET_TYPE_SYSTEM      BetType = 3 // 系统投注
)

// Enum value maps for BetType.
var (
	BetType_name = map[int32]string{
		0: "BET_TYPE_UNSPECIFIED",
		1: "BET_TYPE_SINGLE",
		2: "BET_TYPE_MULTIPLE",
		3: "BET_TYPE_SYSTEM",
	}
	BetType_value = map[string]int32{
		"BET_TYPE_UNSPECIFIED": 0,
		"BET_TYPE_SINGLE":      1,
		"BET_TYPE_MULTIPLE":    2,
		"BET_TYPE_SYSTEM":      3,
	}
)

func (x BetType) Enum() *BetType {
	p := new(BetType)
	*p = x
	return p
}

func (x BetType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BetType) Descriptor() protoreflect.EnumDescriptor {
	return file_game_v1_game_types_proto_enumTypes[3].Descriptor()
}

func (BetType) Type() protoreflect.EnumType {
	return &file_game_v1_game_types_proto_enumTypes[3]
}

func (x BetType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BetType.Descriptor instead.
func (BetType) EnumDescriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{3}
}

// 结算状态
type SettlementStatus int32

const (
	SettlementStatus_SETTLEMENT_STATUS_UNSPECIFIED SettlementStatus = 0
	SettlementStatus_SETTLEMENT_STATUS_PENDING     SettlementStatus = 1 // 待结算
	SettlementStatus_SETTLEMENT_STATUS_PROCESSING  SettlementStatus = 2 // 结算中
	SettlementStatus_SETTLEMENT_STATUS_COMPLETED   SettlementStatus = 3 // 已结算
	SettlementStatus_SETTLEMENT_STATUS_FAILED      SettlementStatus = 4 // 结算失败
)

// Enum value maps for SettlementStatus.
var (
	SettlementStatus_name = map[int32]string{
		0: "SETTLEMENT_STATUS_UNSPECIFIED",
		1: "SETTLEMENT_STATUS_PENDING",
		2: "SETTLEMENT_STATUS_PROCESSING",
		3: "SETTLEMENT_STATUS_COMPLETED",
		4: "SETTLEMENT_STATUS_FAILED",
	}
	SettlementStatus_value = map[string]int32{
		"SETTLEMENT_STATUS_UNSPECIFIED": 0,
		"SETTLEMENT_STATUS_PENDING":     1,
		"SETTLEMENT_STATUS_PROCESSING":  2,
		"SETTLEMENT_STATUS_COMPLETED":   3,
		"SETTLEMENT_STATUS_FAILED":      4,
	}
)

func (x SettlementStatus) Enum() *SettlementStatus {
	p := new(SettlementStatus)
	*p = x
	return p
}

func (x SettlementStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SettlementStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_game_v1_game_types_proto_enumTypes[4].Descriptor()
}

func (SettlementStatus) Type() protoreflect.EnumType {
	return &file_game_v1_game_types_proto_enumTypes[4]
}

func (x SettlementStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SettlementStatus.Descriptor instead.
func (SettlementStatus) EnumDescriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{4}
}

// 游戏信息
type GameInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GameId        string                 `protobuf:"bytes,1,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                                            // 游戏ID
	GameType      GameType               `protobuf:"varint,2,opt,name=game_type,json=gameType,proto3,enum=game.v1.GameType" json:"game_type,omitempty"`                               // 游戏类型
	Status        GameStatus             `protobuf:"varint,3,opt,name=status,proto3,enum=game.v1.GameStatus" json:"status,omitempty"`                                                 // 游戏状态
	CreatorId     int64                  `protobuf:"varint,4,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`                                                  // 创建者ID
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                   // 创建时间
	StartedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`                                                   // 开始时间
	FinishedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`                                                // 结束时间
	Config        *GameConfig            `protobuf:"bytes,8,opt,name=config,proto3" json:"config,omitempty"`                                                                          // 游戏配置
	Players       []*Player              `protobuf:"bytes,9,rep,name=players,proto3" json:"players,omitempty"`                                                                        // 玩家列表
	Result        *GameResult            `protobuf:"bytes,10,opt,name=result,proto3" json:"result,omitempty"`                                                                         // 游戏结果
	Extra         map[string]string      `protobuf:"bytes,11,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 扩展信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameInfo) Reset() {
	*x = GameInfo{}
	mi := &file_game_v1_game_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameInfo) ProtoMessage() {}

func (x *GameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameInfo.ProtoReflect.Descriptor instead.
func (*GameInfo) Descriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{0}
}

func (x *GameInfo) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GameInfo) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_GAME_TYPE_UNSPECIFIED
}

func (x *GameInfo) GetStatus() GameStatus {
	if x != nil {
		return x.Status
	}
	return GameStatus_GAME_STATUS_UNSPECIFIED
}

func (x *GameInfo) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *GameInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GameInfo) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *GameInfo) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *GameInfo) GetConfig() *GameConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GameInfo) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameInfo) GetResult() *GameResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *GameInfo) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

// 游戏配置
type GameConfig struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MinPlayers     int32                  `protobuf:"varint,1,opt,name=min_players,json=minPlayers,proto3" json:"min_players,omitempty"`                                              // 最小玩家数
	MaxPlayers     int32                  `protobuf:"varint,2,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`                                              // 最大玩家数
	MinBet         int64                  `protobuf:"varint,3,opt,name=min_bet,json=minBet,proto3" json:"min_bet,omitempty"`                                                          // 最小投注额（分）
	MaxBet         int64                  `protobuf:"varint,4,opt,name=max_bet,json=maxBet,proto3" json:"max_bet,omitempty"`                                                          // 最大投注额（分）
	TimeoutSeconds int32                  `protobuf:"varint,5,opt,name=timeout_seconds,json=timeoutSeconds,proto3" json:"timeout_seconds,omitempty"`                                  // 超时时间（秒）
	Rules          map[string]*anypb.Any  `protobuf:"bytes,6,rep,name=rules,proto3" json:"rules,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 游戏规则
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GameConfig) Reset() {
	*x = GameConfig{}
	mi := &file_game_v1_game_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameConfig) ProtoMessage() {}

func (x *GameConfig) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameConfig.ProtoReflect.Descriptor instead.
func (*GameConfig) Descriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{1}
}

func (x *GameConfig) GetMinPlayers() int32 {
	if x != nil {
		return x.MinPlayers
	}
	return 0
}

func (x *GameConfig) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *GameConfig) GetMinBet() int64 {
	if x != nil {
		return x.MinBet
	}
	return 0
}

func (x *GameConfig) GetMaxBet() int64 {
	if x != nil {
		return x.MaxBet
	}
	return 0
}

func (x *GameConfig) GetTimeoutSeconds() int32 {
	if x != nil {
		return x.TimeoutSeconds
	}
	return 0
}

func (x *GameConfig) GetRules() map[string]*anypb.Any {
	if x != nil {
		return x.Rules
	}
	return nil
}

// 玩家信息
type Player struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                           // 用户ID
	Nickname      string                 `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                                      // 昵称
	Avatar        string                 `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`                                                                          // 头像
	Status        PlayerStatus           `protobuf:"varint,4,opt,name=status,proto3,enum=game.v1.PlayerStatus" json:"status,omitempty"`                                               // 玩家状态
	SeatNo        int32                  `protobuf:"varint,5,opt,name=seat_no,json=seatNo,proto3" json:"seat_no,omitempty"`                                                           // 座位号
	Balance       int64                  `protobuf:"varint,6,opt,name=balance,proto3" json:"balance,omitempty"`                                                                       // 余额（分）
	JoinedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`                                                      // 加入时间
	Bets          []*Bet                 `protobuf:"bytes,8,rep,name=bets,proto3" json:"bets,omitempty"`                                                                              // 投注列表
	WinAmount     int64                  `protobuf:"varint,9,opt,name=win_amount,json=winAmount,proto3" json:"win_amount,omitempty"`                                                  // 赢取金额（分）
	Extra         map[string]string      `protobuf:"bytes,10,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 扩展信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_game_v1_game_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{2}
}

func (x *Player) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Player) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *Player) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *Player) GetStatus() PlayerStatus {
	if x != nil {
		return x.Status
	}
	return PlayerStatus_PLAYER_STATUS_UNSPECIFIED
}

func (x *Player) GetSeatNo() int32 {
	if x != nil {
		return x.SeatNo
	}
	return 0
}

func (x *Player) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Player) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *Player) GetBets() []*Bet {
	if x != nil {
		return x.Bets
	}
	return nil
}

func (x *Player) GetWinAmount() int64 {
	if x != nil {
		return x.WinAmount
	}
	return 0
}

func (x *Player) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

// 投注信息
type Bet struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BetId         string                 `protobuf:"bytes,1,opt,name=bet_id,json=betId,proto3" json:"bet_id,omitempty"`                                                                // 投注ID
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                            // 用户ID
	BetType       BetType                `protobuf:"varint,3,opt,name=bet_type,json=betType,proto3,enum=game.v1.BetType" json:"bet_type,omitempty"`                                    // 投注类型
	Amount        int64                  `protobuf:"varint,4,opt,name=amount,proto3" json:"amount,omitempty"`                                                                          // 投注金额（分）
	BetOption     string                 `protobuf:"bytes,5,opt,name=bet_option,json=betOption,proto3" json:"bet_option,omitempty"`                                                    // 投注选项
	Odds          float32                `protobuf:"fixed32,6,opt,name=odds,proto3" json:"odds,omitempty"`                                                                             // 赔率
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                    // 投注时间
	Detail        map[string]string      `protobuf:"bytes,8,rep,name=detail,proto3" json:"detail,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 投注详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Bet) Reset() {
	*x = Bet{}
	mi := &file_game_v1_game_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Bet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bet) ProtoMessage() {}

func (x *Bet) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bet.ProtoReflect.Descriptor instead.
func (*Bet) Descriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{3}
}

func (x *Bet) GetBetId() string {
	if x != nil {
		return x.BetId
	}
	return ""
}

func (x *Bet) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Bet) GetBetType() BetType {
	if x != nil {
		return x.BetType
	}
	return BetType_BET_TYPE_UNSPECIFIED
}

func (x *Bet) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Bet) GetBetOption() string {
	if x != nil {
		return x.BetOption
	}
	return ""
}

func (x *Bet) GetOdds() float32 {
	if x != nil {
		return x.Odds
	}
	return 0
}

func (x *Bet) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Bet) GetDetail() map[string]string {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 游戏结果
type GameResult struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ResultId         string                 `protobuf:"bytes,1,opt,name=result_id,json=resultId,proto3" json:"result_id,omitempty"`                                                        // 结果ID
	GameId           string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                                              // 游戏ID
	SettledAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=settled_at,json=settledAt,proto3" json:"settled_at,omitempty"`                                                     // 结算时间
	SettlementStatus SettlementStatus       `protobuf:"varint,4,opt,name=settlement_status,json=settlementStatus,proto3,enum=game.v1.SettlementStatus" json:"settlement_status,omitempty"` // 结算状态
	PlayerResults    []*PlayerResult        `protobuf:"bytes,5,rep,name=player_results,json=playerResults,proto3" json:"player_results,omitempty"`                                         // 玩家结果
	Detail           map[string]*anypb.Any  `protobuf:"bytes,6,rep,name=detail,proto3" json:"detail,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`  // 结果详情
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GameResult) Reset() {
	*x = GameResult{}
	mi := &file_game_v1_game_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameResult) ProtoMessage() {}

func (x *GameResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameResult.ProtoReflect.Descriptor instead.
func (*GameResult) Descriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{4}
}

func (x *GameResult) GetResultId() string {
	if x != nil {
		return x.ResultId
	}
	return ""
}

func (x *GameResult) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GameResult) GetSettledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SettledAt
	}
	return nil
}

func (x *GameResult) GetSettlementStatus() SettlementStatus {
	if x != nil {
		return x.SettlementStatus
	}
	return SettlementStatus_SETTLEMENT_STATUS_UNSPECIFIED
}

func (x *GameResult) GetPlayerResults() []*PlayerResult {
	if x != nil {
		return x.PlayerResults
	}
	return nil
}

func (x *GameResult) GetDetail() map[string]*anypb.Any {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 玩家结果
type PlayerResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                            // 用户ID
	BetAmount     int64                  `protobuf:"varint,2,opt,name=bet_amount,json=betAmount,proto3" json:"bet_amount,omitempty"`                                                   // 投注金额（分）
	WinAmount     int64                  `protobuf:"varint,3,opt,name=win_amount,json=winAmount,proto3" json:"win_amount,omitempty"`                                                   // 赢取金额（分）
	Profit        int64                  `protobuf:"varint,4,opt,name=profit,proto3" json:"profit,omitempty"`                                                                          // 盈亏（分）
	IsWinner      bool                   `protobuf:"varint,5,opt,name=is_winner,json=isWinner,proto3" json:"is_winner,omitempty"`                                                      // 是否获胜
	Detail        map[string]string      `protobuf:"bytes,6,rep,name=detail,proto3" json:"detail,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerResult) Reset() {
	*x = PlayerResult{}
	mi := &file_game_v1_game_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerResult) ProtoMessage() {}

func (x *PlayerResult) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerResult.ProtoReflect.Descriptor instead.
func (*PlayerResult) Descriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerResult) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PlayerResult) GetBetAmount() int64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *PlayerResult) GetWinAmount() int64 {
	if x != nil {
		return x.WinAmount
	}
	return 0
}

func (x *PlayerResult) GetProfit() int64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *PlayerResult) GetIsWinner() bool {
	if x != nil {
		return x.IsWinner
	}
	return false
}

func (x *PlayerResult) GetDetail() map[string]string {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 游戏记录
type GameRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecordId      string                 `protobuf:"bytes,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`                                                        // 记录ID
	GameId        string                 `protobuf:"bytes,2,opt,name=game_id,json=gameId,proto3" json:"game_id,omitempty"`                                                              // 游戏ID
	GameType      GameType               `protobuf:"varint,3,opt,name=game_type,json=gameType,proto3,enum=game.v1.GameType" json:"game_type,omitempty"`                                 // 游戏类型
	UserId        int64                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                             // 用户ID
	BetAmount     int64                  `protobuf:"varint,5,opt,name=bet_amount,json=betAmount,proto3" json:"bet_amount,omitempty"`                                                    // 投注金额（分）
	WinAmount     int64                  `protobuf:"varint,6,opt,name=win_amount,json=winAmount,proto3" json:"win_amount,omitempty"`                                                    // 赢取金额（分）
	Profit        int64                  `protobuf:"varint,7,opt,name=profit,proto3" json:"profit,omitempty"`                                                                           // 盈亏（分）
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                     // 创建时间
	RoundNo       string                 `protobuf:"bytes,9,opt,name=round_no,json=roundNo,proto3" json:"round_no,omitempty"`                                                           // 局号
	Detail        map[string]string      `protobuf:"bytes,10,rep,name=detail,proto3" json:"detail,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 详情
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameRecord) Reset() {
	*x = GameRecord{}
	mi := &file_game_v1_game_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRecord) ProtoMessage() {}

func (x *GameRecord) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRecord.ProtoReflect.Descriptor instead.
func (*GameRecord) Descriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{6}
}

func (x *GameRecord) GetRecordId() string {
	if x != nil {
		return x.RecordId
	}
	return ""
}

func (x *GameRecord) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *GameRecord) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_GAME_TYPE_UNSPECIFIED
}

func (x *GameRecord) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameRecord) GetBetAmount() int64 {
	if x != nil {
		return x.BetAmount
	}
	return 0
}

func (x *GameRecord) GetWinAmount() int64 {
	if x != nil {
		return x.WinAmount
	}
	return 0
}

func (x *GameRecord) GetProfit() int64 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *GameRecord) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GameRecord) GetRoundNo() string {
	if x != nil {
		return x.RoundNo
	}
	return ""
}

func (x *GameRecord) GetDetail() map[string]string {
	if x != nil {
		return x.Detail
	}
	return nil
}

// 游戏统计
type GameStatistics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                             // 用户ID
	GameType      GameType               `protobuf:"varint,2,opt,name=game_type,json=gameType,proto3,enum=game.v1.GameType" json:"game_type,omitempty"` // 游戏类型
	TotalGames    int32                  `protobuf:"varint,3,opt,name=total_games,json=totalGames,proto3" json:"total_games,omitempty"`                 // 总局数
	WinGames      int32                  `protobuf:"varint,4,opt,name=win_games,json=winGames,proto3" json:"win_games,omitempty"`                       // 胜利局数
	LoseGames     int32                  `protobuf:"varint,5,opt,name=lose_games,json=loseGames,proto3" json:"lose_games,omitempty"`                    // 失败局数
	TotalBet      int64                  `protobuf:"varint,6,opt,name=total_bet,json=totalBet,proto3" json:"total_bet,omitempty"`                       // 总投注额（分）
	TotalWin      int64                  `protobuf:"varint,7,opt,name=total_win,json=totalWin,proto3" json:"total_win,omitempty"`                       // 总赢取额（分）
	TotalProfit   int64                  `protobuf:"varint,8,opt,name=total_profit,json=totalProfit,proto3" json:"total_profit,omitempty"`              // 总盈亏（分）
	WinRate       float32                `protobuf:"fixed32,9,opt,name=win_rate,json=winRate,proto3" json:"win_rate,omitempty"`                         // 胜率
	FirstPlayAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=first_play_at,json=firstPlayAt,proto3" json:"first_play_at,omitempty"`            // 首次游戏时间
	LastPlayAt    *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=last_play_at,json=lastPlayAt,proto3" json:"last_play_at,omitempty"`               // 最后游戏时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameStatistics) Reset() {
	*x = GameStatistics{}
	mi := &file_game_v1_game_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStatistics) ProtoMessage() {}

func (x *GameStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStatistics.ProtoReflect.Descriptor instead.
func (*GameStatistics) Descriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{7}
}

func (x *GameStatistics) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GameStatistics) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_GAME_TYPE_UNSPECIFIED
}

func (x *GameStatistics) GetTotalGames() int32 {
	if x != nil {
		return x.TotalGames
	}
	return 0
}

func (x *GameStatistics) GetWinGames() int32 {
	if x != nil {
		return x.WinGames
	}
	return 0
}

func (x *GameStatistics) GetLoseGames() int32 {
	if x != nil {
		return x.LoseGames
	}
	return 0
}

func (x *GameStatistics) GetTotalBet() int64 {
	if x != nil {
		return x.TotalBet
	}
	return 0
}

func (x *GameStatistics) GetTotalWin() int64 {
	if x != nil {
		return x.TotalWin
	}
	return 0
}

func (x *GameStatistics) GetTotalProfit() int64 {
	if x != nil {
		return x.TotalProfit
	}
	return 0
}

func (x *GameStatistics) GetWinRate() float32 {
	if x != nil {
		return x.WinRate
	}
	return 0
}

func (x *GameStatistics) GetFirstPlayAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstPlayAt
	}
	return nil
}

func (x *GameStatistics) GetLastPlayAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPlayAt
	}
	return nil
}

// 排行榜项
type LeaderboardItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rank          int32                  `protobuf:"varint,1,opt,name=rank,proto3" json:"rank,omitempty"`                                                                            // 排名
	UserId        int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                          // 用户ID
	Nickname      string                 `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`                                                                     // 昵称
	Avatar        string                 `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`                                                                         // 头像
	Score         int64                  `protobuf:"varint,5,opt,name=score,proto3" json:"score,omitempty"`                                                                          // 分数
	Extra         map[string]string      `protobuf:"bytes,6,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 扩展信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaderboardItem) Reset() {
	*x = LeaderboardItem{}
	mi := &file_game_v1_game_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaderboardItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaderboardItem) ProtoMessage() {}

func (x *LeaderboardItem) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaderboardItem.ProtoReflect.Descriptor instead.
func (*LeaderboardItem) Descriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{8}
}

func (x *LeaderboardItem) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *LeaderboardItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *LeaderboardItem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *LeaderboardItem) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *LeaderboardItem) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *LeaderboardItem) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

// 游戏房间
type GameRoom struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	RoomId         string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`                                                           // 房间ID
	RoomName       string                 `protobuf:"bytes,2,opt,name=room_name,json=roomName,proto3" json:"room_name,omitempty"`                                                     // 房间名称
	GameType       GameType               `protobuf:"varint,3,opt,name=game_type,json=gameType,proto3,enum=game.v1.GameType" json:"game_type,omitempty"`                              // 游戏类型
	CurrentPlayers int32                  `protobuf:"varint,4,opt,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"`                                  // 当前玩家数
	MaxPlayers     int32                  `protobuf:"varint,5,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`                                              // 最大玩家数
	Config         *GameConfig            `protobuf:"bytes,6,opt,name=config,proto3" json:"config,omitempty"`                                                                         // 游戏配置
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                  // 创建时间
	Extra          map[string]string      `protobuf:"bytes,8,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 扩展信息
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GameRoom) Reset() {
	*x = GameRoom{}
	mi := &file_game_v1_game_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameRoom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoom) ProtoMessage() {}

func (x *GameRoom) ProtoReflect() protoreflect.Message {
	mi := &file_game_v1_game_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoom.ProtoReflect.Descriptor instead.
func (*GameRoom) Descriptor() ([]byte, []int) {
	return file_game_v1_game_types_proto_rawDescGZIP(), []int{9}
}

func (x *GameRoom) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GameRoom) GetRoomName() string {
	if x != nil {
		return x.RoomName
	}
	return ""
}

func (x *GameRoom) GetGameType() GameType {
	if x != nil {
		return x.GameType
	}
	return GameType_GAME_TYPE_UNSPECIFIED
}

func (x *GameRoom) GetCurrentPlayers() int32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

func (x *GameRoom) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *GameRoom) GetConfig() *GameConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GameRoom) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GameRoom) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_game_v1_game_types_proto protoreflect.FileDescriptor

const file_game_v1_game_types_proto_rawDesc = "" +
	"\n" +
	"\x18game/v1/game_types.proto\x12\agame.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\"\xc5\x04\n" +
	"\bGameInfo\x12\x17\n" +
	"\agame_id\x18\x01 \x01(\tR\x06gameId\x12.\n" +
	"\tgame_type\x18\x02 \x01(\x0e2\x11.game.v1.GameTypeR\bgameType\x12+\n" +
	"\x06status\x18\x03 \x01(\x0e2\x13.game.v1.GameStatusR\x06status\x12\x1d\n" +
	"\n" +
	"creator_id\x18\x04 \x01(\x03R\tcreatorId\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"started_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12;\n" +
	"\vfinished_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishedAt\x12+\n" +
	"\x06config\x18\b \x01(\v2\x13.game.v1.GameConfigR\x06config\x12)\n" +
	"\aplayers\x18\t \x03(\v2\x0f.game.v1.PlayerR\aplayers\x12+\n" +
	"\x06result\x18\n" +
	" \x01(\v2\x13.game.v1.GameResultR\x06result\x122\n" +
	"\x05extra\x18\v \x03(\v2\x1c.game.v1.GameInfo.ExtraEntryR\x05extra\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xaf\x02\n" +
	"\n" +
	"GameConfig\x12\x1f\n" +
	"\vmin_players\x18\x01 \x01(\x05R\n" +
	"minPlayers\x12\x1f\n" +
	"\vmax_players\x18\x02 \x01(\x05R\n" +
	"maxPlayers\x12\x17\n" +
	"\amin_bet\x18\x03 \x01(\x03R\x06minBet\x12\x17\n" +
	"\amax_bet\x18\x04 \x01(\x03R\x06maxBet\x12'\n" +
	"\x0ftimeout_seconds\x18\x05 \x01(\x05R\x0etimeoutSeconds\x124\n" +
	"\x05rules\x18\x06 \x03(\v2\x1e.game.v1.GameConfig.RulesEntryR\x05rules\x1aN\n" +
	"\n" +
	"RulesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x05value:\x028\x01\"\x9d\x03\n" +
	"\x06Player\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bnickname\x18\x02 \x01(\tR\bnickname\x12\x16\n" +
	"\x06avatar\x18\x03 \x01(\tR\x06avatar\x12-\n" +
	"\x06status\x18\x04 \x01(\x0e2\x15.game.v1.PlayerStatusR\x06status\x12\x17\n" +
	"\aseat_no\x18\x05 \x01(\x05R\x06seatNo\x12\x18\n" +
	"\abalance\x18\x06 \x01(\x03R\abalance\x127\n" +
	"\tjoined_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\bjoinedAt\x12 \n" +
	"\x04bets\x18\b \x03(\v2\f.game.v1.BetR\x04bets\x12\x1d\n" +
	"\n" +
	"win_amount\x18\t \x01(\x03R\twinAmount\x120\n" +
	"\x05extra\x18\n" +
	" \x03(\v2\x1a.game.v1.Player.ExtraEntryR\x05extra\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd5\x02\n" +
	"\x03Bet\x12\x15\n" +
	"\x06bet_id\x18\x01 \x01(\tR\x05betId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12+\n" +
	"\bbet_type\x18\x03 \x01(\x0e2\x10.game.v1.BetTypeR\abetType\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\x03R\x06amount\x12\x1d\n" +
	"\n" +
	"bet_option\x18\x05 \x01(\tR\tbetOption\x12\x12\n" +
	"\x04odds\x18\x06 \x01(\x02R\x04odds\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x120\n" +
	"\x06detail\x18\b \x03(\v2\x18.game.v1.Bet.DetailEntryR\x06detail\x1a9\n" +
	"\vDetailEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8d\x03\n" +
	"\n" +
	"GameResult\x12\x1b\n" +
	"\tresult_id\x18\x01 \x01(\tR\bresultId\x12\x17\n" +
	"\agame_id\x18\x02 \x01(\tR\x06gameId\x129\n" +
	"\n" +
	"settled_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tsettledAt\x12F\n" +
	"\x11settlement_status\x18\x04 \x01(\x0e2\x19.game.v1.SettlementStatusR\x10settlementStatus\x12<\n" +
	"\x0eplayer_results\x18\x05 \x03(\v2\x15.game.v1.PlayerResultR\rplayerResults\x127\n" +
	"\x06detail\x18\x06 \x03(\v2\x1f.game.v1.GameResult.DetailEntryR\x06detail\x1aO\n" +
	"\vDetailEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12*\n" +
	"\x05value\x18\x02 \x01(\v2\x14.google.protobuf.AnyR\x05value:\x028\x01\"\x90\x02\n" +
	"\fPlayerResult\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12\x1d\n" +
	"\n" +
	"bet_amount\x18\x02 \x01(\x03R\tbetAmount\x12\x1d\n" +
	"\n" +
	"win_amount\x18\x03 \x01(\x03R\twinAmount\x12\x16\n" +
	"\x06profit\x18\x04 \x01(\x03R\x06profit\x12\x1b\n" +
	"\tis_winner\x18\x05 \x01(\bR\bisWinner\x129\n" +
	"\x06detail\x18\x06 \x03(\v2!.game.v1.PlayerResult.DetailEntryR\x06detail\x1a9\n" +
	"\vDetailEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xab\x03\n" +
	"\n" +
	"GameRecord\x12\x1b\n" +
	"\trecord_id\x18\x01 \x01(\tR\brecordId\x12\x17\n" +
	"\agame_id\x18\x02 \x01(\tR\x06gameId\x12.\n" +
	"\tgame_type\x18\x03 \x01(\x0e2\x11.game.v1.GameTypeR\bgameType\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\x03R\x06userId\x12\x1d\n" +
	"\n" +
	"bet_amount\x18\x05 \x01(\x03R\tbetAmount\x12\x1d\n" +
	"\n" +
	"win_amount\x18\x06 \x01(\x03R\twinAmount\x12\x16\n" +
	"\x06profit\x18\a \x01(\x03R\x06profit\x129\n" +
	"\n" +
	"created_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x19\n" +
	"\bround_no\x18\t \x01(\tR\aroundNo\x127\n" +
	"\x06detail\x18\n" +
	" \x03(\v2\x1f.game.v1.GameRecord.DetailEntryR\x06detail\x1a9\n" +
	"\vDetailEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xac\x03\n" +
	"\x0eGameStatistics\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\x12.\n" +
	"\tgame_type\x18\x02 \x01(\x0e2\x11.game.v1.GameTypeR\bgameType\x12\x1f\n" +
	"\vtotal_games\x18\x03 \x01(\x05R\n" +
	"totalGames\x12\x1b\n" +
	"\twin_games\x18\x04 \x01(\x05R\bwinGames\x12\x1d\n" +
	"\n" +
	"lose_games\x18\x05 \x01(\x05R\tloseGames\x12\x1b\n" +
	"\ttotal_bet\x18\x06 \x01(\x03R\btotalBet\x12\x1b\n" +
	"\ttotal_win\x18\a \x01(\x03R\btotalWin\x12!\n" +
	"\ftotal_profit\x18\b \x01(\x03R\vtotalProfit\x12\x19\n" +
	"\bwin_rate\x18\t \x01(\x02R\awinRate\x12>\n" +
	"\rfirst_play_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\vfirstPlayAt\x12<\n" +
	"\flast_play_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastPlayAt\"\xfd\x01\n" +
	"\x0fLeaderboardItem\x12\x12\n" +
	"\x04rank\x18\x01 \x01(\x05R\x04rank\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x1a\n" +
	"\bnickname\x18\x03 \x01(\tR\bnickname\x12\x16\n" +
	"\x06avatar\x18\x04 \x01(\tR\x06avatar\x12\x14\n" +
	"\x05score\x18\x05 \x01(\x03R\x05score\x129\n" +
	"\x05extra\x18\x06 \x03(\v2#.game.v1.LeaderboardItem.ExtraEntryR\x05extra\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x90\x03\n" +
	"\bGameRoom\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1b\n" +
	"\troom_name\x18\x02 \x01(\tR\broomName\x12.\n" +
	"\tgame_type\x18\x03 \x01(\x0e2\x11.game.v1.GameTypeR\bgameType\x12'\n" +
	"\x0fcurrent_players\x18\x04 \x01(\x05R\x0ecurrentPlayers\x12\x1f\n" +
	"\vmax_players\x18\x05 \x01(\x05R\n" +
	"maxPlayers\x12+\n" +
	"\x06config\x18\x06 \x01(\v2\x13.game.v1.GameConfigR\x06config\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x122\n" +
	"\x05extra\x18\b \x03(\v2\x1c.game.v1.GameRoom.ExtraEntryR\x05extra\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\xd8\x01\n" +
	"\bGameType\x12\x19\n" +
	"\x15GAME_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eGAME_TYPE_SLOT\x10\x01\x12\x13\n" +
	"\x0fGAME_TYPE_POKER\x10\x02\x12\x16\n" +
	"\x12GAME_TYPE_ROULETTE\x10\x03\x12\x16\n" +
	"\x12GAME_TYPE_BACCARAT\x10\x04\x12\x17\n" +
	"\x13GAME_TYPE_BLACKJACK\x10\x05\x12\x12\n" +
	"\x0eGAME_TYPE_DICE\x10\x06\x12\x15\n" +
	"\x11GAME_TYPE_LOTTERY\x10\a\x12\x14\n" +
	"\x10GAME_TYPE_SPORTS\x10\b*\xc0\x01\n" +
	"\n" +
	"GameStatus\x12\x1b\n" +
	"\x17GAME_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13GAME_STATUS_CREATED\x10\x01\x12\x17\n" +
	"\x13GAME_STATUS_WAITING\x10\x02\x12\x17\n" +
	"\x13GAME_STATUS_RUNNING\x10\x03\x12\x18\n" +
	"\x14GAME_STATUS_FINISHED\x10\x04\x12\x19\n" +
	"\x15GAME_STATUS_CANCELLED\x10\x05\x12\x15\n" +
	"\x11GAME_STATUS_ERROR\x10\x06*\xb0\x01\n" +
	"\fPlayerStatus\x12\x1d\n" +
	"\x19PLAYER_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15PLAYER_STATUS_WAITING\x10\x01\x12\x17\n" +
	"\x13PLAYER_STATUS_READY\x10\x02\x12\x19\n" +
	"\x15PLAYER_STATUS_PLAYING\x10\x03\x12\x1a\n" +
	"\x16PLAYER_STATUS_FINISHED\x10\x04\x12\x16\n" +
	"\x12PLAYER_STATUS_QUIT\x10\x05*d\n" +
	"\aBetType\x12\x18\n" +
	"\x14BET_TYPE_UNSPECIFIED\x10\x00\x12\x13\n" +
	"\x0fBET_TYPE_SINGLE\x10\x01\x12\x15\n" +
	"\x11BET_TYPE_MULTIPLE\x10\x02\x12\x13\n" +
	"\x0fBET_TYPE_SYSTEM\x10\x03*\xb5\x01\n" +
	"\x10SettlementStatus\x12!\n" +
	"\x1dSETTLEMENT_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19SETTLEMENT_STATUS_PENDING\x10\x01\x12 \n" +
	"\x1cSETTLEMENT_STATUS_PROCESSING\x10\x02\x12\x1f\n" +
	"\x1bSETTLEMENT_STATUS_COMPLETED\x10\x03\x12\x1c\n" +
	"\x18SETTLEMENT_STATUS_FAILED\x10\x04B4Z2github.com/og-game/game-proto/proto-gen-go/game/v1b\x06proto3"

var (
	file_game_v1_game_types_proto_rawDescOnce sync.Once
	file_game_v1_game_types_proto_rawDescData []byte
)

func file_game_v1_game_types_proto_rawDescGZIP() []byte {
	file_game_v1_game_types_proto_rawDescOnce.Do(func() {
		file_game_v1_game_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_game_v1_game_types_proto_rawDesc), len(file_game_v1_game_types_proto_rawDesc)))
	})
	return file_game_v1_game_types_proto_rawDescData
}

var file_game_v1_game_types_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_game_v1_game_types_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_game_v1_game_types_proto_goTypes = []any{
	(GameType)(0),                 // 0: game.v1.GameType
	(GameStatus)(0),               // 1: game.v1.GameStatus
	(PlayerStatus)(0),             // 2: game.v1.PlayerStatus
	(BetType)(0),                  // 3: game.v1.BetType
	(SettlementStatus)(0),         // 4: game.v1.SettlementStatus
	(*GameInfo)(nil),              // 5: game.v1.GameInfo
	(*GameConfig)(nil),            // 6: game.v1.GameConfig
	(*Player)(nil),                // 7: game.v1.Player
	(*Bet)(nil),                   // 8: game.v1.Bet
	(*GameResult)(nil),            // 9: game.v1.GameResult
	(*PlayerResult)(nil),          // 10: game.v1.PlayerResult
	(*GameRecord)(nil),            // 11: game.v1.GameRecord
	(*GameStatistics)(nil),        // 12: game.v1.GameStatistics
	(*LeaderboardItem)(nil),       // 13: game.v1.LeaderboardItem
	(*GameRoom)(nil),              // 14: game.v1.GameRoom
	nil,                           // 15: game.v1.GameInfo.ExtraEntry
	nil,                           // 16: game.v1.GameConfig.RulesEntry
	nil,                           // 17: game.v1.Player.ExtraEntry
	nil,                           // 18: game.v1.Bet.DetailEntry
	nil,                           // 19: game.v1.GameResult.DetailEntry
	nil,                           // 20: game.v1.PlayerResult.DetailEntry
	nil,                           // 21: game.v1.GameRecord.DetailEntry
	nil,                           // 22: game.v1.LeaderboardItem.ExtraEntry
	nil,                           // 23: game.v1.GameRoom.ExtraEntry
	(*timestamppb.Timestamp)(nil), // 24: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 25: google.protobuf.Any
}
var file_game_v1_game_types_proto_depIdxs = []int32{
	0,  // 0: game.v1.GameInfo.game_type:type_name -> game.v1.GameType
	1,  // 1: game.v1.GameInfo.status:type_name -> game.v1.GameStatus
	24, // 2: game.v1.GameInfo.created_at:type_name -> google.protobuf.Timestamp
	24, // 3: game.v1.GameInfo.started_at:type_name -> google.protobuf.Timestamp
	24, // 4: game.v1.GameInfo.finished_at:type_name -> google.protobuf.Timestamp
	6,  // 5: game.v1.GameInfo.config:type_name -> game.v1.GameConfig
	7,  // 6: game.v1.GameInfo.players:type_name -> game.v1.Player
	9,  // 7: game.v1.GameInfo.result:type_name -> game.v1.GameResult
	15, // 8: game.v1.GameInfo.extra:type_name -> game.v1.GameInfo.ExtraEntry
	16, // 9: game.v1.GameConfig.rules:type_name -> game.v1.GameConfig.RulesEntry
	2,  // 10: game.v1.Player.status:type_name -> game.v1.PlayerStatus
	24, // 11: game.v1.Player.joined_at:type_name -> google.protobuf.Timestamp
	8,  // 12: game.v1.Player.bets:type_name -> game.v1.Bet
	17, // 13: game.v1.Player.extra:type_name -> game.v1.Player.ExtraEntry
	3,  // 14: game.v1.Bet.bet_type:type_name -> game.v1.BetType
	24, // 15: game.v1.Bet.created_at:type_name -> google.protobuf.Timestamp
	18, // 16: game.v1.Bet.detail:type_name -> game.v1.Bet.DetailEntry
	24, // 17: game.v1.GameResult.settled_at:type_name -> google.protobuf.Timestamp
	4,  // 18: game.v1.GameResult.settlement_status:type_name -> game.v1.SettlementStatus
	10, // 19: game.v1.GameResult.player_results:type_name -> game.v1.PlayerResult
	19, // 20: game.v1.GameResult.detail:type_name -> game.v1.GameResult.DetailEntry
	20, // 21: game.v1.PlayerResult.detail:type_name -> game.v1.PlayerResult.DetailEntry
	0,  // 22: game.v1.GameRecord.game_type:type_name -> game.v1.GameType
	24, // 23: game.v1.GameRecord.created_at:type_name -> google.protobuf.Timestamp
	21, // 24: game.v1.GameRecord.detail:type_name -> game.v1.GameRecord.DetailEntry
	0,  // 25: game.v1.GameStatistics.game_type:type_name -> game.v1.GameType
	24, // 26: game.v1.GameStatistics.first_play_at:type_name -> google.protobuf.Timestamp
	24, // 27: game.v1.GameStatistics.last_play_at:type_name -> google.protobuf.Timestamp
	22, // 28: game.v1.LeaderboardItem.extra:type_name -> game.v1.LeaderboardItem.ExtraEntry
	0,  // 29: game.v1.GameRoom.game_type:type_name -> game.v1.GameType
	6,  // 30: game.v1.GameRoom.config:type_name -> game.v1.GameConfig
	24, // 31: game.v1.GameRoom.created_at:type_name -> google.protobuf.Timestamp
	23, // 32: game.v1.GameRoom.extra:type_name -> game.v1.GameRoom.ExtraEntry
	25, // 33: game.v1.GameConfig.RulesEntry.value:type_name -> google.protobuf.Any
	25, // 34: game.v1.GameResult.DetailEntry.value:type_name -> google.protobuf.Any
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_game_v1_game_types_proto_init() }
func file_game_v1_game_types_proto_init() {
	if File_game_v1_game_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_game_v1_game_types_proto_rawDesc), len(file_game_v1_game_types_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_game_v1_game_types_proto_goTypes,
		DependencyIndexes: file_game_v1_game_types_proto_depIdxs,
		EnumInfos:         file_game_v1_game_types_proto_enumTypes,
		MessageInfos:      file_game_v1_game_types_proto_msgTypes,
	}.Build()
	File_game_v1_game_types_proto = out.File
	file_game_v1_game_types_proto_goTypes = nil
	file_game_v1_game_types_proto_depIdxs = nil
}
