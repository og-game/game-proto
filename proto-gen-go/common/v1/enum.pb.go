// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: common/v1/enum.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 账变交易类型枚举
type AccountChangeType int32

const (
	AccountChangeType_ACCOUNT_CHANGE_TYPE_UNSPECIFIED       AccountChangeType = 0  // 未指定
	AccountChangeType_ACCOUNT_CHANGE_TYPE_BET               AccountChangeType = 1  // 投注       - 玩家扣款
	AccountChangeType_ACCOUNT_CHANGE_TYPE_SETTLEMENT        AccountChangeType = 2  // 结算派奖   - 玩家入款
	AccountChangeType_ACCOUNT_CHANGE_TYPE_DEPOSIT           AccountChangeType = 3  // 押金       - 玩家扣款
	AccountChangeType_ACCOUNT_CHANGE_TYPE_DEPOSIT_REFUND    AccountChangeType = 4  // 返还押金   - 玩家入款
	AccountChangeType_ACCOUNT_CHANGE_TYPE_BET_CANCEL        AccountChangeType = 5  // 取消投注   - 玩家入款
	AccountChangeType_ACCOUNT_CHANGE_TYPE_SETTLEMENT_CANCEL AccountChangeType = 6  // 结算撤单   - 玩家扣款
	AccountChangeType_ACCOUNT_CHANGE_TYPE_RE_SETTLEMENT     AccountChangeType = 7  // 重新派奖   - 玩家入款-扣款[之前派奖的钱扣除，加新派奖的钱]
	AccountChangeType_ACCOUNT_CHANGE_TYPE_ADJUSTMENT        AccountChangeType = 8  // 调整金额   - 玩家[入款]-[扣款]
	AccountChangeType_ACCOUNT_CHANGE_TYPE_TRANSFER_IN       AccountChangeType = 9  // 资金转入中台 - 玩家入款[单一钱包：直接保存在中台钱包；转账钱包(中台不存资金)：资金同步转到三方游戏平台]
	AccountChangeType_ACCOUNT_CHANGE_TYPE_TRANSFER_OUT      AccountChangeType = 10 // 资金转出中台 - 玩家扣款[单一钱包：直接扣除中台钱包；转账钱包(中台不存资金)：同步转出三方游戏平台的资金给下游用户]
)

// Enum value maps for AccountChangeType.
var (
	AccountChangeType_name = map[int32]string{
		0:  "ACCOUNT_CHANGE_TYPE_UNSPECIFIED",
		1:  "ACCOUNT_CHANGE_TYPE_BET",
		2:  "ACCOUNT_CHANGE_TYPE_SETTLEMENT",
		3:  "ACCOUNT_CHANGE_TYPE_DEPOSIT",
		4:  "ACCOUNT_CHANGE_TYPE_DEPOSIT_REFUND",
		5:  "ACCOUNT_CHANGE_TYPE_BET_CANCEL",
		6:  "ACCOUNT_CHANGE_TYPE_SETTLEMENT_CANCEL",
		7:  "ACCOUNT_CHANGE_TYPE_RE_SETTLEMENT",
		8:  "ACCOUNT_CHANGE_TYPE_ADJUSTMENT",
		9:  "ACCOUNT_CHANGE_TYPE_TRANSFER_IN",
		10: "ACCOUNT_CHANGE_TYPE_TRANSFER_OUT",
	}
	AccountChangeType_value = map[string]int32{
		"ACCOUNT_CHANGE_TYPE_UNSPECIFIED":       0,
		"ACCOUNT_CHANGE_TYPE_BET":               1,
		"ACCOUNT_CHANGE_TYPE_SETTLEMENT":        2,
		"ACCOUNT_CHANGE_TYPE_DEPOSIT":           3,
		"ACCOUNT_CHANGE_TYPE_DEPOSIT_REFUND":    4,
		"ACCOUNT_CHANGE_TYPE_BET_CANCEL":        5,
		"ACCOUNT_CHANGE_TYPE_SETTLEMENT_CANCEL": 6,
		"ACCOUNT_CHANGE_TYPE_RE_SETTLEMENT":     7,
		"ACCOUNT_CHANGE_TYPE_ADJUSTMENT":        8,
		"ACCOUNT_CHANGE_TYPE_TRANSFER_IN":       9,
		"ACCOUNT_CHANGE_TYPE_TRANSFER_OUT":      10,
	}
)

func (x AccountChangeType) Enum() *AccountChangeType {
	p := new(AccountChangeType)
	*p = x
	return p
}

func (x AccountChangeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccountChangeType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_proto_enumTypes[0].Descriptor()
}

func (AccountChangeType) Type() protoreflect.EnumType {
	return &file_common_v1_enum_proto_enumTypes[0]
}

func (x AccountChangeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccountChangeType.Descriptor instead.
func (AccountChangeType) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_proto_rawDescGZIP(), []int{0}
}

// 资金流向枚举（可选，用于明确标识）
type MoneyFlow int32

const (
	MoneyFlow_MONEY_FLOW_UNSPECIFIED MoneyFlow = 0
	MoneyFlow_MONEY_FLOW_DEBIT       MoneyFlow = 1 // 玩家扣款
	MoneyFlow_MONEY_FLOW_CREDIT      MoneyFlow = 2 // 玩家入款
	MoneyFlow_MONEY_FLOW_BOTH        MoneyFlow = 3 // 双向（如重新派奖）
)

// Enum value maps for MoneyFlow.
var (
	MoneyFlow_name = map[int32]string{
		0: "MONEY_FLOW_UNSPECIFIED",
		1: "MONEY_FLOW_DEBIT",
		2: "MONEY_FLOW_CREDIT",
		3: "MONEY_FLOW_BOTH",
	}
	MoneyFlow_value = map[string]int32{
		"MONEY_FLOW_UNSPECIFIED": 0,
		"MONEY_FLOW_DEBIT":       1,
		"MONEY_FLOW_CREDIT":      2,
		"MONEY_FLOW_BOTH":        3,
	}
)

func (x MoneyFlow) Enum() *MoneyFlow {
	p := new(MoneyFlow)
	*p = x
	return p
}

func (x MoneyFlow) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MoneyFlow) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_proto_enumTypes[1].Descriptor()
}

func (MoneyFlow) Type() protoreflect.EnumType {
	return &file_common_v1_enum_proto_enumTypes[1]
}

func (x MoneyFlow) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MoneyFlow.Descriptor instead.
func (MoneyFlow) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_proto_rawDescGZIP(), []int{1}
}

// 转账状态枚举
type TransferStatus int32

const (
	TransferStatus_TRANSFER_STATUS_UNSPECIFIED TransferStatus = 0 // 未指定状态
	TransferStatus_TRANSFER_STATUS_PENDING     TransferStatus = 1 // 待处理
	TransferStatus_TRANSFER_STATUS_PROCESSING  TransferStatus = 2 // 处理中
	TransferStatus_TRANSFER_STATUS_COMPLETED   TransferStatus = 3 // 已完成
	TransferStatus_TRANSFER_STATUS_FAILED      TransferStatus = 4 // 失败
)

// Enum value maps for TransferStatus.
var (
	TransferStatus_name = map[int32]string{
		0: "TRANSFER_STATUS_UNSPECIFIED",
		1: "TRANSFER_STATUS_PENDING",
		2: "TRANSFER_STATUS_PROCESSING",
		3: "TRANSFER_STATUS_COMPLETED",
		4: "TRANSFER_STATUS_FAILED",
	}
	TransferStatus_value = map[string]int32{
		"TRANSFER_STATUS_UNSPECIFIED": 0,
		"TRANSFER_STATUS_PENDING":     1,
		"TRANSFER_STATUS_PROCESSING":  2,
		"TRANSFER_STATUS_COMPLETED":   3,
		"TRANSFER_STATUS_FAILED":      4,
	}
)

func (x TransferStatus) Enum() *TransferStatus {
	p := new(TransferStatus)
	*p = x
	return p
}

func (x TransferStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_proto_enumTypes[2].Descriptor()
}

func (TransferStatus) Type() protoreflect.EnumType {
	return &file_common_v1_enum_proto_enumTypes[2]
}

func (x TransferStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferStatus.Descriptor instead.
func (TransferStatus) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_proto_rawDescGZIP(), []int{2}
}

// TransactionDirection 表示交易的方向（例如：转入或转出）。
type TransactionDirection int32

const (
	// 未指定或未知方向。在 Protobuf 中，枚举的第一个字段必须是 0，
	// 通常用于表示默认或未初始化的值。
	TransactionDirection_TRANSACTION_DIRECTION_UNSPECIFIED TransactionDirection = 0
	// TRANSACTION_DIRECTION_IN 表示“转入”或“存款”交易。
	TransactionDirection_TRANSACTION_DIRECTION_IN TransactionDirection = 1
	// TRANSACTION_DIRECTION_OUT 表示“转出”或“取款”交易。
	TransactionDirection_TRANSACTION_DIRECTION_OUT TransactionDirection = 2
)

// Enum value maps for TransactionDirection.
var (
	TransactionDirection_name = map[int32]string{
		0: "TRANSACTION_DIRECTION_UNSPECIFIED",
		1: "TRANSACTION_DIRECTION_IN",
		2: "TRANSACTION_DIRECTION_OUT",
	}
	TransactionDirection_value = map[string]int32{
		"TRANSACTION_DIRECTION_UNSPECIFIED": 0,
		"TRANSACTION_DIRECTION_IN":          1,
		"TRANSACTION_DIRECTION_OUT":         2,
	}
)

func (x TransactionDirection) Enum() *TransactionDirection {
	p := new(TransactionDirection)
	*p = x
	return p
}

func (x TransactionDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_proto_enumTypes[3].Descriptor()
}

func (TransactionDirection) Type() protoreflect.EnumType {
	return &file_common_v1_enum_proto_enumTypes[3]
}

func (x TransactionDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionDirection.Descriptor instead.
func (TransactionDirection) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_proto_rawDescGZIP(), []int{3}
}

// 游戏交易类型枚举
type GameTransactionType int32

const (
	GameTransactionType_GAME_TRANSACTION_TYPE_UNSPECIFIED       GameTransactionType = 0 // 未指定
	GameTransactionType_GAME_TRANSACTION_TYPE_BET               GameTransactionType = 1 // 投注       - 玩家扣款
	GameTransactionType_GAME_TRANSACTION_TYPE_SETTLEMENT        GameTransactionType = 2 // 结算派奖   - 玩家入款
	GameTransactionType_GAME_TRANSACTION_TYPE_DEPOSIT           GameTransactionType = 3 // 押金       - 玩家扣款
	GameTransactionType_GAME_TRANSACTION_TYPE_DEPOSIT_REFUND    GameTransactionType = 4 // 返还押金   - 玩家入款
	GameTransactionType_GAME_TRANSACTION_TYPE_BET_CANCEL        GameTransactionType = 5 // 取消投注   - 玩家入款
	GameTransactionType_GAME_TRANSACTION_TYPE_SETTLEMENT_CANCEL GameTransactionType = 6 // 结算撤单/废弃   - 玩家扣款
	GameTransactionType_GAME_TRANSACTION_TYPE_RE_SETTLEMENT     GameTransactionType = 7 // 重新派奖   - 玩家入款-扣款[之前派奖的钱扣除，加新派奖的钱]
	GameTransactionType_GAME_TRANSACTION_TYPE_ADJUSTMENT        GameTransactionType = 8 // 调整金额   - 玩家[入款]-[扣款]
)

// Enum value maps for GameTransactionType.
var (
	GameTransactionType_name = map[int32]string{
		0: "GAME_TRANSACTION_TYPE_UNSPECIFIED",
		1: "GAME_TRANSACTION_TYPE_BET",
		2: "GAME_TRANSACTION_TYPE_SETTLEMENT",
		3: "GAME_TRANSACTION_TYPE_DEPOSIT",
		4: "GAME_TRANSACTION_TYPE_DEPOSIT_REFUND",
		5: "GAME_TRANSACTION_TYPE_BET_CANCEL",
		6: "GAME_TRANSACTION_TYPE_SETTLEMENT_CANCEL",
		7: "GAME_TRANSACTION_TYPE_RE_SETTLEMENT",
		8: "GAME_TRANSACTION_TYPE_ADJUSTMENT",
	}
	GameTransactionType_value = map[string]int32{
		"GAME_TRANSACTION_TYPE_UNSPECIFIED":       0,
		"GAME_TRANSACTION_TYPE_BET":               1,
		"GAME_TRANSACTION_TYPE_SETTLEMENT":        2,
		"GAME_TRANSACTION_TYPE_DEPOSIT":           3,
		"GAME_TRANSACTION_TYPE_DEPOSIT_REFUND":    4,
		"GAME_TRANSACTION_TYPE_BET_CANCEL":        5,
		"GAME_TRANSACTION_TYPE_SETTLEMENT_CANCEL": 6,
		"GAME_TRANSACTION_TYPE_RE_SETTLEMENT":     7,
		"GAME_TRANSACTION_TYPE_ADJUSTMENT":        8,
	}
)

func (x GameTransactionType) Enum() *GameTransactionType {
	p := new(GameTransactionType)
	*p = x
	return p
}

func (x GameTransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameTransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_proto_enumTypes[4].Descriptor()
}

func (GameTransactionType) Type() protoreflect.EnumType {
	return &file_common_v1_enum_proto_enumTypes[4]
}

func (x GameTransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameTransactionType.Descriptor instead.
func (GameTransactionType) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_proto_rawDescGZIP(), []int{4}
}

// 游戏状态
type GameState int32

const (
	GameState_GAME_STATE_UNKNOWN   GameState = 0 //  未知
	GameState_GAME_STATE_OPEN      GameState = 1 // 开启
	GameState_GAME_STATE_CLOSE     GameState = 2 // 关闭
	GameState_GAME_STATE_MAINTAIN  GameState = 3 // 维护
	GameState_GAME_STATE_IDLE      GameState = 4 // 闲置
	GameState_GAME_STATE_CLOSE_DUE GameState = 5 // 封盘
)

// Enum value maps for GameState.
var (
	GameState_name = map[int32]string{
		0: "GAME_STATE_UNKNOWN",
		1: "GAME_STATE_OPEN",
		2: "GAME_STATE_CLOSE",
		3: "GAME_STATE_MAINTAIN",
		4: "GAME_STATE_IDLE",
		5: "GAME_STATE_CLOSE_DUE",
	}
	GameState_value = map[string]int32{
		"GAME_STATE_UNKNOWN":   0,
		"GAME_STATE_OPEN":      1,
		"GAME_STATE_CLOSE":     2,
		"GAME_STATE_MAINTAIN":  3,
		"GAME_STATE_IDLE":      4,
		"GAME_STATE_CLOSE_DUE": 5,
	}
)

func (x GameState) Enum() *GameState {
	p := new(GameState)
	*p = x
	return p
}

func (x GameState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_proto_enumTypes[5].Descriptor()
}

func (GameState) Type() protoreflect.EnumType {
	return &file_common_v1_enum_proto_enumTypes[5]
}

func (x GameState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameState.Descriptor instead.
func (GameState) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_proto_rawDescGZIP(), []int{5}
}

// 游戏可投注状态
type GameBetState int32

const (
	GameBetState_GAME_BET_STATE_UNKNOWN GameBetState = 0 //  未知
	GameBetState_GAME_BET_STATE_OPEN    GameBetState = 1 // 开启
	GameBetState_GAME_BET_STATE_CLOSE   GameBetState = 2 // 关闭
)

// Enum value maps for GameBetState.
var (
	GameBetState_name = map[int32]string{
		0: "GAME_BET_STATE_UNKNOWN",
		1: "GAME_BET_STATE_OPEN",
		2: "GAME_BET_STATE_CLOSE",
	}
	GameBetState_value = map[string]int32{
		"GAME_BET_STATE_UNKNOWN": 0,
		"GAME_BET_STATE_OPEN":    1,
		"GAME_BET_STATE_CLOSE":   2,
	}
)

func (x GameBetState) Enum() *GameBetState {
	p := new(GameBetState)
	*p = x
	return p
}

func (x GameBetState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameBetState) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_proto_enumTypes[6].Descriptor()
}

func (GameBetState) Type() protoreflect.EnumType {
	return &file_common_v1_enum_proto_enumTypes[6]
}

func (x GameBetState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameBetState.Descriptor instead.
func (GameBetState) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_proto_rawDescGZIP(), []int{6}
}

// ErrorCode 通用错误码
type ErrorCode int32

const (
	ErrorCode_ERROR_CODE_UNSPECIFIED ErrorCode = 0 // 未知状态
	// 成功状态码
	ErrorCode_ERROR_CODE_SUCCESS ErrorCode = 200 // 操作成功
	// 客户端错误 4xx
	ErrorCode_ERROR_CODE_BAD_REQUEST          ErrorCode = 400 // 请求参数错误
	ErrorCode_ERROR_CODE_UNAUTHORIZED         ErrorCode = 401 // 未授权
	ErrorCode_ERROR_CODE_FORBIDDEN            ErrorCode = 403 // 禁止访问
	ErrorCode_ERROR_CODE_NOT_FOUND            ErrorCode = 404 // 资源未找到
	ErrorCode_ERROR_CODE_METHOD_NOT_ALLOWED   ErrorCode = 405 // 方法不允许
	ErrorCode_ERROR_CODE_CONFLICT             ErrorCode = 409 // 资源冲突
	ErrorCode_ERROR_CODE_UNPROCESSABLE_ENTITY ErrorCode = 422 // 请求格式正确但语义错误
	ErrorCode_ERROR_CODE_TOO_MANY_REQUESTS    ErrorCode = 429 // 请求过于频繁
	// 服务端错误 5xx
	ErrorCode_ERROR_CODE_INTERNAL_SERVER_ERROR ErrorCode = 500 // 服务器内部错误
	ErrorCode_ERROR_CODE_NOT_IMPLEMENTED       ErrorCode = 501 // 功能未实现
	ErrorCode_ERROR_CODE_BAD_GATEWAY           ErrorCode = 502 // 网关错误或第三方服务异常
	ErrorCode_ERROR_CODE_SERVICE_UNAVAILABLE   ErrorCode = 503 // 服务不可用
	ErrorCode_ERROR_CODE_GATEWAY_TIMEOUT       ErrorCode = 504 // 网关超时
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:   "ERROR_CODE_UNSPECIFIED",
		200: "ERROR_CODE_SUCCESS",
		400: "ERROR_CODE_BAD_REQUEST",
		401: "ERROR_CODE_UNAUTHORIZED",
		403: "ERROR_CODE_FORBIDDEN",
		404: "ERROR_CODE_NOT_FOUND",
		405: "ERROR_CODE_METHOD_NOT_ALLOWED",
		409: "ERROR_CODE_CONFLICT",
		422: "ERROR_CODE_UNPROCESSABLE_ENTITY",
		429: "ERROR_CODE_TOO_MANY_REQUESTS",
		500: "ERROR_CODE_INTERNAL_SERVER_ERROR",
		501: "ERROR_CODE_NOT_IMPLEMENTED",
		502: "ERROR_CODE_BAD_GATEWAY",
		503: "ERROR_CODE_SERVICE_UNAVAILABLE",
		504: "ERROR_CODE_GATEWAY_TIMEOUT",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_CODE_UNSPECIFIED":           0,
		"ERROR_CODE_SUCCESS":               200,
		"ERROR_CODE_BAD_REQUEST":           400,
		"ERROR_CODE_UNAUTHORIZED":          401,
		"ERROR_CODE_FORBIDDEN":             403,
		"ERROR_CODE_NOT_FOUND":             404,
		"ERROR_CODE_METHOD_NOT_ALLOWED":    405,
		"ERROR_CODE_CONFLICT":              409,
		"ERROR_CODE_UNPROCESSABLE_ENTITY":  422,
		"ERROR_CODE_TOO_MANY_REQUESTS":     429,
		"ERROR_CODE_INTERNAL_SERVER_ERROR": 500,
		"ERROR_CODE_NOT_IMPLEMENTED":       501,
		"ERROR_CODE_BAD_GATEWAY":           502,
		"ERROR_CODE_SERVICE_UNAVAILABLE":   503,
		"ERROR_CODE_GATEWAY_TIMEOUT":       504,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_enum_proto_enumTypes[7].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_common_v1_enum_proto_enumTypes[7]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_enum_proto_rawDescGZIP(), []int{7}
}

var File_common_v1_enum_proto protoreflect.FileDescriptor

const file_common_v1_enum_proto_rawDesc = "" +
	"\n" +
	"\x14common/v1/enum.proto\x12\tcommon.v1*\xa7\x03\n" +
	"\x11AccountChangeType\x12#\n" +
	"\x1fACCOUNT_CHANGE_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17ACCOUNT_CHANGE_TYPE_BET\x10\x01\x12\"\n" +
	"\x1eACCOUNT_CHANGE_TYPE_SETTLEMENT\x10\x02\x12\x1f\n" +
	"\x1bACCOUNT_CHANGE_TYPE_DEPOSIT\x10\x03\x12&\n" +
	"\"ACCOUNT_CHANGE_TYPE_DEPOSIT_REFUND\x10\x04\x12\"\n" +
	"\x1eACCOUNT_CHANGE_TYPE_BET_CANCEL\x10\x05\x12)\n" +
	"%ACCOUNT_CHANGE_TYPE_SETTLEMENT_CANCEL\x10\x06\x12%\n" +
	"!ACCOUNT_CHANGE_TYPE_RE_SETTLEMENT\x10\a\x12\"\n" +
	"\x1eACCOUNT_CHANGE_TYPE_ADJUSTMENT\x10\b\x12#\n" +
	"\x1fACCOUNT_CHANGE_TYPE_TRANSFER_IN\x10\t\x12$\n" +
	" ACCOUNT_CHANGE_TYPE_TRANSFER_OUT\x10\n" +
	"*i\n" +
	"\tMoneyFlow\x12\x1a\n" +
	"\x16MONEY_FLOW_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10MONEY_FLOW_DEBIT\x10\x01\x12\x15\n" +
	"\x11MONEY_FLOW_CREDIT\x10\x02\x12\x13\n" +
	"\x0fMONEY_FLOW_BOTH\x10\x03*\xa9\x01\n" +
	"\x0eTransferStatus\x12\x1f\n" +
	"\x1bTRANSFER_STATUS_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17TRANSFER_STATUS_PENDING\x10\x01\x12\x1e\n" +
	"\x1aTRANSFER_STATUS_PROCESSING\x10\x02\x12\x1d\n" +
	"\x19TRANSFER_STATUS_COMPLETED\x10\x03\x12\x1a\n" +
	"\x16TRANSFER_STATUS_FAILED\x10\x04*z\n" +
	"\x14TransactionDirection\x12%\n" +
	"!TRANSACTION_DIRECTION_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18TRANSACTION_DIRECTION_IN\x10\x01\x12\x1d\n" +
	"\x19TRANSACTION_DIRECTION_OUT\x10\x02*\xf0\x02\n" +
	"\x13GameTransactionType\x12%\n" +
	"!GAME_TRANSACTION_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19GAME_TRANSACTION_TYPE_BET\x10\x01\x12$\n" +
	" GAME_TRANSACTION_TYPE_SETTLEMENT\x10\x02\x12!\n" +
	"\x1dGAME_TRANSACTION_TYPE_DEPOSIT\x10\x03\x12(\n" +
	"$GAME_TRANSACTION_TYPE_DEPOSIT_REFUND\x10\x04\x12$\n" +
	" GAME_TRANSACTION_TYPE_BET_CANCEL\x10\x05\x12+\n" +
	"'GAME_TRANSACTION_TYPE_SETTLEMENT_CANCEL\x10\x06\x12'\n" +
	"#GAME_TRANSACTION_TYPE_RE_SETTLEMENT\x10\a\x12$\n" +
	" GAME_TRANSACTION_TYPE_ADJUSTMENT\x10\b*\x96\x01\n" +
	"\tGameState\x12\x16\n" +
	"\x12GAME_STATE_UNKNOWN\x10\x00\x12\x13\n" +
	"\x0fGAME_STATE_OPEN\x10\x01\x12\x14\n" +
	"\x10GAME_STATE_CLOSE\x10\x02\x12\x17\n" +
	"\x13GAME_STATE_MAINTAIN\x10\x03\x12\x13\n" +
	"\x0fGAME_STATE_IDLE\x10\x04\x12\x18\n" +
	"\x14GAME_STATE_CLOSE_DUE\x10\x05*]\n" +
	"\fGameBetState\x12\x1a\n" +
	"\x16GAME_BET_STATE_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13GAME_BET_STATE_OPEN\x10\x01\x12\x18\n" +
	"\x14GAME_BET_STATE_CLOSE\x10\x02*\xe3\x03\n" +
	"\tErrorCode\x12\x1a\n" +
	"\x16ERROR_CODE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x12ERROR_CODE_SUCCESS\x10\xc8\x01\x12\x1b\n" +
	"\x16ERROR_CODE_BAD_REQUEST\x10\x90\x03\x12\x1c\n" +
	"\x17ERROR_CODE_UNAUTHORIZED\x10\x91\x03\x12\x19\n" +
	"\x14ERROR_CODE_FORBIDDEN\x10\x93\x03\x12\x19\n" +
	"\x14ERROR_CODE_NOT_FOUND\x10\x94\x03\x12\"\n" +
	"\x1dERROR_CODE_METHOD_NOT_ALLOWED\x10\x95\x03\x12\x18\n" +
	"\x13ERROR_CODE_CONFLICT\x10\x99\x03\x12$\n" +
	"\x1fERROR_CODE_UNPROCESSABLE_ENTITY\x10\xa6\x03\x12!\n" +
	"\x1cERROR_CODE_TOO_MANY_REQUESTS\x10\xad\x03\x12%\n" +
	" ERROR_CODE_INTERNAL_SERVER_ERROR\x10\xf4\x03\x12\x1f\n" +
	"\x1aERROR_CODE_NOT_IMPLEMENTED\x10\xf5\x03\x12\x1b\n" +
	"\x16ERROR_CODE_BAD_GATEWAY\x10\xf6\x03\x12#\n" +
	"\x1eERROR_CODE_SERVICE_UNAVAILABLE\x10\xf7\x03\x12\x1f\n" +
	"\x1aERROR_CODE_GATEWAY_TIMEOUT\x10\xf8\x03B6Z4github.com/og-game/game-proto/proto-gen-go/common/v1b\x06proto3"

var (
	file_common_v1_enum_proto_rawDescOnce sync.Once
	file_common_v1_enum_proto_rawDescData []byte
)

func file_common_v1_enum_proto_rawDescGZIP() []byte {
	file_common_v1_enum_proto_rawDescOnce.Do(func() {
		file_common_v1_enum_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_common_v1_enum_proto_rawDesc), len(file_common_v1_enum_proto_rawDesc)))
	})
	return file_common_v1_enum_proto_rawDescData
}

var file_common_v1_enum_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_common_v1_enum_proto_goTypes = []any{
	(AccountChangeType)(0),    // 0: common.v1.AccountChangeType
	(MoneyFlow)(0),            // 1: common.v1.MoneyFlow
	(TransferStatus)(0),       // 2: common.v1.TransferStatus
	(TransactionDirection)(0), // 3: common.v1.TransactionDirection
	(GameTransactionType)(0),  // 4: common.v1.GameTransactionType
	(GameState)(0),            // 5: common.v1.GameState
	(GameBetState)(0),         // 6: common.v1.GameBetState
	(ErrorCode)(0),            // 7: common.v1.ErrorCode
}
var file_common_v1_enum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_v1_enum_proto_init() }
func file_common_v1_enum_proto_init() {
	if File_common_v1_enum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_common_v1_enum_proto_rawDesc), len(file_common_v1_enum_proto_rawDesc)),
			NumEnums:      8,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_enum_proto_goTypes,
		DependencyIndexes: file_common_v1_enum_proto_depIdxs,
		EnumInfos:         file_common_v1_enum_proto_enumTypes,
	}.Build()
	File_common_v1_enum_proto = out.File
	file_common_v1_enum_proto_goTypes = nil
	file_common_v1_enum_proto_depIdxs = nil
}
