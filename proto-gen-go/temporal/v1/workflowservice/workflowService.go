// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: temporal.proto

package workflowservice

import (
	"context"

	"github.com/og-game/game-proto/proto-gen-go/temporal/v1"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BatchConfig                       = v1.BatchConfig
	BatchControlResult                = v1.BatchControlResult
	BatchResult                       = v1.BatchResult
	BatchTarget                       = v1.BatchTarget
	ControlOperationInfo              = v1.ControlOperationInfo
	ControlOptions                    = v1.ControlOptions
	ControlWorkflowData               = v1.ControlWorkflowData
	ControlWorkflowRequest            = v1.ControlWorkflowRequest
	ControlWorkflowResponse           = v1.ControlWorkflowResponse
	DelayOptions                      = v1.DelayOptions
	ExecutionConfig                   = v1.ExecutionConfig
	ExecutionInfo                     = v1.ExecutionInfo
	ListOptions                       = v1.ListOptions
	ListScheduleOptions               = v1.ListScheduleOptions
	ListSchedulesData                 = v1.ListSchedulesData
	ListSchedulesRequest              = v1.ListSchedulesRequest
	ListSchedulesResponse             = v1.ListSchedulesResponse
	ListSearchAttributesData          = v1.ListSearchAttributesData
	ListSearchAttributesRequest       = v1.ListSearchAttributesRequest
	ListSearchAttributesResponse      = v1.ListSearchAttributesResponse
	ListWorkflowsData                 = v1.ListWorkflowsData
	ListWorkflowsRequest              = v1.ListWorkflowsRequest
	ListWorkflowsResponse             = v1.ListWorkflowsResponse
	ManageScheduleData                = v1.ManageScheduleData
	ManageScheduleRequest             = v1.ManageScheduleRequest
	ManageScheduleResponse            = v1.ManageScheduleResponse
	QueryControlOperationData         = v1.QueryControlOperationData
	QueryControlOperationRequest      = v1.QueryControlOperationRequest
	QueryControlOperationResponse     = v1.QueryControlOperationResponse
	QueryOptions                      = v1.QueryOptions
	QueryScheduleRequest              = v1.QueryScheduleRequest
	QueryScheduleResponse             = v1.QueryScheduleResponse
	QuerySearchAttributeUsageData     = v1.QuerySearchAttributeUsageData
	QuerySearchAttributeUsageRequest  = v1.QuerySearchAttributeUsageRequest
	QuerySearchAttributeUsageResponse = v1.QuerySearchAttributeUsageResponse
	QueryWorkflowData                 = v1.QueryWorkflowData
	QueryWorkflowRequest              = v1.QueryWorkflowRequest
	QueryWorkflowResponse             = v1.QueryWorkflowResponse
	QueryWorkflowStateData            = v1.QueryWorkflowStateData
	QueryWorkflowStateRequest         = v1.QueryWorkflowStateRequest
	QueryWorkflowStateResponse        = v1.QueryWorkflowStateResponse
	RegisterSearchAttributesData      = v1.RegisterSearchAttributesData
	RegisterSearchAttributesRequest   = v1.RegisterSearchAttributesRequest
	RegisterSearchAttributesResponse  = v1.RegisterSearchAttributesResponse
	RemoveSearchAttributesData        = v1.RemoveSearchAttributesData
	RemoveSearchAttributesRequest     = v1.RemoveSearchAttributesRequest
	RemoveSearchAttributesResponse    = v1.RemoveSearchAttributesResponse
	ReplaceWorkflowData               = v1.ReplaceWorkflowData
	ReplaceWorkflowRequest            = v1.ReplaceWorkflowRequest
	ReplaceWorkflowResponse           = v1.ReplaceWorkflowResponse
	ScheduleInfo                      = v1.ScheduleInfo
	SchedulePolicy                    = v1.SchedulePolicy
	ScheduleResult                    = v1.ScheduleResult
	ScheduleSpec                      = v1.ScheduleSpec
	SearchAttributeFilter             = v1.SearchAttributeFilter
	SearchAttributeInfo               = v1.SearchAttributeInfo
	SearchAttributeRegistrationResult = v1.SearchAttributeRegistrationResult
	SearchAttributeRemovalResult      = v1.SearchAttributeRemovalResult
	SearchAttributeStats              = v1.SearchAttributeStats
	SearchAttributeUsage              = v1.SearchAttributeUsage
	SearchAttributeValidation         = v1.SearchAttributeValidation
	SignalWithStartData               = v1.SignalWithStartData
	SignalWithStartRequest            = v1.SignalWithStartRequest
	SignalWithStartResponse           = v1.SignalWithStartResponse
	SignalWorkflowData                = v1.SignalWorkflowData
	SignalWorkflowRequest             = v1.SignalWorkflowRequest
	SignalWorkflowResponse            = v1.SignalWorkflowResponse
	SingleResult                      = v1.SingleResult
	StackFrame                        = v1.StackFrame
	StartWorkflowData                 = v1.StartWorkflowData
	StartWorkflowRequest              = v1.StartWorkflowRequest
	StartWorkflowResponse             = v1.StartWorkflowResponse
	StringList                        = v1.StringList
	UsageQueryOptions                 = v1.UsageQueryOptions
	UsageStats                        = v1.UsageStats
	ValidateSearchAttributesData      = v1.ValidateSearchAttributesData
	ValidateSearchAttributesRequest   = v1.ValidateSearchAttributesRequest
	ValidateSearchAttributesResponse  = v1.ValidateSearchAttributesResponse
	ValidationResult                  = v1.ValidationResult
	ValueDistribution                 = v1.ValueDistribution
	WorkflowAction                    = v1.WorkflowAction
	WorkflowEvent                     = v1.WorkflowEvent
	WorkflowHistory                   = v1.WorkflowHistory
	WorkflowInfo                      = v1.WorkflowInfo
	WorkflowItem                      = v1.WorkflowItem
	WorkflowStackTrace                = v1.WorkflowStackTrace
	WorkflowStatus                    = v1.WorkflowStatus
	WorkflowTarget                    = v1.WorkflowTarget

	WorkflowService interface {
		// 启动工作流 (支持立即/延迟/调度/批量)
		StartWorkflow(ctx context.Context, in *StartWorkflowRequest, opts ...grpc.CallOption) (*StartWorkflowResponse, error)
		// 控制工作流 (取消/终止/暂停/恢复)
		ControlWorkflow(ctx context.Context, in *ControlWorkflowRequest, opts ...grpc.CallOption) (*ControlWorkflowResponse, error)
		// 查询控制操作状态
		QueryControlOperation(ctx context.Context, in *QueryControlOperationRequest, opts ...grpc.CallOption) (*QueryControlOperationResponse, error)
		// 查询工作流状态和历史
		QueryWorkflow(ctx context.Context, in *QueryWorkflowRequest, opts ...grpc.CallOption) (*QueryWorkflowResponse, error)
		// 列出工作流
		ListWorkflows(ctx context.Context, in *ListWorkflowsRequest, opts ...grpc.CallOption) (*ListWorkflowsResponse, error)
		// 原子替换工作流
		ReplaceWorkflow(ctx context.Context, in *ReplaceWorkflowRequest, opts ...grpc.CallOption) (*ReplaceWorkflowResponse, error)
	}

	defaultWorkflowService struct {
		cli zrpc.Client
	}
)

func NewWorkflowService(cli zrpc.Client) WorkflowService {
	return &defaultWorkflowService{
		cli: cli,
	}
}

// 启动工作流 (支持立即/延迟/调度/批量)
func (m *defaultWorkflowService) StartWorkflow(ctx context.Context, in *StartWorkflowRequest, opts ...grpc.CallOption) (*StartWorkflowResponse, error) {
	client := v1.NewWorkflowServiceClient(m.cli.Conn())
	return client.StartWorkflow(ctx, in, opts...)
}

// 控制工作流 (取消/终止/暂停/恢复)
func (m *defaultWorkflowService) ControlWorkflow(ctx context.Context, in *ControlWorkflowRequest, opts ...grpc.CallOption) (*ControlWorkflowResponse, error) {
	client := v1.NewWorkflowServiceClient(m.cli.Conn())
	return client.ControlWorkflow(ctx, in, opts...)
}

// 查询控制操作状态
func (m *defaultWorkflowService) QueryControlOperation(ctx context.Context, in *QueryControlOperationRequest, opts ...grpc.CallOption) (*QueryControlOperationResponse, error) {
	client := v1.NewWorkflowServiceClient(m.cli.Conn())
	return client.QueryControlOperation(ctx, in, opts...)
}

// 查询工作流状态和历史
func (m *defaultWorkflowService) QueryWorkflow(ctx context.Context, in *QueryWorkflowRequest, opts ...grpc.CallOption) (*QueryWorkflowResponse, error) {
	client := v1.NewWorkflowServiceClient(m.cli.Conn())
	return client.QueryWorkflow(ctx, in, opts...)
}

// 列出工作流
func (m *defaultWorkflowService) ListWorkflows(ctx context.Context, in *ListWorkflowsRequest, opts ...grpc.CallOption) (*ListWorkflowsResponse, error) {
	client := v1.NewWorkflowServiceClient(m.cli.Conn())
	return client.ListWorkflows(ctx, in, opts...)
}

// 原子替换工作流
func (m *defaultWorkflowService) ReplaceWorkflow(ctx context.Context, in *ReplaceWorkflowRequest, opts ...grpc.CallOption) (*ReplaceWorkflowResponse, error) {
	client := v1.NewWorkflowServiceClient(m.cli.Conn())
	return client.ReplaceWorkflow(ctx, in, opts...)
}
