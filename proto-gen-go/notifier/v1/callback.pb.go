// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: notifier/v1/callback.proto

package callback

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_ERROR_UNSPECIFIED ErrorCode = 0
	// 客户端错误 (4xx)
	ErrorCode_ERROR_INVALID_REQUEST ErrorCode = 400 // 请求格式错误
	ErrorCode_ERROR_UNAUTHORIZED    ErrorCode = 401 // 未授权
	ErrorCode_ERROR_FORBIDDEN       ErrorCode = 403 // 禁止访问
	ErrorCode_ERROR_NOT_FOUND       ErrorCode = 404 // 资源不存在
	ErrorCode_ERROR_DUPLICATE       ErrorCode = 409 // 重复请求（幂等性）
	ErrorCode_ERROR_RATE_LIMITED    ErrorCode = 429 // 频率限制
	// 服务端错误 (5xx)
	ErrorCode_ERROR_INTERNAL            ErrorCode = 500 // 内部错误
	ErrorCode_ERROR_NOT_IMPLEMENTED     ErrorCode = 501 // 未实现
	ErrorCode_ERROR_SERVICE_UNAVAILABLE ErrorCode = 503 // 服务不可用
	ErrorCode_ERROR_TIMEOUT             ErrorCode = 504 // 超时
	// 业务错误 (6xx)
	ErrorCode_ERROR_INVALID_SIGNATURE ErrorCode = 600 // 签名验证失败
	ErrorCode_ERROR_EXPIRED           ErrorCode = 601 // 消息过期
	ErrorCode_ERROR_REPLAY_ATTACK     ErrorCode = 602 // 重放攻击
	ErrorCode_ERROR_QUOTA_EXCEEDED    ErrorCode = 603 // 配额超限
	ErrorCode_ERROR_SUSPENDED         ErrorCode = 604 // 账户暂停
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:   "ERROR_UNSPECIFIED",
		400: "ERROR_INVALID_REQUEST",
		401: "ERROR_UNAUTHORIZED",
		403: "ERROR_FORBIDDEN",
		404: "ERROR_NOT_FOUND",
		409: "ERROR_DUPLICATE",
		429: "ERROR_RATE_LIMITED",
		500: "ERROR_INTERNAL",
		501: "ERROR_NOT_IMPLEMENTED",
		503: "ERROR_SERVICE_UNAVAILABLE",
		504: "ERROR_TIMEOUT",
		600: "ERROR_INVALID_SIGNATURE",
		601: "ERROR_EXPIRED",
		602: "ERROR_REPLAY_ATTACK",
		603: "ERROR_QUOTA_EXCEEDED",
		604: "ERROR_SUSPENDED",
	}
	ErrorCode_value = map[string]int32{
		"ERROR_UNSPECIFIED":         0,
		"ERROR_INVALID_REQUEST":     400,
		"ERROR_UNAUTHORIZED":        401,
		"ERROR_FORBIDDEN":           403,
		"ERROR_NOT_FOUND":           404,
		"ERROR_DUPLICATE":           409,
		"ERROR_RATE_LIMITED":        429,
		"ERROR_INTERNAL":            500,
		"ERROR_NOT_IMPLEMENTED":     501,
		"ERROR_SERVICE_UNAVAILABLE": 503,
		"ERROR_TIMEOUT":             504,
		"ERROR_INVALID_SIGNATURE":   600,
		"ERROR_EXPIRED":             601,
		"ERROR_REPLAY_ATTACK":       602,
		"ERROR_QUOTA_EXCEEDED":      603,
		"ERROR_SUSPENDED":           604,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_notifier_v1_callback_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_notifier_v1_callback_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{0}
}

type WebSocketMessage_MessageType int32

const (
	WebSocketMessage_TYPE_UNSPECIFIED  WebSocketMessage_MessageType = 0
	WebSocketMessage_TYPE_NOTIFICATION WebSocketMessage_MessageType = 1 // 通知消息
	WebSocketMessage_TYPE_HEARTBEAT    WebSocketMessage_MessageType = 2 // 心跳
	WebSocketMessage_TYPE_ACK          WebSocketMessage_MessageType = 3 // 确认
	WebSocketMessage_TYPE_SUBSCRIBE    WebSocketMessage_MessageType = 4 // 订阅请求
	WebSocketMessage_TYPE_UNSUBSCRIBE  WebSocketMessage_MessageType = 5 // 取消订阅
	WebSocketMessage_TYPE_ERROR        WebSocketMessage_MessageType = 6 // 错误
)

// Enum value maps for WebSocketMessage_MessageType.
var (
	WebSocketMessage_MessageType_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_NOTIFICATION",
		2: "TYPE_HEARTBEAT",
		3: "TYPE_ACK",
		4: "TYPE_SUBSCRIBE",
		5: "TYPE_UNSUBSCRIBE",
		6: "TYPE_ERROR",
	}
	WebSocketMessage_MessageType_value = map[string]int32{
		"TYPE_UNSPECIFIED":  0,
		"TYPE_NOTIFICATION": 1,
		"TYPE_HEARTBEAT":    2,
		"TYPE_ACK":          3,
		"TYPE_SUBSCRIBE":    4,
		"TYPE_UNSUBSCRIBE":  5,
		"TYPE_ERROR":        6,
	}
)

func (x WebSocketMessage_MessageType) Enum() *WebSocketMessage_MessageType {
	p := new(WebSocketMessage_MessageType)
	*p = x
	return p
}

func (x WebSocketMessage_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WebSocketMessage_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_notifier_v1_callback_proto_enumTypes[1].Descriptor()
}

func (WebSocketMessage_MessageType) Type() protoreflect.EnumType {
	return &file_notifier_v1_callback_proto_enumTypes[1]
}

func (x WebSocketMessage_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WebSocketMessage_MessageType.Descriptor instead.
func (WebSocketMessage_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{8, 0}
}

type RobotMessage_MessageLevel int32

const (
	RobotMessage_LEVEL_UNSPECIFIED RobotMessage_MessageLevel = 0
	RobotMessage_LEVEL_INFO        RobotMessage_MessageLevel = 1
	RobotMessage_LEVEL_WARNING     RobotMessage_MessageLevel = 2
	RobotMessage_LEVEL_ERROR       RobotMessage_MessageLevel = 3
	RobotMessage_LEVEL_CRITICAL    RobotMessage_MessageLevel = 4
)

// Enum value maps for RobotMessage_MessageLevel.
var (
	RobotMessage_MessageLevel_name = map[int32]string{
		0: "LEVEL_UNSPECIFIED",
		1: "LEVEL_INFO",
		2: "LEVEL_WARNING",
		3: "LEVEL_ERROR",
		4: "LEVEL_CRITICAL",
	}
	RobotMessage_MessageLevel_value = map[string]int32{
		"LEVEL_UNSPECIFIED": 0,
		"LEVEL_INFO":        1,
		"LEVEL_WARNING":     2,
		"LEVEL_ERROR":       3,
		"LEVEL_CRITICAL":    4,
	}
)

func (x RobotMessage_MessageLevel) Enum() *RobotMessage_MessageLevel {
	p := new(RobotMessage_MessageLevel)
	*p = x
	return p
}

func (x RobotMessage_MessageLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RobotMessage_MessageLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_notifier_v1_callback_proto_enumTypes[2].Descriptor()
}

func (RobotMessage_MessageLevel) Type() protoreflect.EnumType {
	return &file_notifier_v1_callback_proto_enumTypes[2]
}

func (x RobotMessage_MessageLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RobotMessage_MessageLevel.Descriptor instead.
func (RobotMessage_MessageLevel) EnumDescriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{16, 0}
}

type StreamControl_ControlType int32

const (
	StreamControl_CONTROL_UNSPECIFIED StreamControl_ControlType = 0
	StreamControl_CONTROL_PAUSE       StreamControl_ControlType = 1 // 暂停推送
	StreamControl_CONTROL_RESUME      StreamControl_ControlType = 2 // 恢复推送
	StreamControl_CONTROL_SLOW_DOWN   StreamControl_ControlType = 3 // 降速
	StreamControl_CONTROL_SPEED_UP    StreamControl_ControlType = 4 // 提速
	StreamControl_CONTROL_RESET       StreamControl_ControlType = 5 // 重置
)

// Enum value maps for StreamControl_ControlType.
var (
	StreamControl_ControlType_name = map[int32]string{
		0: "CONTROL_UNSPECIFIED",
		1: "CONTROL_PAUSE",
		2: "CONTROL_RESUME",
		3: "CONTROL_SLOW_DOWN",
		4: "CONTROL_SPEED_UP",
		5: "CONTROL_RESET",
	}
	StreamControl_ControlType_value = map[string]int32{
		"CONTROL_UNSPECIFIED": 0,
		"CONTROL_PAUSE":       1,
		"CONTROL_RESUME":      2,
		"CONTROL_SLOW_DOWN":   3,
		"CONTROL_SPEED_UP":    4,
		"CONTROL_RESET":       5,
	}
)

func (x StreamControl_ControlType) Enum() *StreamControl_ControlType {
	p := new(StreamControl_ControlType)
	*p = x
	return p
}

func (x StreamControl_ControlType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamControl_ControlType) Descriptor() protoreflect.EnumDescriptor {
	return file_notifier_v1_callback_proto_enumTypes[3].Descriptor()
}

func (StreamControl_ControlType) Type() protoreflect.EnumType {
	return &file_notifier_v1_callback_proto_enumTypes[3]
}

func (x StreamControl_ControlType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamControl_ControlType.Descriptor instead.
func (StreamControl_ControlType) EnumDescriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{27, 0}
}

// 通知推送请求（发送给商户的格式）
type NotificationPushRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 请求头信息
	Header *NotificationHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// 通知内容
	Body *NotificationBody `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	// 签名信息（用于验证）
	Signature     *Signature `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationPushRequest) Reset() {
	*x = NotificationPushRequest{}
	mi := &file_notifier_v1_callback_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationPushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationPushRequest) ProtoMessage() {}

func (x *NotificationPushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationPushRequest.ProtoReflect.Descriptor instead.
func (*NotificationPushRequest) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{0}
}

func (x *NotificationPushRequest) GetHeader() *NotificationHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *NotificationPushRequest) GetBody() *NotificationBody {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NotificationPushRequest) GetSignature() *Signature {
	if x != nil {
		return x.Signature
	}
	return nil
}

// 通知头信息
type NotificationHeader struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`                                         // 通知唯一ID
	MerchantId     string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`                                                     // 商户ID
	EventType      string                 `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`                                                        // 事件类型
	Version        string                 `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`                                                                             // API版本
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                         // 推送时间戳
	RetryCount     int32                  `protobuf:"varint,6,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`                                                    // 重试次数
	IdempotencyKey string                 `protobuf:"bytes,7,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"`                                         // 幂等键
	Metadata       map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 扩展元数据
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NotificationHeader) Reset() {
	*x = NotificationHeader{}
	mi := &file_notifier_v1_callback_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationHeader) ProtoMessage() {}

func (x *NotificationHeader) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationHeader.ProtoReflect.Descriptor instead.
func (*NotificationHeader) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{1}
}

func (x *NotificationHeader) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *NotificationHeader) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *NotificationHeader) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *NotificationHeader) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NotificationHeader) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NotificationHeader) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *NotificationHeader) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *NotificationHeader) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 通知内容
type NotificationBody struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`                   // 事件ID
	SourceService string                 `protobuf:"bytes,2,opt,name=source_service,json=sourceService,proto3" json:"source_service,omitempty"` // 来源服务
	OccurredAt    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=occurred_at,json=occurredAt,proto3" json:"occurred_at,omitempty"`          // 事件发生时间
	// 事件数据（JSON格式或protobuf Any）
	//
	// Types that are valid to be assigned to Data:
	//
	//	*NotificationBody_JsonData
	//	*NotificationBody_ProtoData
	Data isNotificationBody_Data `protobuf_oneof:"data"`
	// 批量推送时的聚合信息
	Aggregation   *AggregationInfo `protobuf:"bytes,6,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationBody) Reset() {
	*x = NotificationBody{}
	mi := &file_notifier_v1_callback_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationBody) ProtoMessage() {}

func (x *NotificationBody) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationBody.ProtoReflect.Descriptor instead.
func (*NotificationBody) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{2}
}

func (x *NotificationBody) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *NotificationBody) GetSourceService() string {
	if x != nil {
		return x.SourceService
	}
	return ""
}

func (x *NotificationBody) GetOccurredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OccurredAt
	}
	return nil
}

func (x *NotificationBody) GetData() isNotificationBody_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *NotificationBody) GetJsonData() string {
	if x != nil {
		if x, ok := x.Data.(*NotificationBody_JsonData); ok {
			return x.JsonData
		}
	}
	return ""
}

func (x *NotificationBody) GetProtoData() *anypb.Any {
	if x != nil {
		if x, ok := x.Data.(*NotificationBody_ProtoData); ok {
			return x.ProtoData
		}
	}
	return nil
}

func (x *NotificationBody) GetAggregation() *AggregationInfo {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

type isNotificationBody_Data interface {
	isNotificationBody_Data()
}

type NotificationBody_JsonData struct {
	JsonData string `protobuf:"bytes,4,opt,name=json_data,json=jsonData,proto3,oneof"` // JSON格式数据
}

type NotificationBody_ProtoData struct {
	ProtoData *anypb.Any `protobuf:"bytes,5,opt,name=proto_data,json=protoData,proto3,oneof"` // Protobuf格式数据
}

func (*NotificationBody_JsonData) isNotificationBody_Data() {}

func (*NotificationBody_ProtoData) isNotificationBody_Data() {}

// 聚合信息（批量推送时使用）
type AggregationInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	IsAggregated   bool                   `protobuf:"varint,1,opt,name=is_aggregated,json=isAggregated,proto3" json:"is_aggregated,omitempty"`        // 是否为聚合消息
	EventCount     int32                  `protobuf:"varint,2,opt,name=event_count,json=eventCount,proto3" json:"event_count,omitempty"`              // 聚合的事件数量
	EventIds       []string               `protobuf:"bytes,3,rep,name=event_ids,json=eventIds,proto3" json:"event_ids,omitempty"`                     // 聚合的事件ID列表
	FirstEventTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=first_event_time,json=firstEventTime,proto3" json:"first_event_time,omitempty"` // 第一个事件时间
	LastEventTime  *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_event_time,json=lastEventTime,proto3" json:"last_event_time,omitempty"`    // 最后一个事件时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AggregationInfo) Reset() {
	*x = AggregationInfo{}
	mi := &file_notifier_v1_callback_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AggregationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AggregationInfo) ProtoMessage() {}

func (x *AggregationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AggregationInfo.ProtoReflect.Descriptor instead.
func (*AggregationInfo) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{3}
}

func (x *AggregationInfo) GetIsAggregated() bool {
	if x != nil {
		return x.IsAggregated
	}
	return false
}

func (x *AggregationInfo) GetEventCount() int32 {
	if x != nil {
		return x.EventCount
	}
	return 0
}

func (x *AggregationInfo) GetEventIds() []string {
	if x != nil {
		return x.EventIds
	}
	return nil
}

func (x *AggregationInfo) GetFirstEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstEventTime
	}
	return nil
}

func (x *AggregationInfo) GetLastEventTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastEventTime
	}
	return nil
}

// 签名信息
type Signature struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Algorithm     string                 `protobuf:"bytes,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`               // 签名算法: HMAC-SHA256/RSA-SHA256
	Signature     string                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`               // 签名值（Base64编码）
	SignedAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=signed_at,json=signedAt,proto3" json:"signed_at,omitempty"` // 签名时间
	Nonce         int64                  `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`                      // 随机数（防重放）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Signature) Reset() {
	*x = Signature{}
	mi := &file_notifier_v1_callback_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{4}
}

func (x *Signature) GetAlgorithm() string {
	if x != nil {
		return x.Algorithm
	}
	return ""
}

func (x *Signature) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Signature) GetSignedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SignedAt
	}
	return nil
}

func (x *Signature) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

// 商户响应格式
type NotificationPushResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                             // 是否成功接收
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`                                              // 响应消息
	ErrorCode         string                 `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`                         // 错误码（失败时）
	MerchantReference string                 `protobuf:"bytes,4,opt,name=merchant_reference,json=merchantReference,proto3" json:"merchant_reference,omitempty"` // 商户侧的引用ID
	ReceivedAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`                      // 接收时间
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NotificationPushResponse) Reset() {
	*x = NotificationPushResponse{}
	mi := &file_notifier_v1_callback_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationPushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationPushResponse) ProtoMessage() {}

func (x *NotificationPushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationPushResponse.ProtoReflect.Descriptor instead.
func (*NotificationPushResponse) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{5}
}

func (x *NotificationPushResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NotificationPushResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NotificationPushResponse) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *NotificationPushResponse) GetMerchantReference() string {
	if x != nil {
		return x.MerchantReference
	}
	return ""
}

func (x *NotificationPushResponse) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

// HTTP推送请求格式（JSON）
type HttpNotification struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	MerchantId     string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	EventType      string                 `protobuf:"bytes,3,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	EventId        string                 `protobuf:"bytes,4,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Timestamp      int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix时间戳（毫秒）
	RetryCount     int32                  `protobuf:"varint,6,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`
	Data           string                 `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`           // JSON字符串
	Signature      string                 `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"` // 请求签名
	// 批量消息
	BatchItems    []*HttpNotification_BatchItem `protobuf:"bytes,9,rep,name=batch_items,json=batchItems,proto3" json:"batch_items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpNotification) Reset() {
	*x = HttpNotification{}
	mi := &file_notifier_v1_callback_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpNotification) ProtoMessage() {}

func (x *HttpNotification) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpNotification.ProtoReflect.Descriptor instead.
func (*HttpNotification) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{6}
}

func (x *HttpNotification) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *HttpNotification) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *HttpNotification) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *HttpNotification) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *HttpNotification) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HttpNotification) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *HttpNotification) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *HttpNotification) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *HttpNotification) GetBatchItems() []*HttpNotification_BatchItem {
	if x != nil {
		return x.BatchItems
	}
	return nil
}

// HTTP响应格式（JSON）
type HttpNotificationResponse struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Code        int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"` // 0:成功，其他:失败
	Message     string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ReferenceId string                 `protobuf:"bytes,3,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"` // 商户引用ID
	// 批量响应
	BatchResults  []*HttpNotificationResponse_BatchResult `protobuf:"bytes,4,rep,name=batch_results,json=batchResults,proto3" json:"batch_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpNotificationResponse) Reset() {
	*x = HttpNotificationResponse{}
	mi := &file_notifier_v1_callback_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpNotificationResponse) ProtoMessage() {}

func (x *HttpNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpNotificationResponse.ProtoReflect.Descriptor instead.
func (*HttpNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{7}
}

func (x *HttpNotificationResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *HttpNotificationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HttpNotificationResponse) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *HttpNotificationResponse) GetBatchResults() []*HttpNotificationResponse_BatchResult {
	if x != nil {
		return x.BatchResults
	}
	return nil
}

// WebSocket消息包装
type WebSocketMessage struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	MessageId     string                       `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	Type          WebSocketMessage_MessageType `protobuf:"varint,2,opt,name=type,proto3,enum=notifier.v1.callback.WebSocketMessage_MessageType" json:"type,omitempty"`
	Payload       *anypb.Any                   `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Timestamp     *timestamppb.Timestamp       `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketMessage) Reset() {
	*x = WebSocketMessage{}
	mi := &file_notifier_v1_callback_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketMessage) ProtoMessage() {}

func (x *WebSocketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketMessage.ProtoReflect.Descriptor instead.
func (*WebSocketMessage) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{8}
}

func (x *WebSocketMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *WebSocketMessage) GetType() WebSocketMessage_MessageType {
	if x != nil {
		return x.Type
	}
	return WebSocketMessage_TYPE_UNSPECIFIED
}

func (x *WebSocketMessage) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *WebSocketMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// WebSocket通知消息
type WebSocketNotification struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	EventType      string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Data           *anypb.Any             `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	RequireAck     bool                   `protobuf:"varint,4,opt,name=require_ack,json=requireAck,proto3" json:"require_ack,omitempty"` // 是否需要确认
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *WebSocketNotification) Reset() {
	*x = WebSocketNotification{}
	mi := &file_notifier_v1_callback_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketNotification) ProtoMessage() {}

func (x *WebSocketNotification) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketNotification.ProtoReflect.Descriptor instead.
func (*WebSocketNotification) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{9}
}

func (x *WebSocketNotification) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *WebSocketNotification) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *WebSocketNotification) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WebSocketNotification) GetRequireAck() bool {
	if x != nil {
		return x.RequireAck
	}
	return false
}

// WebSocket确认消息
type WebSocketAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // 确认的消息ID
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketAck) Reset() {
	*x = WebSocketAck{}
	mi := &file_notifier_v1_callback_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketAck) ProtoMessage() {}

func (x *WebSocketAck) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketAck.ProtoReflect.Descriptor instead.
func (*WebSocketAck) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{10}
}

func (x *WebSocketAck) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *WebSocketAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WebSocketAck) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// WebSocket订阅请求
type WebSocketSubscribe struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventTypes    []string               `protobuf:"bytes,1,rep,name=event_types,json=eventTypes,proto3" json:"event_types,omitempty"`                                                   // 订阅的事件类型
	Filters       map[string]string      `protobuf:"bytes,2,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 过滤条件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketSubscribe) Reset() {
	*x = WebSocketSubscribe{}
	mi := &file_notifier_v1_callback_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketSubscribe) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketSubscribe) ProtoMessage() {}

func (x *WebSocketSubscribe) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketSubscribe.ProtoReflect.Descriptor instead.
func (*WebSocketSubscribe) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{11}
}

func (x *WebSocketSubscribe) GetEventTypes() []string {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *WebSocketSubscribe) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

// 内部服务通知（用于公司内部服务之间）
type InternalServiceNotification struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	SourceService  string                 `protobuf:"bytes,2,opt,name=source_service,json=sourceService,proto3" json:"source_service,omitempty"` // 来源服务
	TargetService  string                 `protobuf:"bytes,3,opt,name=target_service,json=targetService,proto3" json:"target_service,omitempty"` // 目标服务
	EventType      string                 `protobuf:"bytes,4,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Payload        *anypb.Any             `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Headers        map[string]string      `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 服务间传递的header信息
	TraceId        string                 `protobuf:"bytes,8,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                                                            // 链路追踪ID
	Priority       int32                  `protobuf:"varint,9,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InternalServiceNotification) Reset() {
	*x = InternalServiceNotification{}
	mi := &file_notifier_v1_callback_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalServiceNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalServiceNotification) ProtoMessage() {}

func (x *InternalServiceNotification) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalServiceNotification.ProtoReflect.Descriptor instead.
func (*InternalServiceNotification) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{12}
}

func (x *InternalServiceNotification) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *InternalServiceNotification) GetSourceService() string {
	if x != nil {
		return x.SourceService
	}
	return ""
}

func (x *InternalServiceNotification) GetTargetService() string {
	if x != nil {
		return x.TargetService
	}
	return ""
}

func (x *InternalServiceNotification) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *InternalServiceNotification) GetPayload() *anypb.Any {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *InternalServiceNotification) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *InternalServiceNotification) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *InternalServiceNotification) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *InternalServiceNotification) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// 内部服务批量通知
type InternalServiceBatchNotification struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	BatchId       string                         `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	Notifications []*InternalServiceNotification `protobuf:"bytes,2,rep,name=notifications,proto3" json:"notifications,omitempty"`
	SourceService string                         `protobuf:"bytes,3,opt,name=source_service,json=sourceService,proto3" json:"source_service,omitempty"`
	Timestamp     *timestamppb.Timestamp         `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalServiceBatchNotification) Reset() {
	*x = InternalServiceBatchNotification{}
	mi := &file_notifier_v1_callback_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalServiceBatchNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalServiceBatchNotification) ProtoMessage() {}

func (x *InternalServiceBatchNotification) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalServiceBatchNotification.ProtoReflect.Descriptor instead.
func (*InternalServiceBatchNotification) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{13}
}

func (x *InternalServiceBatchNotification) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *InternalServiceBatchNotification) GetNotifications() []*InternalServiceNotification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *InternalServiceBatchNotification) GetSourceService() string {
	if x != nil {
		return x.SourceService
	}
	return ""
}

func (x *InternalServiceBatchNotification) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// 内部服务响应
type InternalServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ErrorCode     string                 `protobuf:"bytes,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ProcessedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InternalServiceResponse) Reset() {
	*x = InternalServiceResponse{}
	mi := &file_notifier_v1_callback_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InternalServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InternalServiceResponse) ProtoMessage() {}

func (x *InternalServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InternalServiceResponse.ProtoReflect.Descriptor instead.
func (*InternalServiceResponse) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{14}
}

func (x *InternalServiceResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InternalServiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InternalServiceResponse) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *InternalServiceResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

// 机器人通知消息
type RobotNotification struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	RobotType      string                 `protobuf:"bytes,2,opt,name=robot_type,json=robotType,proto3" json:"robot_type,omitempty"` // slack/teams/dingtalk/wecom/telegram
	ChannelId      string                 `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"` // 频道/群组ID
	EventType      string                 `protobuf:"bytes,4,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Message        *RobotMessage          `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	RequireAck     bool                   `protobuf:"varint,7,opt,name=require_ack,json=requireAck,proto3" json:"require_ack,omitempty"` // 是否需要确认
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RobotNotification) Reset() {
	*x = RobotNotification{}
	mi := &file_notifier_v1_callback_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotNotification) ProtoMessage() {}

func (x *RobotNotification) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotNotification.ProtoReflect.Descriptor instead.
func (*RobotNotification) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{15}
}

func (x *RobotNotification) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *RobotNotification) GetRobotType() string {
	if x != nil {
		return x.RobotType
	}
	return ""
}

func (x *RobotNotification) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *RobotNotification) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *RobotNotification) GetMessage() *RobotMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *RobotNotification) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *RobotNotification) GetRequireAck() bool {
	if x != nil {
		return x.RequireAck
	}
	return false
}

// 机器人消息内容
type RobotMessage struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Title         string                     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content       string                     `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                                                  // Markdown格式内容
	Level         RobotMessage_MessageLevel  `protobuf:"varint,3,opt,name=level,proto3,enum=notifier.v1.callback.RobotMessage_MessageLevel" json:"level,omitempty"` // 消息级别
	Attachments   []*RobotMessage_Attachment `protobuf:"bytes,4,rep,name=attachments,proto3" json:"attachments,omitempty"`
	Buttons       []*RobotMessage_Button     `protobuf:"bytes,5,rep,name=buttons,proto3" json:"buttons,omitempty"` // 交互按钮
	Metadata      map[string]string          `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotMessage) Reset() {
	*x = RobotMessage{}
	mi := &file_notifier_v1_callback_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotMessage) ProtoMessage() {}

func (x *RobotMessage) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotMessage.ProtoReflect.Descriptor instead.
func (*RobotMessage) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{16}
}

func (x *RobotMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RobotMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RobotMessage) GetLevel() RobotMessage_MessageLevel {
	if x != nil {
		return x.Level
	}
	return RobotMessage_LEVEL_UNSPECIFIED
}

func (x *RobotMessage) GetAttachments() []*RobotMessage_Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *RobotMessage) GetButtons() []*RobotMessage_Button {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *RobotMessage) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 机器人交互回调
type RobotInteractionCallback struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CallbackId     string                 `protobuf:"bytes,1,opt,name=callback_id,json=callbackId,proto3" json:"callback_id,omitempty"`
	NotificationId string                 `protobuf:"bytes,2,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	UserId         string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 触发用户
	ButtonId       string                 `protobuf:"bytes,4,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"` // 点击的按钮ID
	Action         string                 `protobuf:"bytes,5,opt,name=action,proto3" json:"action,omitempty"`
	Value          string                 `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	TriggeredAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=triggered_at,json=triggeredAt,proto3" json:"triggered_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RobotInteractionCallback) Reset() {
	*x = RobotInteractionCallback{}
	mi := &file_notifier_v1_callback_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotInteractionCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotInteractionCallback) ProtoMessage() {}

func (x *RobotInteractionCallback) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotInteractionCallback.ProtoReflect.Descriptor instead.
func (*RobotInteractionCallback) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{17}
}

func (x *RobotInteractionCallback) GetCallbackId() string {
	if x != nil {
		return x.CallbackId
	}
	return ""
}

func (x *RobotInteractionCallback) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *RobotInteractionCallback) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RobotInteractionCallback) GetButtonId() string {
	if x != nil {
		return x.ButtonId
	}
	return ""
}

func (x *RobotInteractionCallback) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RobotInteractionCallback) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RobotInteractionCallback) GetTriggeredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TriggeredAt
	}
	return nil
}

// 机器人批量消息
type RobotBatchNotification struct {
	state         protoimpl.MessageState                        `protogen:"open.v1"`
	BatchId       string                                        `protobuf:"bytes,1,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`
	RobotType     string                                        `protobuf:"bytes,2,opt,name=robot_type,json=robotType,proto3" json:"robot_type,omitempty"`
	Messages      []*RobotBatchNotification_RobotChannelMessage `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotBatchNotification) Reset() {
	*x = RobotBatchNotification{}
	mi := &file_notifier_v1_callback_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotBatchNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotBatchNotification) ProtoMessage() {}

func (x *RobotBatchNotification) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotBatchNotification.ProtoReflect.Descriptor instead.
func (*RobotBatchNotification) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{18}
}

func (x *RobotBatchNotification) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *RobotBatchNotification) GetRobotType() string {
	if x != nil {
		return x.RobotType
	}
	return ""
}

func (x *RobotBatchNotification) GetMessages() []*RobotBatchNotification_RobotChannelMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

// 流式通知请求
type StreamNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Request:
	//
	//	*StreamNotificationRequest_Header
	//	*StreamNotificationRequest_Notification
	//	*StreamNotificationRequest_Footer
	Request       isStreamNotificationRequest_Request `protobuf_oneof:"request"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamNotificationRequest) Reset() {
	*x = StreamNotificationRequest{}
	mi := &file_notifier_v1_callback_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamNotificationRequest) ProtoMessage() {}

func (x *StreamNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamNotificationRequest.ProtoReflect.Descriptor instead.
func (*StreamNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{19}
}

func (x *StreamNotificationRequest) GetRequest() isStreamNotificationRequest_Request {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *StreamNotificationRequest) GetHeader() *StreamHeader {
	if x != nil {
		if x, ok := x.Request.(*StreamNotificationRequest_Header); ok {
			return x.Header
		}
	}
	return nil
}

func (x *StreamNotificationRequest) GetNotification() *StreamNotification {
	if x != nil {
		if x, ok := x.Request.(*StreamNotificationRequest_Notification); ok {
			return x.Notification
		}
	}
	return nil
}

func (x *StreamNotificationRequest) GetFooter() *StreamFooter {
	if x != nil {
		if x, ok := x.Request.(*StreamNotificationRequest_Footer); ok {
			return x.Footer
		}
	}
	return nil
}

type isStreamNotificationRequest_Request interface {
	isStreamNotificationRequest_Request()
}

type StreamNotificationRequest_Header struct {
	Header *StreamHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"` // 流开始
}

type StreamNotificationRequest_Notification struct {
	Notification *StreamNotification `protobuf:"bytes,2,opt,name=notification,proto3,oneof"` // 通知数据
}

type StreamNotificationRequest_Footer struct {
	Footer *StreamFooter `protobuf:"bytes,3,opt,name=footer,proto3,oneof"` // 流结束
}

func (*StreamNotificationRequest_Header) isStreamNotificationRequest_Request() {}

func (*StreamNotificationRequest_Notification) isStreamNotificationRequest_Request() {}

func (*StreamNotificationRequest_Footer) isStreamNotificationRequest_Request() {}

// 流头信息
type StreamHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	MerchantId    string                 `protobuf:"bytes,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamHeader) Reset() {
	*x = StreamHeader{}
	mi := &file_notifier_v1_callback_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamHeader) ProtoMessage() {}

func (x *StreamHeader) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamHeader.ProtoReflect.Descriptor instead.
func (*StreamHeader) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{20}
}

func (x *StreamHeader) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamHeader) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *StreamHeader) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *StreamHeader) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 流式通知
type StreamNotification struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	EventType      string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Data           *anypb.Any             `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Sequence       int64                  `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"` // 序列号
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamNotification) Reset() {
	*x = StreamNotification{}
	mi := &file_notifier_v1_callback_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamNotification) ProtoMessage() {}

func (x *StreamNotification) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamNotification.ProtoReflect.Descriptor instead.
func (*StreamNotification) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{21}
}

func (x *StreamNotification) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *StreamNotification) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *StreamNotification) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StreamNotification) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// 流尾信息
type StreamFooter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalCount    int64                  `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamFooter) Reset() {
	*x = StreamFooter{}
	mi := &file_notifier_v1_callback_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamFooter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFooter) ProtoMessage() {}

func (x *StreamFooter) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFooter.ProtoReflect.Descriptor instead.
func (*StreamFooter) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{22}
}

func (x *StreamFooter) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *StreamFooter) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// 流式通知响应
type StreamNotificationResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	StreamId              string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	ReceivedCount         int64                  `protobuf:"varint,2,opt,name=received_count,json=receivedCount,proto3" json:"received_count,omitempty"`
	FailedCount           int64                  `protobuf:"varint,3,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`
	FailedNotificationIds []string               `protobuf:"bytes,4,rep,name=failed_notification_ids,json=failedNotificationIds,proto3" json:"failed_notification_ids,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *StreamNotificationResponse) Reset() {
	*x = StreamNotificationResponse{}
	mi := &file_notifier_v1_callback_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamNotificationResponse) ProtoMessage() {}

func (x *StreamNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamNotificationResponse.ProtoReflect.Descriptor instead.
func (*StreamNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{23}
}

func (x *StreamNotificationResponse) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamNotificationResponse) GetReceivedCount() int64 {
	if x != nil {
		return x.ReceivedCount
	}
	return 0
}

func (x *StreamNotificationResponse) GetFailedCount() int64 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *StreamNotificationResponse) GetFailedNotificationIds() []string {
	if x != nil {
		return x.FailedNotificationIds
	}
	return nil
}

// 双向流消息
type StreamMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// Types that are valid to be assigned to Content:
	//
	//	*StreamMessage_Notification
	//	*StreamMessage_Ack
	//	*StreamMessage_Error
	//	*StreamMessage_Control
	Content       isStreamMessage_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamMessage) Reset() {
	*x = StreamMessage{}
	mi := &file_notifier_v1_callback_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamMessage) ProtoMessage() {}

func (x *StreamMessage) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamMessage.ProtoReflect.Descriptor instead.
func (*StreamMessage) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{24}
}

func (x *StreamMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *StreamMessage) GetContent() isStreamMessage_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *StreamMessage) GetNotification() *StreamNotification {
	if x != nil {
		if x, ok := x.Content.(*StreamMessage_Notification); ok {
			return x.Notification
		}
	}
	return nil
}

func (x *StreamMessage) GetAck() *StreamAck {
	if x != nil {
		if x, ok := x.Content.(*StreamMessage_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *StreamMessage) GetError() *StreamError {
	if x != nil {
		if x, ok := x.Content.(*StreamMessage_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *StreamMessage) GetControl() *StreamControl {
	if x != nil {
		if x, ok := x.Content.(*StreamMessage_Control); ok {
			return x.Control
		}
	}
	return nil
}

type isStreamMessage_Content interface {
	isStreamMessage_Content()
}

type StreamMessage_Notification struct {
	Notification *StreamNotification `protobuf:"bytes,2,opt,name=notification,proto3,oneof"`
}

type StreamMessage_Ack struct {
	Ack *StreamAck `protobuf:"bytes,3,opt,name=ack,proto3,oneof"`
}

type StreamMessage_Error struct {
	Error *StreamError `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

type StreamMessage_Control struct {
	Control *StreamControl `protobuf:"bytes,5,opt,name=control,proto3,oneof"`
}

func (*StreamMessage_Notification) isStreamMessage_Content() {}

func (*StreamMessage_Ack) isStreamMessage_Content() {}

func (*StreamMessage_Error) isStreamMessage_Content() {}

func (*StreamMessage_Control) isStreamMessage_Content() {}

// 流确认
type StreamAck struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	Success        bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error          string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamAck) Reset() {
	*x = StreamAck{}
	mi := &file_notifier_v1_callback_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAck) ProtoMessage() {}

func (x *StreamAck) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAck.ProtoReflect.Descriptor instead.
func (*StreamAck) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{25}
}

func (x *StreamAck) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *StreamAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StreamAck) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// 流错误
type StreamError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     string                 `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Recoverable   bool                   `protobuf:"varint,3,opt,name=recoverable,proto3" json:"recoverable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamError) Reset() {
	*x = StreamError{}
	mi := &file_notifier_v1_callback_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamError) ProtoMessage() {}

func (x *StreamError) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamError.ProtoReflect.Descriptor instead.
func (*StreamError) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{26}
}

func (x *StreamError) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *StreamError) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *StreamError) GetRecoverable() bool {
	if x != nil {
		return x.Recoverable
	}
	return false
}

// 流控制
type StreamControl struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Type          StreamControl_ControlType `protobuf:"varint,1,opt,name=type,proto3,enum=notifier.v1.callback.StreamControl_ControlType" json:"type,omitempty"`
	Parameters    map[string]string         `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamControl) Reset() {
	*x = StreamControl{}
	mi := &file_notifier_v1_callback_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamControl) ProtoMessage() {}

func (x *StreamControl) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamControl.ProtoReflect.Descriptor instead.
func (*StreamControl) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{27}
}

func (x *StreamControl) GetType() StreamControl_ControlType {
	if x != nil {
		return x.Type
	}
	return StreamControl_CONTROL_UNSPECIFIED
}

func (x *StreamControl) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// 签名验证请求（用于测试）
type VerifySignatureRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	MerchantId    string                   `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	Notification  *NotificationPushRequest `protobuf:"bytes,2,opt,name=notification,proto3" json:"notification,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifySignatureRequest) Reset() {
	*x = VerifySignatureRequest{}
	mi := &file_notifier_v1_callback_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifySignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySignatureRequest) ProtoMessage() {}

func (x *VerifySignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySignatureRequest.ProtoReflect.Descriptor instead.
func (*VerifySignatureRequest) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{28}
}

func (x *VerifySignatureRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

func (x *VerifySignatureRequest) GetNotification() *NotificationPushRequest {
	if x != nil {
		return x.Notification
	}
	return nil
}

// 签名验证响应
type VerifySignatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifySignatureResponse) Reset() {
	*x = VerifySignatureResponse{}
	mi := &file_notifier_v1_callback_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifySignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifySignatureResponse) ProtoMessage() {}

func (x *VerifySignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifySignatureResponse.ProtoReflect.Descriptor instead.
func (*VerifySignatureResponse) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{29}
}

func (x *VerifySignatureResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

func (x *VerifySignatureResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// 健康检查请求
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MerchantId    string                 `protobuf:"bytes,1,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_notifier_v1_callback_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{30}
}

func (x *HealthCheckRequest) GetMerchantId() string {
	if x != nil {
		return x.MerchantId
	}
	return ""
}

// 健康检查响应
type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Healthy       bool                   `protobuf:"varint,1,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	ServerTime    *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	Features      map[string]bool        `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // 支持的特性
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_notifier_v1_callback_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{31}
}

func (x *HealthCheckResponse) GetHealthy() bool {
	if x != nil {
		return x.Healthy
	}
	return false
}

func (x *HealthCheckResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *HealthCheckResponse) GetServerTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ServerTime
	}
	return nil
}

func (x *HealthCheckResponse) GetFeatures() map[string]bool {
	if x != nil {
		return x.Features
	}
	return nil
}

type HttpNotification_BatchItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventType     string                 `protobuf:"bytes,2,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data          string                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpNotification_BatchItem) Reset() {
	*x = HttpNotification_BatchItem{}
	mi := &file_notifier_v1_callback_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpNotification_BatchItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpNotification_BatchItem) ProtoMessage() {}

func (x *HttpNotification_BatchItem) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpNotification_BatchItem.ProtoReflect.Descriptor instead.
func (*HttpNotification_BatchItem) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{6, 0}
}

func (x *HttpNotification_BatchItem) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *HttpNotification_BatchItem) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *HttpNotification_BatchItem) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HttpNotification_BatchItem) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type HttpNotificationResponse_BatchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpNotificationResponse_BatchResult) Reset() {
	*x = HttpNotificationResponse_BatchResult{}
	mi := &file_notifier_v1_callback_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpNotificationResponse_BatchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpNotificationResponse_BatchResult) ProtoMessage() {}

func (x *HttpNotificationResponse_BatchResult) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpNotificationResponse_BatchResult.ProtoReflect.Descriptor instead.
func (*HttpNotificationResponse_BatchResult) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{7, 0}
}

func (x *HttpNotificationResponse_BatchResult) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *HttpNotificationResponse_BatchResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HttpNotificationResponse_BatchResult) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type RobotMessage_Attachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // image/file/link
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotMessage_Attachment) Reset() {
	*x = RobotMessage_Attachment{}
	mi := &file_notifier_v1_callback_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotMessage_Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotMessage_Attachment) ProtoMessage() {}

func (x *RobotMessage_Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotMessage_Attachment.ProtoReflect.Descriptor instead.
func (*RobotMessage_Attachment) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{16, 1}
}

func (x *RobotMessage_Attachment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RobotMessage_Attachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RobotMessage_Attachment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RobotMessage_Attachment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type RobotMessage_Button struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Action        string                 `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"` // url/callback/command
	Value         string                 `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	Style         string                 `protobuf:"bytes,5,opt,name=style,proto3" json:"style,omitempty"` // primary/danger/default
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotMessage_Button) Reset() {
	*x = RobotMessage_Button{}
	mi := &file_notifier_v1_callback_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotMessage_Button) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotMessage_Button) ProtoMessage() {}

func (x *RobotMessage_Button) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotMessage_Button.ProtoReflect.Descriptor instead.
func (*RobotMessage_Button) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{16, 2}
}

func (x *RobotMessage_Button) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RobotMessage_Button) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RobotMessage_Button) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *RobotMessage_Button) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RobotMessage_Button) GetStyle() string {
	if x != nil {
		return x.Style
	}
	return ""
}

type RobotBatchNotification_RobotChannelMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Message       *RobotMessage          `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotBatchNotification_RobotChannelMessage) Reset() {
	*x = RobotBatchNotification_RobotChannelMessage{}
	mi := &file_notifier_v1_callback_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotBatchNotification_RobotChannelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotBatchNotification_RobotChannelMessage) ProtoMessage() {}

func (x *RobotBatchNotification_RobotChannelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_callback_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotBatchNotification_RobotChannelMessage.ProtoReflect.Descriptor instead.
func (*RobotBatchNotification_RobotChannelMessage) Descriptor() ([]byte, []int) {
	return file_notifier_v1_callback_proto_rawDescGZIP(), []int{18, 0}
}

func (x *RobotBatchNotification_RobotChannelMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *RobotBatchNotification_RobotChannelMessage) GetMessage() *RobotMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_notifier_v1_callback_proto protoreflect.FileDescriptor

const file_notifier_v1_callback_proto_rawDesc = "" +
	"\n" +
	"\x1anotifier/v1/callback.proto\x12\x14notifier.v1.callback\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/protobuf/any.proto\"\xd6\x01\n" +
	"\x17NotificationPushRequest\x12@\n" +
	"\x06header\x18\x01 \x01(\v2(.notifier.v1.callback.NotificationHeaderR\x06header\x12:\n" +
	"\x04body\x18\x02 \x01(\v2&.notifier.v1.callback.NotificationBodyR\x04body\x12=\n" +
	"\tsignature\x18\x03 \x01(\v2\x1f.notifier.v1.callback.SignatureR\tsignature\"\xac\x03\n" +
	"\x12NotificationHeader\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x03 \x01(\tR\teventType\x12\x18\n" +
	"\aversion\x18\x04 \x01(\tR\aversion\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\vretry_count\x18\x06 \x01(\x05R\n" +
	"retryCount\x12'\n" +
	"\x0fidempotency_key\x18\a \x01(\tR\x0eidempotencyKey\x12R\n" +
	"\bmetadata\x18\b \x03(\v26.notifier.v1.callback.NotificationHeader.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb8\x02\n" +
	"\x10NotificationBody\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12%\n" +
	"\x0esource_service\x18\x02 \x01(\tR\rsourceService\x12;\n" +
	"\voccurred_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"occurredAt\x12\x1d\n" +
	"\tjson_data\x18\x04 \x01(\tH\x00R\bjsonData\x125\n" +
	"\n" +
	"proto_data\x18\x05 \x01(\v2\x14.google.protobuf.AnyH\x00R\tprotoData\x12G\n" +
	"\vaggregation\x18\x06 \x01(\v2%.notifier.v1.callback.AggregationInfoR\vaggregationB\x06\n" +
	"\x04data\"\xfe\x01\n" +
	"\x0fAggregationInfo\x12#\n" +
	"\ris_aggregated\x18\x01 \x01(\bR\fisAggregated\x12\x1f\n" +
	"\vevent_count\x18\x02 \x01(\x05R\n" +
	"eventCount\x12\x1b\n" +
	"\tevent_ids\x18\x03 \x03(\tR\beventIds\x12D\n" +
	"\x10first_event_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x0efirstEventTime\x12B\n" +
	"\x0flast_event_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\rlastEventTime\"\x96\x01\n" +
	"\tSignature\x12\x1c\n" +
	"\talgorithm\x18\x01 \x01(\tR\talgorithm\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\tR\tsignature\x127\n" +
	"\tsigned_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\bsignedAt\x12\x14\n" +
	"\x05nonce\x18\x04 \x01(\x03R\x05nonce\"\xd9\x01\n" +
	"\x18NotificationPushResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\tR\terrorCode\x12-\n" +
	"\x12merchant_reference\x18\x04 \x01(\tR\x11merchantReference\x12;\n" +
	"\vreceived_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"receivedAt\"\xd3\x03\n" +
	"\x10HttpNotification\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x03 \x01(\tR\teventType\x12\x19\n" +
	"\bevent_id\x18\x04 \x01(\tR\aeventId\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12\x1f\n" +
	"\vretry_count\x18\x06 \x01(\x05R\n" +
	"retryCount\x12\x12\n" +
	"\x04data\x18\a \x01(\tR\x04data\x12\x1c\n" +
	"\tsignature\x18\b \x01(\tR\tsignature\x12Q\n" +
	"\vbatch_items\x18\t \x03(\v20.notifier.v1.callback.HttpNotification.BatchItemR\n" +
	"batchItems\x1aw\n" +
	"\tBatchItem\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x12\n" +
	"\x04data\x18\x04 \x01(\tR\x04data\"\xa6\x02\n" +
	"\x18HttpNotificationResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12!\n" +
	"\freference_id\x18\x03 \x01(\tR\vreferenceId\x12_\n" +
	"\rbatch_results\x18\x04 \x03(\v2:.notifier.v1.callback.HttpNotificationResponse.BatchResultR\fbatchResults\x1aX\n" +
	"\vBatchResult\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\xfc\x02\n" +
	"\x10WebSocketMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12F\n" +
	"\x04type\x18\x02 \x01(\x0e22.notifier.v1.callback.WebSocketMessage.MessageTypeR\x04type\x12.\n" +
	"\apayload\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\apayload\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x96\x01\n" +
	"\vMessageType\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TYPE_NOTIFICATION\x10\x01\x12\x12\n" +
	"\x0eTYPE_HEARTBEAT\x10\x02\x12\f\n" +
	"\bTYPE_ACK\x10\x03\x12\x12\n" +
	"\x0eTYPE_SUBSCRIBE\x10\x04\x12\x14\n" +
	"\x10TYPE_UNSUBSCRIBE\x10\x05\x12\x0e\n" +
	"\n" +
	"TYPE_ERROR\x10\x06\"\xaa\x01\n" +
	"\x15WebSocketNotification\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12(\n" +
	"\x04data\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x04data\x12\x1f\n" +
	"\vrequire_ack\x18\x04 \x01(\bR\n" +
	"requireAck\"]\n" +
	"\fWebSocketAck\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"\xc2\x01\n" +
	"\x12WebSocketSubscribe\x12\x1f\n" +
	"\vevent_types\x18\x01 \x03(\tR\n" +
	"eventTypes\x12O\n" +
	"\afilters\x18\x02 \x03(\v25.notifier.v1.callback.WebSocketSubscribe.FiltersEntryR\afilters\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xea\x03\n" +
	"\x1bInternalServiceNotification\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12%\n" +
	"\x0esource_service\x18\x02 \x01(\tR\rsourceService\x12%\n" +
	"\x0etarget_service\x18\x03 \x01(\tR\rtargetService\x12\x1d\n" +
	"\n" +
	"event_type\x18\x04 \x01(\tR\teventType\x12.\n" +
	"\apayload\x18\x05 \x01(\v2\x14.google.protobuf.AnyR\apayload\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12X\n" +
	"\aheaders\x18\a \x03(\v2>.notifier.v1.callback.InternalServiceNotification.HeadersEntryR\aheaders\x12\x19\n" +
	"\btrace_id\x18\b \x01(\tR\atraceId\x12\x1a\n" +
	"\bpriority\x18\t \x01(\x05R\bpriority\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf7\x01\n" +
	" InternalServiceBatchNotification\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12W\n" +
	"\rnotifications\x18\x02 \x03(\v21.notifier.v1.callback.InternalServiceNotificationR\rnotifications\x12%\n" +
	"\x0esource_service\x18\x03 \x01(\tR\rsourceService\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\xab\x01\n" +
	"\x17InternalServiceResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"error_code\x18\x03 \x01(\tR\terrorCode\x12=\n" +
	"\fprocessed_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\"\xb2\x02\n" +
	"\x11RobotNotification\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x1d\n" +
	"\n" +
	"robot_type\x18\x02 \x01(\tR\trobotType\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x03 \x01(\tR\tchannelId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x04 \x01(\tR\teventType\x12<\n" +
	"\amessage\x18\x05 \x01(\v2\".notifier.v1.callback.RobotMessageR\amessage\x128\n" +
	"\ttimestamp\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1f\n" +
	"\vrequire_ack\x18\a \x01(\bR\n" +
	"requireAck\"\xf3\x05\n" +
	"\fRobotMessage\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12E\n" +
	"\x05level\x18\x03 \x01(\x0e2/.notifier.v1.callback.RobotMessage.MessageLevelR\x05level\x12O\n" +
	"\vattachments\x18\x04 \x03(\v2-.notifier.v1.callback.RobotMessage.AttachmentR\vattachments\x12C\n" +
	"\abuttons\x18\x05 \x03(\v2).notifier.v1.callback.RobotMessage.ButtonR\abuttons\x12L\n" +
	"\bmetadata\x18\x06 \x03(\v20.notifier.v1.callback.RobotMessage.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1aj\n" +
	"\n" +
	"Attachment\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x1ap\n" +
	"\x06Button\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12\x16\n" +
	"\x06action\x18\x03 \x01(\tR\x06action\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\x12\x14\n" +
	"\x05style\x18\x05 \x01(\tR\x05style\"m\n" +
	"\fMessageLevel\x12\x15\n" +
	"\x11LEVEL_UNSPECIFIED\x10\x00\x12\x0e\n" +
	"\n" +
	"LEVEL_INFO\x10\x01\x12\x11\n" +
	"\rLEVEL_WARNING\x10\x02\x12\x0f\n" +
	"\vLEVEL_ERROR\x10\x03\x12\x12\n" +
	"\x0eLEVEL_CRITICAL\x10\x04\"\x87\x02\n" +
	"\x18RobotInteractionCallback\x12\x1f\n" +
	"\vcallback_id\x18\x01 \x01(\tR\n" +
	"callbackId\x12'\n" +
	"\x0fnotification_id\x18\x02 \x01(\tR\x0enotificationId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1b\n" +
	"\tbutton_id\x18\x04 \x01(\tR\bbuttonId\x12\x16\n" +
	"\x06action\x18\x05 \x01(\tR\x06action\x12\x14\n" +
	"\x05value\x18\x06 \x01(\tR\x05value\x12=\n" +
	"\ftriggered_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vtriggeredAt\"\xa4\x02\n" +
	"\x16RobotBatchNotification\x12\x19\n" +
	"\bbatch_id\x18\x01 \x01(\tR\abatchId\x12\x1d\n" +
	"\n" +
	"robot_type\x18\x02 \x01(\tR\trobotType\x12\\\n" +
	"\bmessages\x18\x03 \x03(\v2@.notifier.v1.callback.RobotBatchNotification.RobotChannelMessageR\bmessages\x1ar\n" +
	"\x13RobotChannelMessage\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12<\n" +
	"\amessage\x18\x02 \x01(\v2\".notifier.v1.callback.RobotMessageR\amessage\"\xf2\x01\n" +
	"\x19StreamNotificationRequest\x12<\n" +
	"\x06header\x18\x01 \x01(\v2\".notifier.v1.callback.StreamHeaderH\x00R\x06header\x12N\n" +
	"\fnotification\x18\x02 \x01(\v2(.notifier.v1.callback.StreamNotificationH\x00R\fnotification\x12<\n" +
	"\x06footer\x18\x03 \x01(\v2\".notifier.v1.callback.StreamFooterH\x00R\x06footerB\t\n" +
	"\arequest\"\x92\x02\n" +
	"\fStreamHeader\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\tR\n" +
	"merchantId\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12L\n" +
	"\bmetadata\x18\x04 \x03(\v20.notifier.v1.callback.StreamHeader.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa2\x01\n" +
	"\x12StreamNotification\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x1d\n" +
	"\n" +
	"event_type\x18\x02 \x01(\tR\teventType\x12(\n" +
	"\x04data\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\x04data\x12\x1a\n" +
	"\bsequence\x18\x04 \x01(\x03R\bsequence\"f\n" +
	"\fStreamFooter\x12\x1f\n" +
	"\vtotal_count\x18\x01 \x01(\x03R\n" +
	"totalCount\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"\xbb\x01\n" +
	"\x1aStreamNotificationResponse\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12%\n" +
	"\x0ereceived_count\x18\x02 \x01(\x03R\rreceivedCount\x12!\n" +
	"\ffailed_count\x18\x03 \x01(\x03R\vfailedCount\x126\n" +
	"\x17failed_notification_ids\x18\x04 \x03(\tR\x15failedNotificationIds\"\xba\x02\n" +
	"\rStreamMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12N\n" +
	"\fnotification\x18\x02 \x01(\v2(.notifier.v1.callback.StreamNotificationH\x00R\fnotification\x123\n" +
	"\x03ack\x18\x03 \x01(\v2\x1f.notifier.v1.callback.StreamAckH\x00R\x03ack\x129\n" +
	"\x05error\x18\x04 \x01(\v2!.notifier.v1.callback.StreamErrorH\x00R\x05error\x12?\n" +
	"\acontrol\x18\x05 \x01(\v2#.notifier.v1.callback.StreamControlH\x00R\acontrolB\t\n" +
	"\acontent\"d\n" +
	"\tStreamAck\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error\"s\n" +
	"\vStreamError\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\tR\terrorCode\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12 \n" +
	"\vrecoverable\x18\x03 \x01(\bR\vrecoverable\"\xf8\x02\n" +
	"\rStreamControl\x12C\n" +
	"\x04type\x18\x01 \x01(\x0e2/.notifier.v1.callback.StreamControl.ControlTypeR\x04type\x12S\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v23.notifier.v1.callback.StreamControl.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8d\x01\n" +
	"\vControlType\x12\x17\n" +
	"\x13CONTROL_UNSPECIFIED\x10\x00\x12\x11\n" +
	"\rCONTROL_PAUSE\x10\x01\x12\x12\n" +
	"\x0eCONTROL_RESUME\x10\x02\x12\x15\n" +
	"\x11CONTROL_SLOW_DOWN\x10\x03\x12\x14\n" +
	"\x10CONTROL_SPEED_UP\x10\x04\x12\x11\n" +
	"\rCONTROL_RESET\x10\x05\"\x8c\x01\n" +
	"\x16VerifySignatureRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\tR\n" +
	"merchantId\x12Q\n" +
	"\fnotification\x18\x02 \x01(\v2-.notifier.v1.callback.NotificationPushRequestR\fnotification\"E\n" +
	"\x17VerifySignatureResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"5\n" +
	"\x12HealthCheckRequest\x12\x1f\n" +
	"\vmerchant_id\x18\x01 \x01(\tR\n" +
	"merchantId\"\x98\x02\n" +
	"\x13HealthCheckResponse\x12\x18\n" +
	"\ahealthy\x18\x01 \x01(\bR\ahealthy\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12;\n" +
	"\vserver_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"serverTime\x12S\n" +
	"\bfeatures\x18\x04 \x03(\v27.notifier.v1.callback.HealthCheckResponse.FeaturesEntryR\bfeatures\x1a;\n" +
	"\rFeaturesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01*\x94\x03\n" +
	"\tErrorCode\x12\x15\n" +
	"\x11ERROR_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x15ERROR_INVALID_REQUEST\x10\x90\x03\x12\x17\n" +
	"\x12ERROR_UNAUTHORIZED\x10\x91\x03\x12\x14\n" +
	"\x0fERROR_FORBIDDEN\x10\x93\x03\x12\x14\n" +
	"\x0fERROR_NOT_FOUND\x10\x94\x03\x12\x14\n" +
	"\x0fERROR_DUPLICATE\x10\x99\x03\x12\x17\n" +
	"\x12ERROR_RATE_LIMITED\x10\xad\x03\x12\x13\n" +
	"\x0eERROR_INTERNAL\x10\xf4\x03\x12\x1a\n" +
	"\x15ERROR_NOT_IMPLEMENTED\x10\xf5\x03\x12\x1e\n" +
	"\x19ERROR_SERVICE_UNAVAILABLE\x10\xf7\x03\x12\x12\n" +
	"\rERROR_TIMEOUT\x10\xf8\x03\x12\x1c\n" +
	"\x17ERROR_INVALID_SIGNATURE\x10\xd8\x04\x12\x12\n" +
	"\rERROR_EXPIRED\x10\xd9\x04\x12\x18\n" +
	"\x13ERROR_REPLAY_ATTACK\x10\xda\x04\x12\x19\n" +
	"\x14ERROR_QUOTA_EXCEEDED\x10\xdb\x04\x12\x14\n" +
	"\x0fERROR_SUSPENDED\x10\xdc\x042\xfe\x01\n" +
	"\x1bMerchantNotificationService\x12z\n" +
	"\x13StreamNotifications\x12/.notifier.v1.callback.StreamNotificationRequest\x1a0.notifier.v1.callback.StreamNotificationResponse(\x01\x12c\n" +
	"\x13BidirectionalStream\x12#.notifier.v1.callback.StreamMessage\x1a#.notifier.v1.callback.StreamMessage(\x010\x012\xfe\x02\n" +
	"\x1bInternalNotificationService\x12w\n" +
	"\x13ReceiveNotification\x121.notifier.v1.callback.InternalServiceNotification\x1a-.notifier.v1.callback.InternalServiceResponse\x12\x81\x01\n" +
	"\x18ReceiveBatchNotification\x126.notifier.v1.callback.InternalServiceBatchNotification\x1a-.notifier.v1.callback.InternalServiceResponse\x12b\n" +
	"\vHealthCheck\x12(.notifier.v1.callback.HealthCheckRequest\x1a).notifier.v1.callback.HealthCheckResponse2\xf0\x02\n" +
	"\x18RobotNotificationService\x12j\n" +
	"\x10SendRobotMessage\x12'.notifier.v1.callback.RobotNotification\x1a-.notifier.v1.callback.InternalServiceResponse\x12t\n" +
	"\x15SendBatchRobotMessage\x12,.notifier.v1.callback.RobotBatchNotification\x1a-.notifier.v1.callback.InternalServiceResponse\x12r\n" +
	"\x11HandleInteraction\x12..notifier.v1.callback.RobotInteractionCallback\x1a-.notifier.v1.callback.InternalServiceResponseBAZ?github.com/og-game/game-proto/proto-gen-go/notifier/v1/callbackb\x06proto3"

var (
	file_notifier_v1_callback_proto_rawDescOnce sync.Once
	file_notifier_v1_callback_proto_rawDescData []byte
)

func file_notifier_v1_callback_proto_rawDescGZIP() []byte {
	file_notifier_v1_callback_proto_rawDescOnce.Do(func() {
		file_notifier_v1_callback_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notifier_v1_callback_proto_rawDesc), len(file_notifier_v1_callback_proto_rawDesc)))
	})
	return file_notifier_v1_callback_proto_rawDescData
}

var file_notifier_v1_callback_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_notifier_v1_callback_proto_msgTypes = make([]protoimpl.MessageInfo, 44)
var file_notifier_v1_callback_proto_goTypes = []any{
	(ErrorCode)(0),                               // 0: notifier.v1.callback.ErrorCode
	(WebSocketMessage_MessageType)(0),            // 1: notifier.v1.callback.WebSocketMessage.MessageType
	(RobotMessage_MessageLevel)(0),               // 2: notifier.v1.callback.RobotMessage.MessageLevel
	(StreamControl_ControlType)(0),               // 3: notifier.v1.callback.StreamControl.ControlType
	(*NotificationPushRequest)(nil),              // 4: notifier.v1.callback.NotificationPushRequest
	(*NotificationHeader)(nil),                   // 5: notifier.v1.callback.NotificationHeader
	(*NotificationBody)(nil),                     // 6: notifier.v1.callback.NotificationBody
	(*AggregationInfo)(nil),                      // 7: notifier.v1.callback.AggregationInfo
	(*Signature)(nil),                            // 8: notifier.v1.callback.Signature
	(*NotificationPushResponse)(nil),             // 9: notifier.v1.callback.NotificationPushResponse
	(*HttpNotification)(nil),                     // 10: notifier.v1.callback.HttpNotification
	(*HttpNotificationResponse)(nil),             // 11: notifier.v1.callback.HttpNotificationResponse
	(*WebSocketMessage)(nil),                     // 12: notifier.v1.callback.WebSocketMessage
	(*WebSocketNotification)(nil),                // 13: notifier.v1.callback.WebSocketNotification
	(*WebSocketAck)(nil),                         // 14: notifier.v1.callback.WebSocketAck
	(*WebSocketSubscribe)(nil),                   // 15: notifier.v1.callback.WebSocketSubscribe
	(*InternalServiceNotification)(nil),          // 16: notifier.v1.callback.InternalServiceNotification
	(*InternalServiceBatchNotification)(nil),     // 17: notifier.v1.callback.InternalServiceBatchNotification
	(*InternalServiceResponse)(nil),              // 18: notifier.v1.callback.InternalServiceResponse
	(*RobotNotification)(nil),                    // 19: notifier.v1.callback.RobotNotification
	(*RobotMessage)(nil),                         // 20: notifier.v1.callback.RobotMessage
	(*RobotInteractionCallback)(nil),             // 21: notifier.v1.callback.RobotInteractionCallback
	(*RobotBatchNotification)(nil),               // 22: notifier.v1.callback.RobotBatchNotification
	(*StreamNotificationRequest)(nil),            // 23: notifier.v1.callback.StreamNotificationRequest
	(*StreamHeader)(nil),                         // 24: notifier.v1.callback.StreamHeader
	(*StreamNotification)(nil),                   // 25: notifier.v1.callback.StreamNotification
	(*StreamFooter)(nil),                         // 26: notifier.v1.callback.StreamFooter
	(*StreamNotificationResponse)(nil),           // 27: notifier.v1.callback.StreamNotificationResponse
	(*StreamMessage)(nil),                        // 28: notifier.v1.callback.StreamMessage
	(*StreamAck)(nil),                            // 29: notifier.v1.callback.StreamAck
	(*StreamError)(nil),                          // 30: notifier.v1.callback.StreamError
	(*StreamControl)(nil),                        // 31: notifier.v1.callback.StreamControl
	(*VerifySignatureRequest)(nil),               // 32: notifier.v1.callback.VerifySignatureRequest
	(*VerifySignatureResponse)(nil),              // 33: notifier.v1.callback.VerifySignatureResponse
	(*HealthCheckRequest)(nil),                   // 34: notifier.v1.callback.HealthCheckRequest
	(*HealthCheckResponse)(nil),                  // 35: notifier.v1.callback.HealthCheckResponse
	nil,                                          // 36: notifier.v1.callback.NotificationHeader.MetadataEntry
	(*HttpNotification_BatchItem)(nil),           // 37: notifier.v1.callback.HttpNotification.BatchItem
	(*HttpNotificationResponse_BatchResult)(nil), // 38: notifier.v1.callback.HttpNotificationResponse.BatchResult
	nil,                             // 39: notifier.v1.callback.WebSocketSubscribe.FiltersEntry
	nil,                             // 40: notifier.v1.callback.InternalServiceNotification.HeadersEntry
	nil,                             // 41: notifier.v1.callback.RobotMessage.MetadataEntry
	(*RobotMessage_Attachment)(nil), // 42: notifier.v1.callback.RobotMessage.Attachment
	(*RobotMessage_Button)(nil),     // 43: notifier.v1.callback.RobotMessage.Button
	(*RobotBatchNotification_RobotChannelMessage)(nil), // 44: notifier.v1.callback.RobotBatchNotification.RobotChannelMessage
	nil,                           // 45: notifier.v1.callback.StreamHeader.MetadataEntry
	nil,                           // 46: notifier.v1.callback.StreamControl.ParametersEntry
	nil,                           // 47: notifier.v1.callback.HealthCheckResponse.FeaturesEntry
	(*timestamppb.Timestamp)(nil), // 48: google.protobuf.Timestamp
	(*anypb.Any)(nil),             // 49: google.protobuf.Any
}
var file_notifier_v1_callback_proto_depIdxs = []int32{
	5,  // 0: notifier.v1.callback.NotificationPushRequest.header:type_name -> notifier.v1.callback.NotificationHeader
	6,  // 1: notifier.v1.callback.NotificationPushRequest.body:type_name -> notifier.v1.callback.NotificationBody
	8,  // 2: notifier.v1.callback.NotificationPushRequest.signature:type_name -> notifier.v1.callback.Signature
	48, // 3: notifier.v1.callback.NotificationHeader.timestamp:type_name -> google.protobuf.Timestamp
	36, // 4: notifier.v1.callback.NotificationHeader.metadata:type_name -> notifier.v1.callback.NotificationHeader.MetadataEntry
	48, // 5: notifier.v1.callback.NotificationBody.occurred_at:type_name -> google.protobuf.Timestamp
	49, // 6: notifier.v1.callback.NotificationBody.proto_data:type_name -> google.protobuf.Any
	7,  // 7: notifier.v1.callback.NotificationBody.aggregation:type_name -> notifier.v1.callback.AggregationInfo
	48, // 8: notifier.v1.callback.AggregationInfo.first_event_time:type_name -> google.protobuf.Timestamp
	48, // 9: notifier.v1.callback.AggregationInfo.last_event_time:type_name -> google.protobuf.Timestamp
	48, // 10: notifier.v1.callback.Signature.signed_at:type_name -> google.protobuf.Timestamp
	48, // 11: notifier.v1.callback.NotificationPushResponse.received_at:type_name -> google.protobuf.Timestamp
	37, // 12: notifier.v1.callback.HttpNotification.batch_items:type_name -> notifier.v1.callback.HttpNotification.BatchItem
	38, // 13: notifier.v1.callback.HttpNotificationResponse.batch_results:type_name -> notifier.v1.callback.HttpNotificationResponse.BatchResult
	1,  // 14: notifier.v1.callback.WebSocketMessage.type:type_name -> notifier.v1.callback.WebSocketMessage.MessageType
	49, // 15: notifier.v1.callback.WebSocketMessage.payload:type_name -> google.protobuf.Any
	48, // 16: notifier.v1.callback.WebSocketMessage.timestamp:type_name -> google.protobuf.Timestamp
	49, // 17: notifier.v1.callback.WebSocketNotification.data:type_name -> google.protobuf.Any
	39, // 18: notifier.v1.callback.WebSocketSubscribe.filters:type_name -> notifier.v1.callback.WebSocketSubscribe.FiltersEntry
	49, // 19: notifier.v1.callback.InternalServiceNotification.payload:type_name -> google.protobuf.Any
	48, // 20: notifier.v1.callback.InternalServiceNotification.timestamp:type_name -> google.protobuf.Timestamp
	40, // 21: notifier.v1.callback.InternalServiceNotification.headers:type_name -> notifier.v1.callback.InternalServiceNotification.HeadersEntry
	16, // 22: notifier.v1.callback.InternalServiceBatchNotification.notifications:type_name -> notifier.v1.callback.InternalServiceNotification
	48, // 23: notifier.v1.callback.InternalServiceBatchNotification.timestamp:type_name -> google.protobuf.Timestamp
	48, // 24: notifier.v1.callback.InternalServiceResponse.processed_at:type_name -> google.protobuf.Timestamp
	20, // 25: notifier.v1.callback.RobotNotification.message:type_name -> notifier.v1.callback.RobotMessage
	48, // 26: notifier.v1.callback.RobotNotification.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 27: notifier.v1.callback.RobotMessage.level:type_name -> notifier.v1.callback.RobotMessage.MessageLevel
	42, // 28: notifier.v1.callback.RobotMessage.attachments:type_name -> notifier.v1.callback.RobotMessage.Attachment
	43, // 29: notifier.v1.callback.RobotMessage.buttons:type_name -> notifier.v1.callback.RobotMessage.Button
	41, // 30: notifier.v1.callback.RobotMessage.metadata:type_name -> notifier.v1.callback.RobotMessage.MetadataEntry
	48, // 31: notifier.v1.callback.RobotInteractionCallback.triggered_at:type_name -> google.protobuf.Timestamp
	44, // 32: notifier.v1.callback.RobotBatchNotification.messages:type_name -> notifier.v1.callback.RobotBatchNotification.RobotChannelMessage
	24, // 33: notifier.v1.callback.StreamNotificationRequest.header:type_name -> notifier.v1.callback.StreamHeader
	25, // 34: notifier.v1.callback.StreamNotificationRequest.notification:type_name -> notifier.v1.callback.StreamNotification
	26, // 35: notifier.v1.callback.StreamNotificationRequest.footer:type_name -> notifier.v1.callback.StreamFooter
	48, // 36: notifier.v1.callback.StreamHeader.start_time:type_name -> google.protobuf.Timestamp
	45, // 37: notifier.v1.callback.StreamHeader.metadata:type_name -> notifier.v1.callback.StreamHeader.MetadataEntry
	49, // 38: notifier.v1.callback.StreamNotification.data:type_name -> google.protobuf.Any
	48, // 39: notifier.v1.callback.StreamFooter.end_time:type_name -> google.protobuf.Timestamp
	25, // 40: notifier.v1.callback.StreamMessage.notification:type_name -> notifier.v1.callback.StreamNotification
	29, // 41: notifier.v1.callback.StreamMessage.ack:type_name -> notifier.v1.callback.StreamAck
	30, // 42: notifier.v1.callback.StreamMessage.error:type_name -> notifier.v1.callback.StreamError
	31, // 43: notifier.v1.callback.StreamMessage.control:type_name -> notifier.v1.callback.StreamControl
	3,  // 44: notifier.v1.callback.StreamControl.type:type_name -> notifier.v1.callback.StreamControl.ControlType
	46, // 45: notifier.v1.callback.StreamControl.parameters:type_name -> notifier.v1.callback.StreamControl.ParametersEntry
	4,  // 46: notifier.v1.callback.VerifySignatureRequest.notification:type_name -> notifier.v1.callback.NotificationPushRequest
	48, // 47: notifier.v1.callback.HealthCheckResponse.server_time:type_name -> google.protobuf.Timestamp
	47, // 48: notifier.v1.callback.HealthCheckResponse.features:type_name -> notifier.v1.callback.HealthCheckResponse.FeaturesEntry
	20, // 49: notifier.v1.callback.RobotBatchNotification.RobotChannelMessage.message:type_name -> notifier.v1.callback.RobotMessage
	23, // 50: notifier.v1.callback.MerchantNotificationService.StreamNotifications:input_type -> notifier.v1.callback.StreamNotificationRequest
	28, // 51: notifier.v1.callback.MerchantNotificationService.BidirectionalStream:input_type -> notifier.v1.callback.StreamMessage
	16, // 52: notifier.v1.callback.InternalNotificationService.ReceiveNotification:input_type -> notifier.v1.callback.InternalServiceNotification
	17, // 53: notifier.v1.callback.InternalNotificationService.ReceiveBatchNotification:input_type -> notifier.v1.callback.InternalServiceBatchNotification
	34, // 54: notifier.v1.callback.InternalNotificationService.HealthCheck:input_type -> notifier.v1.callback.HealthCheckRequest
	19, // 55: notifier.v1.callback.RobotNotificationService.SendRobotMessage:input_type -> notifier.v1.callback.RobotNotification
	22, // 56: notifier.v1.callback.RobotNotificationService.SendBatchRobotMessage:input_type -> notifier.v1.callback.RobotBatchNotification
	21, // 57: notifier.v1.callback.RobotNotificationService.HandleInteraction:input_type -> notifier.v1.callback.RobotInteractionCallback
	27, // 58: notifier.v1.callback.MerchantNotificationService.StreamNotifications:output_type -> notifier.v1.callback.StreamNotificationResponse
	28, // 59: notifier.v1.callback.MerchantNotificationService.BidirectionalStream:output_type -> notifier.v1.callback.StreamMessage
	18, // 60: notifier.v1.callback.InternalNotificationService.ReceiveNotification:output_type -> notifier.v1.callback.InternalServiceResponse
	18, // 61: notifier.v1.callback.InternalNotificationService.ReceiveBatchNotification:output_type -> notifier.v1.callback.InternalServiceResponse
	35, // 62: notifier.v1.callback.InternalNotificationService.HealthCheck:output_type -> notifier.v1.callback.HealthCheckResponse
	18, // 63: notifier.v1.callback.RobotNotificationService.SendRobotMessage:output_type -> notifier.v1.callback.InternalServiceResponse
	18, // 64: notifier.v1.callback.RobotNotificationService.SendBatchRobotMessage:output_type -> notifier.v1.callback.InternalServiceResponse
	18, // 65: notifier.v1.callback.RobotNotificationService.HandleInteraction:output_type -> notifier.v1.callback.InternalServiceResponse
	58, // [58:66] is the sub-list for method output_type
	50, // [50:58] is the sub-list for method input_type
	50, // [50:50] is the sub-list for extension type_name
	50, // [50:50] is the sub-list for extension extendee
	0,  // [0:50] is the sub-list for field type_name
}

func init() { file_notifier_v1_callback_proto_init() }
func file_notifier_v1_callback_proto_init() {
	if File_notifier_v1_callback_proto != nil {
		return
	}
	file_notifier_v1_callback_proto_msgTypes[2].OneofWrappers = []any{
		(*NotificationBody_JsonData)(nil),
		(*NotificationBody_ProtoData)(nil),
	}
	file_notifier_v1_callback_proto_msgTypes[19].OneofWrappers = []any{
		(*StreamNotificationRequest_Header)(nil),
		(*StreamNotificationRequest_Notification)(nil),
		(*StreamNotificationRequest_Footer)(nil),
	}
	file_notifier_v1_callback_proto_msgTypes[24].OneofWrappers = []any{
		(*StreamMessage_Notification)(nil),
		(*StreamMessage_Ack)(nil),
		(*StreamMessage_Error)(nil),
		(*StreamMessage_Control)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notifier_v1_callback_proto_rawDesc), len(file_notifier_v1_callback_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   44,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_notifier_v1_callback_proto_goTypes,
		DependencyIndexes: file_notifier_v1_callback_proto_depIdxs,
		EnumInfos:         file_notifier_v1_callback_proto_enumTypes,
		MessageInfos:      file_notifier_v1_callback_proto_msgTypes,
	}.Build()
	File_notifier_v1_callback_proto = out.File
	file_notifier_v1_callback_proto_goTypes = nil
	file_notifier_v1_callback_proto_depIdxs = nil
}
