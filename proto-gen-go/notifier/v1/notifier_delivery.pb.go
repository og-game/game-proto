// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: notifier/v1/notifier_delivery.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 推送载荷 - 所有推送的基础结构
type NotificationPayload struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Header *Header                `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"` // 推送头
	Body   *Body                  `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`     // 推送内容
	// 批量支持
	BatchBody []*Body `protobuf:"bytes,3,rep,name=batch_body,json=batchBody,proto3" json:"batch_body,omitempty"` // 批量事件（可选）
	// 安全信息
	Nonce         int64   `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`              // 防重放随机数
	Signature     *string `protobuf:"bytes,4,opt,name=signature,proto3,oneof" json:"signature,omitempty"` // 签名【可选】
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationPayload) Reset() {
	*x = NotificationPayload{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationPayload) ProtoMessage() {}

func (x *NotificationPayload) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationPayload.ProtoReflect.Descriptor instead.
func (*NotificationPayload) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{0}
}

func (x *NotificationPayload) GetHeader() *Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *NotificationPayload) GetBody() *Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NotificationPayload) GetBatchBody() []*Body {
	if x != nil {
		return x.BatchBody
	}
	return nil
}

func (x *NotificationPayload) GetNonce() int64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *NotificationPayload) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

// 推送头
type Header struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"` // 推送唯一ID
	MerchantId     int64                  `protobuf:"varint,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`            // 商户ID
	Channel        PushChannel            `protobuf:"varint,3,opt,name=channel,proto3,enum=notifier.v1.PushChannel" json:"channel,omitempty"`       // 推送通道
	RetryCount     int32                  `protobuf:"varint,4,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`            // 重试次数
	PushedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=pushed_at,json=pushedAt,proto3" json:"pushed_at,omitempty"`                   // 推送时间
	Version        string                 `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`                                     // API版本
	EventNumber    int32                  `protobuf:"varint,7,opt,name=event_number,json=eventNumber,proto3" json:"event_number,omitempty"`         // 事件数量
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{1}
}

func (x *Header) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *Header) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *Header) GetChannel() PushChannel {
	if x != nil {
		return x.Channel
	}
	return PushChannel_CHANNEL_UNSPECIFIED
}

func (x *Header) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *Header) GetPushedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PushedAt
	}
	return nil
}

func (x *Header) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Header) GetEventNumber() int32 {
	if x != nil {
		return x.EventNumber
	}
	return 0
}

// 事件包装器 - 所有事件的统一容器
type Body struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 事件标识
	EventId   string               `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`                                   // 事件唯一ID
	Category  NotificationCategory `protobuf:"varint,2,opt,name=category,proto3,enum=notifier.v1.NotificationCategory" json:"category,omitempty"`         // 通知大类
	EventType EventType            `protobuf:"varint,3,opt,name=event_type,json=eventType,proto3,enum=notifier.v1.EventType" json:"event_type,omitempty"` // 事件小类（具体类型）
	// 时间信息
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 事件发生时间
	// 幂等和追踪
	IdempotencyKey string `protobuf:"bytes,8,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"` // 幂等键
	TraceId        string `protobuf:"bytes,9,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                      // 链路追踪ID
	// 实际的推送数据
	Data *anypb.Any `protobuf:"bytes,10,opt,name=data,proto3" json:"data,omitempty"` // 推送的具体数据
	// 元数据
	Metadata      map[string]string `protobuf:"bytes,101,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Body) Reset() {
	*x = Body{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Body) ProtoMessage() {}

func (x *Body) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Body.ProtoReflect.Descriptor instead.
func (*Body) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{2}
}

func (x *Body) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *Body) GetCategory() NotificationCategory {
	if x != nil {
		return x.Category
	}
	return NotificationCategory_CATEGORY_UNSPECIFIED
}

func (x *Body) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

func (x *Body) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Body) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *Body) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Body) GetData() *anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Body) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 通用推送响应
type NotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                           // 是否成功
	ErrorMsg      string                 `protobuf:"bytes,2,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`          // 错误信息【错误的时候有值】
	ReferenceId   string                 `protobuf:"bytes,3,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"` // 商户引用ID
	ReceivedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	BatchResults  []*BatchResult         `protobuf:"bytes,5,rep,name=batch_results,json=batchResults,proto3" json:"batch_results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationResponse) Reset() {
	*x = NotificationResponse{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponse) ProtoMessage() {}

func (x *NotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponse.ProtoReflect.Descriptor instead.
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{3}
}

func (x *NotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NotificationResponse) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *NotificationResponse) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *NotificationResponse) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

func (x *NotificationResponse) GetBatchResults() []*BatchResult {
	if x != nil {
		return x.BatchResults
	}
	return nil
}

// 批量响应
type BatchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMsg      string                 `protobuf:"bytes,3,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`          // 错误信息【错误的时候有值】
	ReferenceId   string                 `protobuf:"bytes,4,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"` // 商户引用ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchResult) Reset() {
	*x = BatchResult{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchResult) ProtoMessage() {}

func (x *BatchResult) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchResult.ProtoReflect.Descriptor instead.
func (*BatchResult) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{4}
}

func (x *BatchResult) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *BatchResult) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *BatchResult) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *BatchResult) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

// HTTP推送请求（将序列化为JSON）
type HttpNotificationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Payload        *NotificationPayload   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`                                            // 核心载荷
	TimeoutSeconds *int32                 `protobuf:"varint,2,opt,name=timeout_seconds,json=timeoutSeconds,proto3,oneof" json:"timeout_seconds,omitempty"` // 超时时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *HttpNotificationRequest) Reset() {
	*x = HttpNotificationRequest{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpNotificationRequest) ProtoMessage() {}

func (x *HttpNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpNotificationRequest.ProtoReflect.Descriptor instead.
func (*HttpNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{5}
}

func (x *HttpNotificationRequest) GetPayload() *NotificationPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *HttpNotificationRequest) GetTimeoutSeconds() int32 {
	if x != nil && x.TimeoutSeconds != nil {
		return *x.TimeoutSeconds
	}
	return 0
}

// HTTP推送响应（商户返回）
type HttpNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *NotificationResponse  `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"` // 使用通用响应
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpNotificationResponse) Reset() {
	*x = HttpNotificationResponse{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpNotificationResponse) ProtoMessage() {}

func (x *HttpNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpNotificationResponse.ProtoReflect.Descriptor instead.
func (*HttpNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{6}
}

func (x *HttpNotificationResponse) GetResponse() *NotificationResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// WebSocket消息帧
type WebSocketFrame struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	FrameId  string                 `protobuf:"bytes,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"`
	Type     WebSocketFrameType     `protobuf:"varint,2,opt,name=type,proto3,enum=notifier.v1.WebSocketFrameType" json:"type,omitempty"` // 使用枚举
	Sequence int64                  `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`                             // 序列号
	// 消息内容
	//
	// Types that are valid to be assigned to Content:
	//
	//	*WebSocketFrame_Notification
	//	*WebSocketFrame_Heartbeat
	//	*WebSocketFrame_Ack
	//	*WebSocketFrame_Error
	//	*WebSocketFrame_Control
	Content       isWebSocketFrame_Content `protobuf_oneof:"content"`
	Timestamp     *timestamppb.Timestamp   `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketFrame) Reset() {
	*x = WebSocketFrame{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketFrame) ProtoMessage() {}

func (x *WebSocketFrame) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketFrame.ProtoReflect.Descriptor instead.
func (*WebSocketFrame) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{7}
}

func (x *WebSocketFrame) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *WebSocketFrame) GetType() WebSocketFrameType {
	if x != nil {
		return x.Type
	}
	return WebSocketFrameType_WS_FRAME_UNSPECIFIED
}

func (x *WebSocketFrame) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *WebSocketFrame) GetContent() isWebSocketFrame_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *WebSocketFrame) GetNotification() *NotificationPayload {
	if x != nil {
		if x, ok := x.Content.(*WebSocketFrame_Notification); ok {
			return x.Notification
		}
	}
	return nil
}

func (x *WebSocketFrame) GetHeartbeat() *WebSocketHeartbeat {
	if x != nil {
		if x, ok := x.Content.(*WebSocketFrame_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *WebSocketFrame) GetAck() *WebSocketAck {
	if x != nil {
		if x, ok := x.Content.(*WebSocketFrame_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *WebSocketFrame) GetError() *WebSocketError {
	if x != nil {
		if x, ok := x.Content.(*WebSocketFrame_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *WebSocketFrame) GetControl() *WebSocketControl {
	if x != nil {
		if x, ok := x.Content.(*WebSocketFrame_Control); ok {
			return x.Control
		}
	}
	return nil
}

func (x *WebSocketFrame) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type isWebSocketFrame_Content interface {
	isWebSocketFrame_Content()
}

type WebSocketFrame_Notification struct {
	Notification *NotificationPayload `protobuf:"bytes,4,opt,name=notification,proto3,oneof"` // 通知载荷
}

type WebSocketFrame_Heartbeat struct {
	Heartbeat *WebSocketHeartbeat `protobuf:"bytes,5,opt,name=heartbeat,proto3,oneof"` // 心跳
}

type WebSocketFrame_Ack struct {
	Ack *WebSocketAck `protobuf:"bytes,6,opt,name=ack,proto3,oneof"` // 确认
}

type WebSocketFrame_Error struct {
	Error *WebSocketError `protobuf:"bytes,7,opt,name=error,proto3,oneof"` // 错误
}

type WebSocketFrame_Control struct {
	Control *WebSocketControl `protobuf:"bytes,8,opt,name=control,proto3,oneof"` // 控制
}

func (*WebSocketFrame_Notification) isWebSocketFrame_Content() {}

func (*WebSocketFrame_Heartbeat) isWebSocketFrame_Content() {}

func (*WebSocketFrame_Ack) isWebSocketFrame_Content() {}

func (*WebSocketFrame_Error) isWebSocketFrame_Content() {}

func (*WebSocketFrame_Control) isWebSocketFrame_Content() {}

// WebSocket心跳
type WebSocketHeartbeat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sequence      int64                  `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	TimestampMs   int64                  `protobuf:"varint,2,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketHeartbeat) Reset() {
	*x = WebSocketHeartbeat{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketHeartbeat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketHeartbeat) ProtoMessage() {}

func (x *WebSocketHeartbeat) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketHeartbeat.ProtoReflect.Descriptor instead.
func (*WebSocketHeartbeat) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{8}
}

func (x *WebSocketHeartbeat) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *WebSocketHeartbeat) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

// WebSocket确认
type WebSocketAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FrameId       string                 `protobuf:"bytes,1,opt,name=frame_id,json=frameId,proto3" json:"frame_id,omitempty"` // 确认的帧ID
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketAck) Reset() {
	*x = WebSocketAck{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketAck) ProtoMessage() {}

func (x *WebSocketAck) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketAck.ProtoReflect.Descriptor instead.
func (*WebSocketAck) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{9}
}

func (x *WebSocketAck) GetFrameId() string {
	if x != nil {
		return x.FrameId
	}
	return ""
}

func (x *WebSocketAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WebSocketAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// WebSocket错误
type WebSocketError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Recoverable   bool                   `protobuf:"varint,3,opt,name=recoverable,proto3" json:"recoverable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketError) Reset() {
	*x = WebSocketError{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketError) ProtoMessage() {}

func (x *WebSocketError) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketError.ProtoReflect.Descriptor instead.
func (*WebSocketError) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{10}
}

func (x *WebSocketError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *WebSocketError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *WebSocketError) GetRecoverable() bool {
	if x != nil {
		return x.Recoverable
	}
	return false
}

// WebSocket控制
type WebSocketControl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        StreamAction           `protobuf:"varint,1,opt,name=action,proto3,enum=notifier.v1.StreamAction" json:"action,omitempty"` // 使用枚举
	Parameters    map[string]string      `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WebSocketControl) Reset() {
	*x = WebSocketControl{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WebSocketControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebSocketControl) ProtoMessage() {}

func (x *WebSocketControl) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebSocketControl.ProtoReflect.Descriptor instead.
func (*WebSocketControl) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{11}
}

func (x *WebSocketControl) GetAction() StreamAction {
	if x != nil {
		return x.Action
	}
	return StreamAction_STREAM_ACTION_UNSPECIFIED
}

func (x *WebSocketControl) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// gRPC流式请求
type StreamNotificationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*StreamNotificationRequest_Header
	//	*StreamNotificationRequest_Notification
	//	*StreamNotificationRequest_Control
	//	*StreamNotificationRequest_Footer
	Content       isStreamNotificationRequest_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamNotificationRequest) Reset() {
	*x = StreamNotificationRequest{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamNotificationRequest) ProtoMessage() {}

func (x *StreamNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamNotificationRequest.ProtoReflect.Descriptor instead.
func (*StreamNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{12}
}

func (x *StreamNotificationRequest) GetContent() isStreamNotificationRequest_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *StreamNotificationRequest) GetHeader() *StreamHeader {
	if x != nil {
		if x, ok := x.Content.(*StreamNotificationRequest_Header); ok {
			return x.Header
		}
	}
	return nil
}

func (x *StreamNotificationRequest) GetNotification() *NotificationPayload {
	if x != nil {
		if x, ok := x.Content.(*StreamNotificationRequest_Notification); ok {
			return x.Notification
		}
	}
	return nil
}

func (x *StreamNotificationRequest) GetControl() *StreamControl {
	if x != nil {
		if x, ok := x.Content.(*StreamNotificationRequest_Control); ok {
			return x.Control
		}
	}
	return nil
}

func (x *StreamNotificationRequest) GetFooter() *StreamFooter {
	if x != nil {
		if x, ok := x.Content.(*StreamNotificationRequest_Footer); ok {
			return x.Footer
		}
	}
	return nil
}

type isStreamNotificationRequest_Content interface {
	isStreamNotificationRequest_Content()
}

type StreamNotificationRequest_Header struct {
	Header *StreamHeader `protobuf:"bytes,1,opt,name=header,proto3,oneof"` // 流开始
}

type StreamNotificationRequest_Notification struct {
	Notification *NotificationPayload `protobuf:"bytes,2,opt,name=notification,proto3,oneof"` // 通知载荷
}

type StreamNotificationRequest_Control struct {
	Control *StreamControl `protobuf:"bytes,3,opt,name=control,proto3,oneof"` // 流控制
}

type StreamNotificationRequest_Footer struct {
	Footer *StreamFooter `protobuf:"bytes,4,opt,name=footer,proto3,oneof"` // 流结束
}

func (*StreamNotificationRequest_Header) isStreamNotificationRequest_Content() {}

func (*StreamNotificationRequest_Notification) isStreamNotificationRequest_Content() {}

func (*StreamNotificationRequest_Control) isStreamNotificationRequest_Content() {}

func (*StreamNotificationRequest_Footer) isStreamNotificationRequest_Content() {}

// 流头信息
type StreamHeader struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	MerchantId    int64                  `protobuf:"varint,2,opt,name=merchant_id,json=merchantId,proto3" json:"merchant_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamHeader) Reset() {
	*x = StreamHeader{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamHeader) ProtoMessage() {}

func (x *StreamHeader) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamHeader.ProtoReflect.Descriptor instead.
func (*StreamHeader) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{13}
}

func (x *StreamHeader) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamHeader) GetMerchantId() int64 {
	if x != nil {
		return x.MerchantId
	}
	return 0
}

func (x *StreamHeader) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *StreamHeader) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// 流控制
type StreamControl struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        StreamAction           `protobuf:"varint,1,opt,name=action,proto3,enum=notifier.v1.StreamAction" json:"action,omitempty"` // 使用枚举
	Parameters    map[string]string      `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamControl) Reset() {
	*x = StreamControl{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamControl) ProtoMessage() {}

func (x *StreamControl) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamControl.ProtoReflect.Descriptor instead.
func (*StreamControl) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{14}
}

func (x *StreamControl) GetAction() StreamAction {
	if x != nil {
		return x.Action
	}
	return StreamAction_STREAM_ACTION_UNSPECIFIED
}

func (x *StreamControl) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

// 流尾信息
type StreamFooter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TotalCount    int64                  `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	SuccessCount  int64                  `protobuf:"varint,2,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	FailedCount   int64                  `protobuf:"varint,3,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamFooter) Reset() {
	*x = StreamFooter{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamFooter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamFooter) ProtoMessage() {}

func (x *StreamFooter) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamFooter.ProtoReflect.Descriptor instead.
func (*StreamFooter) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{15}
}

func (x *StreamFooter) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *StreamFooter) GetSuccessCount() int64 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *StreamFooter) GetFailedCount() int64 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *StreamFooter) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

// gRPC流式响应
type StreamNotificationResponse struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	StreamId string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	// Types that are valid to be assigned to Content:
	//
	//	*StreamNotificationResponse_Ack
	//	*StreamNotificationResponse_Error
	//	*StreamNotificationResponse_Status
	Content       isStreamNotificationResponse_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamNotificationResponse) Reset() {
	*x = StreamNotificationResponse{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamNotificationResponse) ProtoMessage() {}

func (x *StreamNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamNotificationResponse.ProtoReflect.Descriptor instead.
func (*StreamNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{16}
}

func (x *StreamNotificationResponse) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamNotificationResponse) GetContent() isStreamNotificationResponse_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *StreamNotificationResponse) GetAck() *StreamAck {
	if x != nil {
		if x, ok := x.Content.(*StreamNotificationResponse_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *StreamNotificationResponse) GetError() *StreamError {
	if x != nil {
		if x, ok := x.Content.(*StreamNotificationResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

func (x *StreamNotificationResponse) GetStatus() *StreamStatus {
	if x != nil {
		if x, ok := x.Content.(*StreamNotificationResponse_Status); ok {
			return x.Status
		}
	}
	return nil
}

type isStreamNotificationResponse_Content interface {
	isStreamNotificationResponse_Content()
}

type StreamNotificationResponse_Ack struct {
	Ack *StreamAck `protobuf:"bytes,2,opt,name=ack,proto3,oneof"` // 确认
}

type StreamNotificationResponse_Error struct {
	Error *StreamError `protobuf:"bytes,3,opt,name=error,proto3,oneof"` // 错误
}

type StreamNotificationResponse_Status struct {
	Status *StreamStatus `protobuf:"bytes,4,opt,name=status,proto3,oneof"` // 状态
}

func (*StreamNotificationResponse_Ack) isStreamNotificationResponse_Content() {}

func (*StreamNotificationResponse_Error) isStreamNotificationResponse_Content() {}

func (*StreamNotificationResponse_Status) isStreamNotificationResponse_Content() {}

// 流确认
type StreamAck struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	Success        bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Message        string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamAck) Reset() {
	*x = StreamAck{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAck) ProtoMessage() {}

func (x *StreamAck) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAck.ProtoReflect.Descriptor instead.
func (*StreamAck) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{17}
}

func (x *StreamAck) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *StreamAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StreamAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 流错误
type StreamError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Recoverable   bool                   `protobuf:"varint,3,opt,name=recoverable,proto3" json:"recoverable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamError) Reset() {
	*x = StreamError{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamError) ProtoMessage() {}

func (x *StreamError) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamError.ProtoReflect.Descriptor instead.
func (*StreamError) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{18}
}

func (x *StreamError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *StreamError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StreamError) GetRecoverable() bool {
	if x != nil {
		return x.Recoverable
	}
	return false
}

// 流状态
type StreamStatus struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ReceivedCount  int64                  `protobuf:"varint,1,opt,name=received_count,json=receivedCount,proto3" json:"received_count,omitempty"`
	ProcessedCount int64                  `protobuf:"varint,2,opt,name=processed_count,json=processedCount,proto3" json:"processed_count,omitempty"`
	FailedCount    int64                  `protobuf:"varint,3,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamStatus) Reset() {
	*x = StreamStatus{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamStatus) ProtoMessage() {}

func (x *StreamStatus) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamStatus.ProtoReflect.Descriptor instead.
func (*StreamStatus) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{19}
}

func (x *StreamStatus) GetReceivedCount() int64 {
	if x != nil {
		return x.ReceivedCount
	}
	return 0
}

func (x *StreamStatus) GetProcessedCount() int64 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *StreamStatus) GetFailedCount() int64 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

// 机器人推送消息
type RobotNotification struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Payload *NotificationPayload   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"` // 核心载荷
	// 机器人特定配置
	RobotType RobotType `protobuf:"varint,2,opt,name=robot_type,json=robotType,proto3,enum=notifier.v1.RobotType" json:"robot_type,omitempty"` // 使用枚举
	ChannelId string    `protobuf:"bytes,3,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`                             // 频道/群组ID
	// 消息格式化
	Message       *RobotMessage `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotNotification) Reset() {
	*x = RobotNotification{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotNotification) ProtoMessage() {}

func (x *RobotNotification) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotNotification.ProtoReflect.Descriptor instead.
func (*RobotNotification) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{20}
}

func (x *RobotNotification) GetPayload() *NotificationPayload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RobotNotification) GetRobotType() RobotType {
	if x != nil {
		return x.RobotType
	}
	return RobotType_ROBOT_TYPE_UNSPECIFIED
}

func (x *RobotNotification) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *RobotNotification) GetMessage() *RobotMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

// 机器人消息内容
type RobotMessage struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Title    string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Content  string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`                                          // Markdown格式
	Priority NotificationPriority   `protobuf:"varint,3,opt,name=priority,proto3,enum=notifier.v1.NotificationPriority" json:"priority,omitempty"` // 使用枚举
	// 交互元素
	Buttons     []*RobotButton     `protobuf:"bytes,4,rep,name=buttons,proto3" json:"buttons,omitempty"`
	Attachments []*RobotAttachment `protobuf:"bytes,5,rep,name=attachments,proto3" json:"attachments,omitempty"`
	// 显示选项
	MentionAll    bool     `protobuf:"varint,6,opt,name=mention_all,json=mentionAll,proto3" json:"mention_all,omitempty"`      // @所有人
	MentionUsers  []string `protobuf:"bytes,7,rep,name=mention_users,json=mentionUsers,proto3" json:"mention_users,omitempty"` // @特定用户
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotMessage) Reset() {
	*x = RobotMessage{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotMessage) ProtoMessage() {}

func (x *RobotMessage) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotMessage.ProtoReflect.Descriptor instead.
func (*RobotMessage) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{21}
}

func (x *RobotMessage) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RobotMessage) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *RobotMessage) GetPriority() NotificationPriority {
	if x != nil {
		return x.Priority
	}
	return NotificationPriority_PRIORITY_UNSPECIFIED
}

func (x *RobotMessage) GetButtons() []*RobotButton {
	if x != nil {
		return x.Buttons
	}
	return nil
}

func (x *RobotMessage) GetAttachments() []*RobotAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *RobotMessage) GetMentionAll() bool {
	if x != nil {
		return x.MentionAll
	}
	return false
}

func (x *RobotMessage) GetMentionUsers() []string {
	if x != nil {
		return x.MentionUsers
	}
	return nil
}

// 机器人附件
type RobotAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          AttachmentType         `protobuf:"varint,1,opt,name=type,proto3,enum=notifier.v1.AttachmentType" json:"type,omitempty"` // 使用枚举
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotAttachment) Reset() {
	*x = RobotAttachment{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotAttachment) ProtoMessage() {}

func (x *RobotAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotAttachment.ProtoReflect.Descriptor instead.
func (*RobotAttachment) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{22}
}

func (x *RobotAttachment) GetType() AttachmentType {
	if x != nil {
		return x.Type
	}
	return AttachmentType_ATTACHMENT_TYPE_UNSPECIFIED
}

func (x *RobotAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RobotAttachment) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *RobotAttachment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 机器人交互回调
type RobotCallback struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	ButtonId       string                 `protobuf:"bytes,2,opt,name=button_id,json=buttonId,proto3" json:"button_id,omitempty"`
	UserId         string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Action         ButtonAction           `protobuf:"varint,4,opt,name=action,proto3,enum=notifier.v1.ButtonAction" json:"action,omitempty"` // 使用枚举
	Value          string                 `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	TriggeredAt    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=triggered_at,json=triggeredAt,proto3" json:"triggered_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RobotCallback) Reset() {
	*x = RobotCallback{}
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotCallback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotCallback) ProtoMessage() {}

func (x *RobotCallback) ProtoReflect() protoreflect.Message {
	mi := &file_notifier_v1_notifier_delivery_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotCallback.ProtoReflect.Descriptor instead.
func (*RobotCallback) Descriptor() ([]byte, []int) {
	return file_notifier_v1_notifier_delivery_proto_rawDescGZIP(), []int{23}
}

func (x *RobotCallback) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *RobotCallback) GetButtonId() string {
	if x != nil {
		return x.ButtonId
	}
	return ""
}

func (x *RobotCallback) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RobotCallback) GetAction() ButtonAction {
	if x != nil {
		return x.Action
	}
	return ButtonAction_BUTTON_ACTION_UNSPECIFIED
}

func (x *RobotCallback) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *RobotCallback) GetTriggeredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.TriggeredAt
	}
	return nil
}

var File_notifier_v1_notifier_delivery_proto protoreflect.FileDescriptor

const file_notifier_v1_notifier_delivery_proto_rawDesc = "" +
	"\n" +
	"#notifier/v1/notifier_delivery.proto\x12\vnotifier.v1\x1a\x19google/protobuf/any.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a notifier/v1/notifier_types.proto\"\xe2\x01\n" +
	"\x13NotificationPayload\x12+\n" +
	"\x06header\x18\x01 \x01(\v2\x13.notifier.v1.HeaderR\x06header\x12%\n" +
	"\x04body\x18\x02 \x01(\v2\x11.notifier.v1.BodyR\x04body\x120\n" +
	"\n" +
	"batch_body\x18\x03 \x03(\v2\x11.notifier.v1.BodyR\tbatchBody\x12\x14\n" +
	"\x05nonce\x18\x05 \x01(\x03R\x05nonce\x12!\n" +
	"\tsignature\x18\x04 \x01(\tH\x00R\tsignature\x88\x01\x01B\f\n" +
	"\n" +
	"_signature\"\x9d\x02\n" +
	"\x06Header\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\x03R\n" +
	"merchantId\x122\n" +
	"\achannel\x18\x03 \x01(\x0e2\x18.notifier.v1.PushChannelR\achannel\x12\x1f\n" +
	"\vretry_count\x18\x04 \x01(\x05R\n" +
	"retryCount\x127\n" +
	"\tpushed_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\bpushedAt\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\x12!\n" +
	"\fevent_number\x18\a \x01(\x05R\veventNumber\"\xb9\x03\n" +
	"\x04Body\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12=\n" +
	"\bcategory\x18\x02 \x01(\x0e2!.notifier.v1.NotificationCategoryR\bcategory\x125\n" +
	"\n" +
	"event_type\x18\x03 \x01(\x0e2\x16.notifier.v1.EventTypeR\teventType\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12'\n" +
	"\x0fidempotency_key\x18\b \x01(\tR\x0eidempotencyKey\x12\x19\n" +
	"\btrace_id\x18\t \x01(\tR\atraceId\x12(\n" +
	"\x04data\x18\n" +
	" \x01(\v2\x14.google.protobuf.AnyR\x04data\x12;\n" +
	"\bmetadata\x18e \x03(\v2\x1f.notifier.v1.Body.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xec\x01\n" +
	"\x14NotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1b\n" +
	"\terror_msg\x18\x02 \x01(\tR\berrorMsg\x12!\n" +
	"\freference_id\x18\x03 \x01(\tR\vreferenceId\x12;\n" +
	"\vreceived_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"receivedAt\x12=\n" +
	"\rbatch_results\x18\x05 \x03(\v2\x18.notifier.v1.BatchResultR\fbatchResults\"\x82\x01\n" +
	"\vBatchResult\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x1b\n" +
	"\terror_msg\x18\x03 \x01(\tR\berrorMsg\x12!\n" +
	"\freference_id\x18\x04 \x01(\tR\vreferenceId\"\x97\x01\n" +
	"\x17HttpNotificationRequest\x12:\n" +
	"\apayload\x18\x01 \x01(\v2 .notifier.v1.NotificationPayloadR\apayload\x12,\n" +
	"\x0ftimeout_seconds\x18\x02 \x01(\x05H\x00R\x0etimeoutSeconds\x88\x01\x01B\x12\n" +
	"\x10_timeout_seconds\"Y\n" +
	"\x18HttpNotificationResponse\x12=\n" +
	"\bresponse\x18\x01 \x01(\v2!.notifier.v1.NotificationResponseR\bresponse\"\xe9\x03\n" +
	"\x0eWebSocketFrame\x12\x19\n" +
	"\bframe_id\x18\x01 \x01(\tR\aframeId\x123\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1f.notifier.v1.WebSocketFrameTypeR\x04type\x12\x1a\n" +
	"\bsequence\x18\x03 \x01(\x03R\bsequence\x12F\n" +
	"\fnotification\x18\x04 \x01(\v2 .notifier.v1.NotificationPayloadH\x00R\fnotification\x12?\n" +
	"\theartbeat\x18\x05 \x01(\v2\x1f.notifier.v1.WebSocketHeartbeatH\x00R\theartbeat\x12-\n" +
	"\x03ack\x18\x06 \x01(\v2\x19.notifier.v1.WebSocketAckH\x00R\x03ack\x123\n" +
	"\x05error\x18\a \x01(\v2\x1b.notifier.v1.WebSocketErrorH\x00R\x05error\x129\n" +
	"\acontrol\x18\b \x01(\v2\x1d.notifier.v1.WebSocketControlH\x00R\acontrol\x128\n" +
	"\ttimestamp\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\ttimestampB\t\n" +
	"\acontent\"S\n" +
	"\x12WebSocketHeartbeat\x12\x1a\n" +
	"\bsequence\x18\x01 \x01(\x03R\bsequence\x12!\n" +
	"\ftimestamp_ms\x18\x02 \x01(\x03R\vtimestampMs\"]\n" +
	"\fWebSocketAck\x12\x19\n" +
	"\bframe_id\x18\x01 \x01(\tR\aframeId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"`\n" +
	"\x0eWebSocketError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12 \n" +
	"\vrecoverable\x18\x03 \x01(\bR\vrecoverable\"\xd3\x01\n" +
	"\x10WebSocketControl\x121\n" +
	"\x06action\x18\x01 \x01(\x0e2\x19.notifier.v1.StreamActionR\x06action\x12M\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2-.notifier.v1.WebSocketControl.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x90\x02\n" +
	"\x19StreamNotificationRequest\x123\n" +
	"\x06header\x18\x01 \x01(\v2\x19.notifier.v1.StreamHeaderH\x00R\x06header\x12F\n" +
	"\fnotification\x18\x02 \x01(\v2 .notifier.v1.NotificationPayloadH\x00R\fnotification\x126\n" +
	"\acontrol\x18\x03 \x01(\v2\x1a.notifier.v1.StreamControlH\x00R\acontrol\x123\n" +
	"\x06footer\x18\x04 \x01(\v2\x19.notifier.v1.StreamFooterH\x00R\x06footerB\t\n" +
	"\acontent\"\x89\x02\n" +
	"\fStreamHeader\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x1f\n" +
	"\vmerchant_id\x18\x02 \x01(\x03R\n" +
	"merchantId\x129\n" +
	"\n" +
	"start_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12C\n" +
	"\bmetadata\x18\x04 \x03(\v2'.notifier.v1.StreamHeader.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcd\x01\n" +
	"\rStreamControl\x121\n" +
	"\x06action\x18\x01 \x01(\x0e2\x19.notifier.v1.StreamActionR\x06action\x12J\n" +
	"\n" +
	"parameters\x18\x02 \x03(\v2*.notifier.v1.StreamControl.ParametersEntryR\n" +
	"parameters\x1a=\n" +
	"\x0fParametersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xae\x01\n" +
	"\fStreamFooter\x12\x1f\n" +
	"\vtotal_count\x18\x01 \x01(\x03R\n" +
	"totalCount\x12#\n" +
	"\rsuccess_count\x18\x02 \x01(\x03R\fsuccessCount\x12!\n" +
	"\ffailed_count\x18\x03 \x01(\x03R\vfailedCount\x125\n" +
	"\bend_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"\xd7\x01\n" +
	"\x1aStreamNotificationResponse\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12*\n" +
	"\x03ack\x18\x02 \x01(\v2\x16.notifier.v1.StreamAckH\x00R\x03ack\x120\n" +
	"\x05error\x18\x03 \x01(\v2\x18.notifier.v1.StreamErrorH\x00R\x05error\x123\n" +
	"\x06status\x18\x04 \x01(\v2\x19.notifier.v1.StreamStatusH\x00R\x06statusB\t\n" +
	"\acontent\"h\n" +
	"\tStreamAck\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"]\n" +
	"\vStreamError\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12 \n" +
	"\vrecoverable\x18\x03 \x01(\bR\vrecoverable\"\x81\x01\n" +
	"\fStreamStatus\x12%\n" +
	"\x0ereceived_count\x18\x01 \x01(\x03R\rreceivedCount\x12'\n" +
	"\x0fprocessed_count\x18\x02 \x01(\x03R\x0eprocessedCount\x12!\n" +
	"\ffailed_count\x18\x03 \x01(\x03R\vfailedCount\"\xda\x01\n" +
	"\x11RobotNotification\x12:\n" +
	"\apayload\x18\x01 \x01(\v2 .notifier.v1.NotificationPayloadR\apayload\x125\n" +
	"\n" +
	"robot_type\x18\x02 \x01(\x0e2\x16.notifier.v1.RobotTypeR\trobotType\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x03 \x01(\tR\tchannelId\x123\n" +
	"\amessage\x18\x04 \x01(\v2\x19.notifier.v1.RobotMessageR\amessage\"\xb7\x02\n" +
	"\fRobotMessage\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12=\n" +
	"\bpriority\x18\x03 \x01(\x0e2!.notifier.v1.NotificationPriorityR\bpriority\x122\n" +
	"\abuttons\x18\x04 \x03(\v2\x18.notifier.v1.RobotButtonR\abuttons\x12>\n" +
	"\vattachments\x18\x05 \x03(\v2\x1c.notifier.v1.RobotAttachmentR\vattachments\x12\x1f\n" +
	"\vmention_all\x18\x06 \x01(\bR\n" +
	"mentionAll\x12#\n" +
	"\rmention_users\x18\a \x03(\tR\fmentionUsers\"\x8c\x01\n" +
	"\x0fRobotAttachment\x12/\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1b.notifier.v1.AttachmentTypeR\x04type\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\"\xf6\x01\n" +
	"\rRobotCallback\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x1b\n" +
	"\tbutton_id\x18\x02 \x01(\tR\bbuttonId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x121\n" +
	"\x06action\x18\x04 \x01(\x0e2\x19.notifier.v1.ButtonActionR\x06action\x12\x14\n" +
	"\x05value\x18\x05 \x01(\tR\x05value\x12=\n" +
	"\ftriggered_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vtriggeredAtB8Z6github.com/og-game/game-proto/proto-gen-go/notifier/v1b\x06proto3"

var (
	file_notifier_v1_notifier_delivery_proto_rawDescOnce sync.Once
	file_notifier_v1_notifier_delivery_proto_rawDescData []byte
)

func file_notifier_v1_notifier_delivery_proto_rawDescGZIP() []byte {
	file_notifier_v1_notifier_delivery_proto_rawDescOnce.Do(func() {
		file_notifier_v1_notifier_delivery_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notifier_v1_notifier_delivery_proto_rawDesc), len(file_notifier_v1_notifier_delivery_proto_rawDesc)))
	})
	return file_notifier_v1_notifier_delivery_proto_rawDescData
}

var file_notifier_v1_notifier_delivery_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_notifier_v1_notifier_delivery_proto_goTypes = []any{
	(*NotificationPayload)(nil),        // 0: notifier.v1.NotificationPayload
	(*Header)(nil),                     // 1: notifier.v1.Header
	(*Body)(nil),                       // 2: notifier.v1.Body
	(*NotificationResponse)(nil),       // 3: notifier.v1.NotificationResponse
	(*BatchResult)(nil),                // 4: notifier.v1.BatchResult
	(*HttpNotificationRequest)(nil),    // 5: notifier.v1.HttpNotificationRequest
	(*HttpNotificationResponse)(nil),   // 6: notifier.v1.HttpNotificationResponse
	(*WebSocketFrame)(nil),             // 7: notifier.v1.WebSocketFrame
	(*WebSocketHeartbeat)(nil),         // 8: notifier.v1.WebSocketHeartbeat
	(*WebSocketAck)(nil),               // 9: notifier.v1.WebSocketAck
	(*WebSocketError)(nil),             // 10: notifier.v1.WebSocketError
	(*WebSocketControl)(nil),           // 11: notifier.v1.WebSocketControl
	(*StreamNotificationRequest)(nil),  // 12: notifier.v1.StreamNotificationRequest
	(*StreamHeader)(nil),               // 13: notifier.v1.StreamHeader
	(*StreamControl)(nil),              // 14: notifier.v1.StreamControl
	(*StreamFooter)(nil),               // 15: notifier.v1.StreamFooter
	(*StreamNotificationResponse)(nil), // 16: notifier.v1.StreamNotificationResponse
	(*StreamAck)(nil),                  // 17: notifier.v1.StreamAck
	(*StreamError)(nil),                // 18: notifier.v1.StreamError
	(*StreamStatus)(nil),               // 19: notifier.v1.StreamStatus
	(*RobotNotification)(nil),          // 20: notifier.v1.RobotNotification
	(*RobotMessage)(nil),               // 21: notifier.v1.RobotMessage
	(*RobotAttachment)(nil),            // 22: notifier.v1.RobotAttachment
	(*RobotCallback)(nil),              // 23: notifier.v1.RobotCallback
	nil,                                // 24: notifier.v1.Body.MetadataEntry
	nil,                                // 25: notifier.v1.WebSocketControl.ParametersEntry
	nil,                                // 26: notifier.v1.StreamHeader.MetadataEntry
	nil,                                // 27: notifier.v1.StreamControl.ParametersEntry
	(PushChannel)(0),                   // 28: notifier.v1.PushChannel
	(*timestamppb.Timestamp)(nil),      // 29: google.protobuf.Timestamp
	(NotificationCategory)(0),          // 30: notifier.v1.NotificationCategory
	(EventType)(0),                     // 31: notifier.v1.EventType
	(*anypb.Any)(nil),                  // 32: google.protobuf.Any
	(WebSocketFrameType)(0),            // 33: notifier.v1.WebSocketFrameType
	(StreamAction)(0),                  // 34: notifier.v1.StreamAction
	(RobotType)(0),                     // 35: notifier.v1.RobotType
	(NotificationPriority)(0),          // 36: notifier.v1.NotificationPriority
	(*RobotButton)(nil),                // 37: notifier.v1.RobotButton
	(AttachmentType)(0),                // 38: notifier.v1.AttachmentType
	(ButtonAction)(0),                  // 39: notifier.v1.ButtonAction
}
var file_notifier_v1_notifier_delivery_proto_depIdxs = []int32{
	1,  // 0: notifier.v1.NotificationPayload.header:type_name -> notifier.v1.Header
	2,  // 1: notifier.v1.NotificationPayload.body:type_name -> notifier.v1.Body
	2,  // 2: notifier.v1.NotificationPayload.batch_body:type_name -> notifier.v1.Body
	28, // 3: notifier.v1.Header.channel:type_name -> notifier.v1.PushChannel
	29, // 4: notifier.v1.Header.pushed_at:type_name -> google.protobuf.Timestamp
	30, // 5: notifier.v1.Body.category:type_name -> notifier.v1.NotificationCategory
	31, // 6: notifier.v1.Body.event_type:type_name -> notifier.v1.EventType
	29, // 7: notifier.v1.Body.timestamp:type_name -> google.protobuf.Timestamp
	32, // 8: notifier.v1.Body.data:type_name -> google.protobuf.Any
	24, // 9: notifier.v1.Body.metadata:type_name -> notifier.v1.Body.MetadataEntry
	29, // 10: notifier.v1.NotificationResponse.received_at:type_name -> google.protobuf.Timestamp
	4,  // 11: notifier.v1.NotificationResponse.batch_results:type_name -> notifier.v1.BatchResult
	0,  // 12: notifier.v1.HttpNotificationRequest.payload:type_name -> notifier.v1.NotificationPayload
	3,  // 13: notifier.v1.HttpNotificationResponse.response:type_name -> notifier.v1.NotificationResponse
	33, // 14: notifier.v1.WebSocketFrame.type:type_name -> notifier.v1.WebSocketFrameType
	0,  // 15: notifier.v1.WebSocketFrame.notification:type_name -> notifier.v1.NotificationPayload
	8,  // 16: notifier.v1.WebSocketFrame.heartbeat:type_name -> notifier.v1.WebSocketHeartbeat
	9,  // 17: notifier.v1.WebSocketFrame.ack:type_name -> notifier.v1.WebSocketAck
	10, // 18: notifier.v1.WebSocketFrame.error:type_name -> notifier.v1.WebSocketError
	11, // 19: notifier.v1.WebSocketFrame.control:type_name -> notifier.v1.WebSocketControl
	29, // 20: notifier.v1.WebSocketFrame.timestamp:type_name -> google.protobuf.Timestamp
	34, // 21: notifier.v1.WebSocketControl.action:type_name -> notifier.v1.StreamAction
	25, // 22: notifier.v1.WebSocketControl.parameters:type_name -> notifier.v1.WebSocketControl.ParametersEntry
	13, // 23: notifier.v1.StreamNotificationRequest.header:type_name -> notifier.v1.StreamHeader
	0,  // 24: notifier.v1.StreamNotificationRequest.notification:type_name -> notifier.v1.NotificationPayload
	14, // 25: notifier.v1.StreamNotificationRequest.control:type_name -> notifier.v1.StreamControl
	15, // 26: notifier.v1.StreamNotificationRequest.footer:type_name -> notifier.v1.StreamFooter
	29, // 27: notifier.v1.StreamHeader.start_time:type_name -> google.protobuf.Timestamp
	26, // 28: notifier.v1.StreamHeader.metadata:type_name -> notifier.v1.StreamHeader.MetadataEntry
	34, // 29: notifier.v1.StreamControl.action:type_name -> notifier.v1.StreamAction
	27, // 30: notifier.v1.StreamControl.parameters:type_name -> notifier.v1.StreamControl.ParametersEntry
	29, // 31: notifier.v1.StreamFooter.end_time:type_name -> google.protobuf.Timestamp
	17, // 32: notifier.v1.StreamNotificationResponse.ack:type_name -> notifier.v1.StreamAck
	18, // 33: notifier.v1.StreamNotificationResponse.error:type_name -> notifier.v1.StreamError
	19, // 34: notifier.v1.StreamNotificationResponse.status:type_name -> notifier.v1.StreamStatus
	0,  // 35: notifier.v1.RobotNotification.payload:type_name -> notifier.v1.NotificationPayload
	35, // 36: notifier.v1.RobotNotification.robot_type:type_name -> notifier.v1.RobotType
	21, // 37: notifier.v1.RobotNotification.message:type_name -> notifier.v1.RobotMessage
	36, // 38: notifier.v1.RobotMessage.priority:type_name -> notifier.v1.NotificationPriority
	37, // 39: notifier.v1.RobotMessage.buttons:type_name -> notifier.v1.RobotButton
	22, // 40: notifier.v1.RobotMessage.attachments:type_name -> notifier.v1.RobotAttachment
	38, // 41: notifier.v1.RobotAttachment.type:type_name -> notifier.v1.AttachmentType
	39, // 42: notifier.v1.RobotCallback.action:type_name -> notifier.v1.ButtonAction
	29, // 43: notifier.v1.RobotCallback.triggered_at:type_name -> google.protobuf.Timestamp
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_notifier_v1_notifier_delivery_proto_init() }
func file_notifier_v1_notifier_delivery_proto_init() {
	if File_notifier_v1_notifier_delivery_proto != nil {
		return
	}
	file_notifier_v1_notifier_types_proto_init()
	file_notifier_v1_notifier_delivery_proto_msgTypes[0].OneofWrappers = []any{}
	file_notifier_v1_notifier_delivery_proto_msgTypes[5].OneofWrappers = []any{}
	file_notifier_v1_notifier_delivery_proto_msgTypes[7].OneofWrappers = []any{
		(*WebSocketFrame_Notification)(nil),
		(*WebSocketFrame_Heartbeat)(nil),
		(*WebSocketFrame_Ack)(nil),
		(*WebSocketFrame_Error)(nil),
		(*WebSocketFrame_Control)(nil),
	}
	file_notifier_v1_notifier_delivery_proto_msgTypes[12].OneofWrappers = []any{
		(*StreamNotificationRequest_Header)(nil),
		(*StreamNotificationRequest_Notification)(nil),
		(*StreamNotificationRequest_Control)(nil),
		(*StreamNotificationRequest_Footer)(nil),
	}
	file_notifier_v1_notifier_delivery_proto_msgTypes[16].OneofWrappers = []any{
		(*StreamNotificationResponse_Ack)(nil),
		(*StreamNotificationResponse_Error)(nil),
		(*StreamNotificationResponse_Status)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notifier_v1_notifier_delivery_proto_rawDesc), len(file_notifier_v1_notifier_delivery_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_notifier_v1_notifier_delivery_proto_goTypes,
		DependencyIndexes: file_notifier_v1_notifier_delivery_proto_depIdxs,
		MessageInfos:      file_notifier_v1_notifier_delivery_proto_msgTypes,
	}.Build()
	File_notifier_v1_notifier_delivery_proto = out.File
	file_notifier_v1_notifier_delivery_proto_goTypes = nil
	file_notifier_v1_notifier_delivery_proto_depIdxs = nil
}
