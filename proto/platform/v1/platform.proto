syntax = "proto3";

package platform.v1;
option go_package = "github.com/og-game/game-proto/proto-gen-go/platform/v1";

message GetGameLinkReq {
  string third_game_id = 1; // 三方游戏id
  string user_id = 2; // 用户id
  string currency_code = 3; // 币种code
  string client_ip = 4; // ip
  string device_id = 5; // 设备号
  string language_code = 6; // 语言
  double transfer_balance = 7; // 转入金额
}

message GetGameLinkResp {
  string url = 1;
}

message GetUserBalanceReq {
  string user_id = 1; // 用户id
}

message GetUserBalanceResp {
  string user_id = 1; // 用户id
  int64 platform_id = 2; // 厂商id
  double balance = 3; // 余额
}

message TransferReq{
  string user_id = 1; // 用户id
  string currency_code = 2; // 币种code
  bool is_deposit = 4; // 是否存款 true 存款 false 取款
  double amount = 3; // 金额(正数)
}

message TransferResp {
  string trade_no = 1; // 交易订单号
}


message GameInfo {
  string third_game_id = 1; // 三方游戏ID
  string name = 2; // 游戏名称
  int64  state = 3; // 游戏状态
  int64  bet_state = 4; // 游戏投注状态
  int64  game_type = 5; // 游戏类型
}

message GetGameListReq {
}

message GetGameListResp {
  int64 platform_id = 1; // 厂商id
  repeated GameInfo game_info = 2; // 游戏列表
}

service PlatformInnerService {

  // 获取游戏链接
  rpc GetGameLink(GetGameLinkReq) returns(GetGameLinkResp);

  rpc GetUserBalance(GetUserBalanceReq)returns (GetUserBalanceResp);

  // 转账
  rpc Transfer(TransferReq) returns (TransferResp);

  // 获取厂商游戏列表
  rpc GetGameList(GetGameListReq) returns (GetGameListResp);

}

