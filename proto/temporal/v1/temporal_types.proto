syntax = "proto3";

package temporal.v1;
option go_package = "github.com/og-game/game-proto/proto-gen-go/temporal/v1";



// 执行模式
enum ExecutionMode {
  MODE_UNSPECIFIED = 0;   // 未知类型
  MODE_IMMEDIATE = 1;                      // 立即执行
  MODE_DELAYED = 2;                        // 延迟执行
  MODE_SCHEDULED = 3;                      // 调度执行 (Cron)
  MODE_AT_TIME = 4;                        // 指定时间执行
  MODE_BATCH = 5;                          // 批量执行
}

// 控制操作
enum ControlOperation {
  OPT_UNSPECIFIED = 0;   // 未知类型
  OPT_CANCEL = 1;                          // 优雅取消
  OPT_TERMINATE = 2;                       // 强制终止
  OPT_PAUSE = 3;                           // 暂停 (调度)
  OPT_RESUME = 4;                          // 恢复 (调度)
  OPT_RESET = 5;                           // 重置到某个点
}

// 控制结果
enum ControlResult {
  CONTROL_UNSPECIFIED = 0;   // 未知类型
  CONTROL_SUCCESS = 1;
  CONTROL_ALREADY_COMPLETED = 2;
  CONTROL_ALREADY_CANCELLED = 3;
  CONTROL_NOT_FOUND = 4;
  CONTROL_OPERATION_FAILED = 5;
}

// 查询类型
enum QueryType {
  QUERY_UNSPECIFIED = 0;   // 未知类型
  QUERY_STATUS = 1;                          // 查询状态
  QUERY_HISTORY = 2;                         // 查询历史
  QUERY_STACK_TRACE = 3;                     // 查询堆栈跟踪
}

// 工作流状态枚举
enum WorkflowState {
  STATE_UNSPECIFIED = 0;   // 未知类型
  STATE_RUNNING = 1;
  STATE_COMPLETED = 2;
  STATE_FAILED = 3;
  STATE_CANCELLED = 4;
  STATE_TERMINATED = 5;
  STATE_CONTINUED_AS_NEW = 6;
  STATE_TIMED_OUT = 7;
}

// 调度操作
enum ScheduleOperation {
  SCHEDULE_UNSPECIFIED = 0;   // 未知类型
  SCHEDULE_CREATE = 1;
  SCHEDULE_UPDATE = 2;
  SCHEDULE_DELETE = 3;
  SCHEDULE_PAUSE = 4;
  SCHEDULE_RESUME = 5;
}

// 重叠策略
enum OverlapPolicy {
  OVERLAP_UNSPECIFIED = 0;   // 未知类型
  OVERLAP_SKIP = 1;                            // 跳过
  OVERLAP_BUFFER_ONE = 2;                      // 缓存一个
  OVERLAP_BUFFER_ALL = 3;                      // 缓存全部
  OVERLAP_CANCEL_OTHER = 4;                    // 取消其他
  OVERLAP_TERMINATE_OTHER = 5;                 // 终止其他
  OVERLAP_ALLOW_ALL = 6;                       // 允许全部
}

// 调度状态
enum ScheduleState {
  _UNSPECIFIED = 0;   // 未知类型
  SCHEDULE_ACTIVE = 1;
  SCHEDULE_PAUSED = 2;
  SCHEDULE_DELETED = 3;
}



// 统一的工作流选项
message WorkflowOptions {
  int32 execution_timeout_seconds = 1;
  int32 run_timeout_seconds = 2;
  int32 task_timeout_seconds = 3;
  RetryPolicy retry_policy = 4;
}

// 统一的重试策略
message RetryPolicy {
  int32 initial_interval_seconds = 1;
  float backoff_coefficient = 2;
  int32 maximum_interval_seconds = 3;
  int32 maximum_attempts = 4;
  repeated string non_retryable_error_types = 5;
}
